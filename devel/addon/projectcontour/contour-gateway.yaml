# This file is generated from the individual YAML files by generate-gateway-deployment.sh. Do not
# edit this file directly but instead edit the source files and re-render.
#
# Generated from:
#       examples/contour/00-common.yaml
#       examples/contour/01-contour-config.yaml
#       examples/contour/01-crds.yaml
#       examples/contour/02-job-certgen.yaml
#       examples/contour/02-rbac.yaml
#       examples/contour/02-role-contour.yaml
#       examples/contour/02-service-contour.yaml
#       examples/contour/02-service-envoy.yaml
#       examples/contour/03-contour.yaml
#       examples/contour/03-envoy.yaml
#       examples/gateway/00-crds.yaml
#       examples/gateway/01-gatewayclass.yaml
#       examples/gateway/02-gateway.yaml

---
apiVersion: v1
kind: Namespace
metadata:
  name: projectcontour
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: contour
  namespace: projectcontour
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: envoy
  namespace: projectcontour

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: contour
  namespace: projectcontour
data:
  contour.yaml: |
    #
    # server:
    #   determine which XDS Server implementation to utilize in Contour.
    #   xds-server-type: contour
    #
    # Specify the Gateway API configuration.
    gateway:
      controllerName: projectcontour.io/projectcontour/contour
    #
    # should contour expect to be running inside a k8s cluster
    # incluster: true
    #
    # path to kubeconfig (if not running inside a k8s cluster)
    # kubeconfig: /path/to/.kube/config
    #
    # Disable RFC-compliant behavior to strip "Content-Length" header if
    # "Tranfer-Encoding: chunked" is also set.
    # disableAllowChunkedLength: false
    # Disable HTTPProxy permitInsecure field
    disablePermitInsecure: false
    tls:
    # minimum TLS version that Contour will negotiate
    # minimum-protocol-version: "1.2"
    # TLS ciphers to be supported by Envoy TLS listeners when negotiating
    # TLS 1.2.
    # cipher-suites:
    # - '[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]'
    # - '[ECDHE-RSA-AES128-GCM-SHA256|ECDHE-RSA-CHACHA20-POLY1305]'
    # - 'ECDHE-ECDSA-AES256-GCM-SHA384'
    # - 'ECDHE-RSA-AES256-GCM-SHA384'
    # Defines the Kubernetes name/namespace matching a secret to use
    # as the fallback certificate when requests which don't match the
    # SNI defined for a vhost.
      fallback-certificate:
    #   name: fallback-secret-name
    #   namespace: projectcontour
      envoy-client-certificate:
    #   name: envoy-client-cert-secret-name
    #   namespace: projectcontour
    # The following config shows the defaults for the leader election.
    # leaderelection:
    #   configmap-name: leader-elect
    #   configmap-namespace: projectcontour
    ####
    # ExternalName Services are disabled by default due to CVE-2021-XXXXX
    # You can re-enable them by setting this setting to `true`.
    # This is not recommended without understanding the security implications.
    # Please see the advisory at https://github.com/projectcontour/contour/security/advisories/GHSA-5ph6-qq5x-7jwc for the details.
    # enableExternalNameService: false
    ##
    # Address to be placed in status.loadbalancer field of Ingress objects.
    # May be either a literal IP address or a host name.
    # The value will be placed directly into the relevant field inside the status.loadBalancer struct.
    # ingress-status-address: local.projectcontour.io
    ### Logging options
    # Default setting
    accesslog-format: envoy
    # The default access log format is defined by Envoy but it can be customized by setting following variable.
    # accesslog-format-string: "...\n"
    # To enable JSON logging in Envoy
    # accesslog-format: json
    # The default fields that will be logged are specified below.
    # To customise this list, just add or remove entries.
    # The canonical list is available at
    # https://godoc.org/github.com/projectcontour/contour/internal/envoy#JSONFields
    # json-fields:
    #   - "@timestamp"
    #   - "authority"
    #   - "bytes_received"
    #   - "bytes_sent"
    #   - "downstream_local_address"
    #   - "downstream_remote_address"
    #   - "duration"
    #   - "method"
    #   - "path"
    #   - "protocol"
    #   - "request_id"
    #   - "requested_server_name"
    #   - "response_code"
    #   - "response_flags"
    #   - "uber_trace_id"
    #   - "upstream_cluster"
    #   - "upstream_host"
    #   - "upstream_local_address"
    #   - "upstream_service_time"
    #   - "user_agent"
    #   - "x_forwarded_for"
    #
    # default-http-versions:
    # - "HTTP/2"
    # - "HTTP/1.1"
    #
    # The following shows the default proxy timeout settings.
    # timeouts:
    #   request-timeout: infinity
    #   connection-idle-timeout: 60s
    #   stream-idle-timeout: 5m
    #   max-connection-duration: infinity
    #   delayed-close-timeout: 1s
    #   connection-shutdown-grace-period: 5s
    #
    # Envoy cluster settings.
    # cluster:
    #   configure the cluster dns lookup family
    #   valid options are: auto (default), v4, v6
    #   dns-lookup-family: auto
    #
    # Envoy network settings.
    # network:
    #   Configure the number of additional ingress proxy hops from the
    #   right side of the x-forwarded-for HTTP header to trust.
    #   num-trusted-hops: 0
    #   Configure the port used to access the Envoy Admin interface.
    #   admin-port: 9001
    #
    # Configure an optional global rate limit service.
    # rateLimitService:
    #   Identifies the extension service defining the rate limit service,
    #   formatted as <namespace>/<name>.
    #   extensionService: projectcontour/ratelimit
    #   Defines the rate limit domain to pass to the rate limit service.
    #   Acts as a container for a set of rate limit definitions within
    #   the RLS.
    #   domain: contour
    #   Defines whether to allow requests to proceed when the rate limit
    #   service fails to respond with a valid rate limit decision within
    #   the timeout defined on the extension service.
    #   failOpen: false
    #   Defines whether to include the X-RateLimit headers X-RateLimit-Limit,
    #   X-RateLimit-Remaining, and X-RateLimit-Reset (as defined by the IETF
    #   Internet-Draft linked below), on responses to clients when the Rate
    #   Limit Service is consulted for a request.
    #   ref. https://tools.ietf.org/id/draft-polli-ratelimit-headers-03.html
    #   enableXRateLimitHeaders: false
    #
    # Global Policy settings.
    # policy:
    #   # Default headers to set on all requests (unless set/removed on the HTTPProxy object itself)
    #   request-headers:
    #     set:
    #       # example: the hostname of the Envoy instance that proxied the request
    #       X-Envoy-Hostname: %HOSTNAME%
    #       # example: add a l5d-dst-override header to instruct Linkerd what service the request is destined for
    #       l5d-dst-override: %CONTOUR_SERVICE_NAME%.%CONTOUR_NAMESPACE%.svc.cluster.local:%CONTOUR_SERVICE_PORT%
    #   # default headers to set on all responses (unless set/removed on the HTTPProxy object itself)
    #   response-headers:
    #     set:
    #       # example: Envoy flags that provide additional details about the response or connection
    #       X-Envoy-Response-Flags: %RESPONSE_FLAGS%
    #

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: contourconfigurations.projectcontour.io
spec:
  preserveUnknownFields: false
  group: projectcontour.io
  names:
    kind: ContourConfiguration
    listKind: ContourConfigurationList
    plural: contourconfigurations
    shortNames:
    - contourconfig
    singular: contourconfiguration
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ContourConfiguration is the schema for a Contour instance.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ContourConfigurationSpec represents a configuration of a
              Contour controller. It contains most of all the options that can be
              customized, the other remaining options being command line flags.
            properties:
              debug:
                default:
                  kubernetesLogLevel: 0
                  logLevel: info
                description: Debug contains parameters to enable debug logging and
                  debug interfaces inside Contour.
                properties:
                  address:
                    description: Defines the Contour debug address interface.
                    type: string
                  kubernetesLogLevel:
                    default: 0
                    description: "KubernetesDebugLogLevel defines the log level which
                      Contour will use when outputting Kubernetes specific log information.
                      \n Details: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-instrumentation/logging.md"
                    maximum: 9
                    minimum: 0
                    type: integer
                  logLevel:
                    description: DebugLogLevel defines the log level which Contour
                      will use when outputting log information.
                    enum:
                    - info
                    - debug
                    type: string
                  port:
                    description: Defines the Contour debug address port.
                    type: integer
                required:
                - logLevel
                type: object
              enableExternalNameService:
                default: false
                description: EnableExternalNameService allows processing of ExternalNameServices
                  Defaults to disabled for security reasons.
                type: boolean
              envoy:
                default:
                  cluster:
                    dnsLookupFamily: auto
                  defaultHTTPVersions:
                  - HTTP/1.1
                  - HTTP/2
                  health:
                    address: 0.0.0.0
                    port: 8002
                  http:
                    accessLog: /dev/stdout
                    address: 0.0.0.0
                    port: 8080
                  https:
                    accessLog: /dev/stdout
                    address: 0.0.0.0
                    port: 8443
                  listener:
                    connectionBalancer: ""
                    disableAllowChunkedLength: false
                    tls:
                      cipherSuites:
                      - '[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]'
                      - '[ECDHE-RSA-AES128-GCM-SHA256|ECDHE-RSA-CHACHA20-POLY1305]'
                      - ECDHE-ECDSA-AES256-GCM-SHA384
                      - ECDHE-RSA-AES256-GCM-SHA384
                      minimumProtocolVersion: "1.2"
                    useProxyProtocol: false
                  logging:
                    accessLogFormat: envoy
                  metrics:
                    address: 0.0.0.0
                    port: 8002
                  network:
                    adminPort: 9001
                  service:
                    name: envoy
                    namespace: projectcontour
                description: Envoy contains parameters for Envoy as well as how to
                  optionally configure a managed Envoy fleet.
                properties:
                  clientCertificate:
                    description: ClientCertificate defines the namespace/name of the
                      Kubernetes secret containing the client certificate and private
                      key to be used when establishing TLS connection to upstream
                      cluster.
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  cluster:
                    description: Cluster holds various configurable Envoy cluster
                      values that can be set in the config file.
                    properties:
                      dnsLookupFamily:
                        default: auto
                        description: "DNSLookupFamily defines how external names are
                          looked up When configured as V4, the DNS resolver will only
                          perform a lookup for addresses in the IPv4 family. If V6
                          is configured, the DNS resolver will only perform a lookup
                          for addresses in the IPv6 family. If AUTO is configured,
                          the DNS resolver will first perform a lookup for addresses
                          in the IPv6 family and fallback to a lookup for addresses
                          in the IPv4 family. Note: This only applies to externalName
                          clusters. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto.html#envoy-v3-api-enum-config-cluster-v3-cluster-dnslookupfamily
                          for more information."
                        enum:
                        - auto
                        - v4
                        - v6
                        type: string
                    required:
                    - dnsLookupFamily
                    type: object
                  defaultHTTPVersions:
                    description: DefaultHTTPVersions defines the default set of HTTPS
                      versions the proxy should accept. HTTP versions are strings
                      of the form "HTTP/xx". Supported versions are "HTTP/1.1" and
                      "HTTP/2".
                    items:
                      description: HTTPVersionType is the name of a supported HTTP
                        version.
                      enum:
                      - HTTP/1.1
                      - HTTP/2
                      type: string
                    type: array
                  health:
                    default:
                      address: 0.0.0.0
                      port: 8002
                    description: Health defines the endpoint Envoy uses to serve health
                      checks.
                    properties:
                      address:
                        description: Defines the health address interface.
                        minLength: 1
                        type: string
                      port:
                        description: Defines the health port.
                        type: integer
                    required:
                    - address
                    - port
                    type: object
                  http:
                    default:
                      accessLog: /dev/stdout
                      address: 0.0.0.0
                      port: 8080
                    description: Defines the HTTP Listener for Envoy.
                    properties:
                      accessLog:
                        description: AccessLog defines where Envoy logs are outputted
                          for this listener.
                        type: string
                      address:
                        description: Defines an Envoy Listener Address.
                        minLength: 1
                        type: string
                      port:
                        description: Defines an Envoy listener Port.
                        type: integer
                    required:
                    - accessLog
                    - address
                    - port
                    type: object
                  https:
                    default:
                      accessLog: /dev/stdout
                      address: 0.0.0.0
                      port: 8443
                    description: Defines the HTTP Listener for Envoy.
                    properties:
                      accessLog:
                        description: AccessLog defines where Envoy logs are outputted
                          for this listener.
                        type: string
                      address:
                        description: Defines an Envoy Listener Address.
                        minLength: 1
                        type: string
                      port:
                        description: Defines an Envoy listener Port.
                        type: integer
                    required:
                    - accessLog
                    - address
                    - port
                    type: object
                  listener:
                    description: Listener hold various configurable Envoy listener
                      values.
                    properties:
                      connectionBalancer:
                        description: ConnectionBalancer. If the value is exact, the
                          listener will use the exact connection balancer See https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/listener.proto#envoy-api-msg-listener-connectionbalanceconfig
                          for more information.
                        enum:
                        - ""
                        - exact
                        type: string
                      disableAllowChunkedLength:
                        description: 'DisableAllowChunkedLength disables the RFC-compliant
                          Envoy behavior to strip the "Content-Length" header if "Transfer-Encoding:
                          chunked" is also set. This is an emergency off-switch to
                          revert back to Envoy''s default behavior in case of failures.
                          Please file an issue if failures are encountered. See: https://github.com/projectcontour/contour/issues/3221'
                        type: boolean
                      tls:
                        description: TLS holds various configurable Envoy TLS listener
                          values.
                        properties:
                          cipherSuites:
                            description: "CipherSuites defines the TLS ciphers to
                              be supported by Envoy TLS listeners when negotiating
                              TLS 1.2. Ciphers are validated against the set that
                              Envoy supports by default. This parameter should only
                              be used by advanced users. Note that these will be ignored
                              when TLS 1.3 is in use. \n See: https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/transport_sockets/tls/v3/common.proto#extensions-transport-sockets-tls-v3-tlsparameters
                              Note: This list is a superset of what is valid for stock
                              Envoy builds and those using BoringSSL FIPS."
                            items:
                              enum:
                              - '[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]'
                              - '[ECDHE-RSA-AES128-GCM-SHA256|ECDHE-RSA-CHACHA20-POLY1305]'
                              - ECDHE-ECDSA-AES128-GCM-SHA256
                              - ECDHE-RSA-AES128-GCM-SHA256
                              - ECDHE-ECDSA-AES128-SHA
                              - ECDHE-RSA-AES128-SHA
                              - AES128-GCM-SHA256
                              - AES128-SHA
                              - ECDHE-ECDSA-AES256-GCM-SHA384
                              - ECDHE-RSA-AES256-GCM-SHA384
                              - ECDHE-ECDSA-AES256-SHA
                              - ECDHE-RSA-AES256-SHA
                              - AES256-GCM-SHA384
                              - AES256-SHA
                              type: string
                            type: array
                          minimumProtocolVersion:
                            description: MinimumProtocolVersion is the minimum TLS
                              version this vhost should negotiate. Valid options are
                              `1.2` (default) and `1.3`.
                            enum:
                            - "1.2"
                            - "1.3"
                            type: string
                        required:
                        - cipherSuites
                        - minimumProtocolVersion
                        type: object
                      useProxyProtocol:
                        description: Use PROXY protocol for all listeners.
                        type: boolean
                    required:
                    - connectionBalancer
                    - disableAllowChunkedLength
                    - tls
                    - useProxyProtocol
                    type: object
                  logging:
                    description: Logging defines how Envoy's logs can be configured.
                    properties:
                      accessLogFormat:
                        description: AccessLogFormat sets the global access log format.
                          Valid options are 'envoy' or 'json'
                        enum:
                        - envoy
                        - json
                        type: string
                      accessLogFormatString:
                        description: AccessLogFormatString sets the access log format
                          when format is set to `envoy`. When empty, Envoy's default
                          format is used.
                        type: string
                      jsonFields:
                        description: AccessLogFields sets the fields that JSON logging
                          will output when AccessLogFormat is json.
                        items:
                          type: string
                        type: array
                    required:
                    - accessLogFormat
                    type: object
                  metrics:
                    default:
                      address: 0.0.0.0
                      port: 8002
                    description: Metrics defines the endpoint Envoy uses to serve
                      metrics.
                    properties:
                      address:
                        description: Defines the metrics address interface.
                        maxLength: 253
                        minLength: 1
                        type: string
                      port:
                        description: Defines the metrics port.
                        type: integer
                      tls:
                        description: TLS holds TLS file config details. Metrics and
                          health endpoints cannot have same port number when metrics
                          is served over HTTPS.
                        properties:
                          caFile:
                            description: CA filename.
                            type: string
                          certFile:
                            description: Client certificate filename.
                            type: string
                          keyFile:
                            description: Client key filename.
                            type: string
                        type: object
                    required:
                    - address
                    - port
                    type: object
                  network:
                    description: Network holds various configurable Envoy network
                      values.
                    properties:
                      adminPort:
                        default: 9001
                        description: Configure the port used to access the Envoy Admin
                          interface. If configured to port "0" then the admin interface
                          is disabled.
                        type: integer
                      numTrustedHops:
                        description: "XffNumTrustedHops defines the number of additional
                          ingress proxy hops from the right side of the x-forwarded-for
                          HTTP header to trust when determining the origin client’s
                          IP address. \n See https://www.envoyproxy.io/docs/envoy/v1.17.0/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto?highlight=xff_num_trusted_hops
                          for more information."
                        format: int32
                        type: integer
                    required:
                    - adminPort
                    type: object
                  service:
                    default:
                      name: envoy
                      namespace: projectcontour
                    description: Service holds Envoy service parameters for setting
                      Ingress status.
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  timeouts:
                    description: Timeouts holds various configurable timeouts that
                      can be set in the config file.
                    properties:
                      connectionIdleTimeout:
                        description: "ConnectionIdleTimeout defines how long the proxy
                          should wait while there are no active requests (for HTTP/1.1)
                          or streams (for HTTP/2) before terminating an HTTP connection.
                          Set to \"infinity\" to disable the timeout entirely. \n
                          See https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/protocol.proto#envoy-v3-api-field-config-core-v3-httpprotocoloptions-idle-timeout
                          for more information."
                        type: string
                      connectionShutdownGracePeriod:
                        description: "ConnectionShutdownGracePeriod defines how long
                          the proxy will wait between sending an initial GOAWAY frame
                          and a second, final GOAWAY frame when terminating an HTTP/2
                          connection. During this grace period, the proxy will continue
                          to respond to new streams. After the final GOAWAY frame
                          has been sent, the proxy will refuse new streams. \n See
                          https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-field-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-drain-timeout
                          for more information."
                        type: string
                      delayedCloseTimeout:
                        description: "DelayedCloseTimeout defines how long envoy will
                          wait, once connection close processing has been initiated,
                          for the downstream peer to close the connection before Envoy
                          closes the socket associated with the connection. \n Setting
                          this timeout to 'infinity' will disable it, equivalent to
                          setting it to '0' in Envoy. Leaving it unset will result
                          in the Envoy default value being used. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-field-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-delayed-close-timeout
                          for more information."
                        type: string
                      maxConnectionDuration:
                        description: "MaxConnectionDuration defines the maximum period
                          of time after an HTTP connection has been established from
                          the client to the proxy before it is closed by the proxy,
                          regardless of whether there has been activity or not. Omit
                          or set to \"infinity\" for no max duration. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/protocol.proto#envoy-v3-api-field-config-core-v3-httpprotocoloptions-max-connection-duration
                          for more information."
                        type: string
                      requestTimeout:
                        description: "RequestTimeout sets the client request timeout
                          globally for Contour. Note that this is a timeout for the
                          entire request, not an idle timeout. Omit or set to \"infinity\"
                          to disable the timeout entirely. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-field-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-request-timeout
                          for more information."
                        type: string
                      streamIdleTimeout:
                        description: "StreamIdleTimeout defines how long the proxy
                          should wait while there is no request activity (for HTTP/1.1)
                          or stream activity (for HTTP/2) before terminating the HTTP
                          request or stream. Set to \"infinity\" to disable the timeout
                          entirely. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-field-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-stream-idle-timeout
                          for more information."
                        type: string
                    type: object
                required:
                - cluster
                - defaultHTTPVersions
                - http
                - https
                - listener
                - logging
                - metrics
                - network
                - service
                type: object
              gateway:
                description: Gateway contains parameters for the gateway-api Gateway
                  that Contour is configured to serve traffic.
                properties:
                  controllerName:
                    default: projectcontour.io/projectcontour/contour
                    description: ControllerName is used to determine whether Contour
                      should reconcile a GatewayClass. The string takes the form of
                      "projectcontour.io/<namespace>/contour". If unset, the gatewayclass
                      controller will not be started.
                    type: string
                required:
                - controllerName
                type: object
              health:
                default:
                  address: 0.0.0.0
                  port: 8000
                description: Health defines the endpoints Contour uses to serve health
                  checks.
                properties:
                  address:
                    description: Defines the health address interface.
                    minLength: 1
                    type: string
                  port:
                    description: Defines the health port.
                    type: integer
                required:
                - address
                - port
                type: object
              httpproxy:
                default:
                  disablePermitInsecure: false
                description: HTTPProxy defines parameters on HTTPProxy.
                properties:
                  disablePermitInsecure:
                    description: DisablePermitInsecure disables the use of the permitInsecure
                      field in HTTPProxy.
                    type: boolean
                  fallbackCertificate:
                    description: FallbackCertificate defines the namespace/name of
                      the Kubernetes secret to use as fallback when a non-SNI request
                      is received.
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  rootNamespaces:
                    description: Restrict Contour to searching these namespaces for
                      root ingress routes.
                    items:
                      type: string
                    type: array
                required:
                - disablePermitInsecure
                type: object
              ingress:
                description: Ingress contains parameters for ingress options.
                properties:
                  className:
                    description: Ingress Class Name Contour should use.
                    type: string
                  statusAddress:
                    description: Address to set in Ingress object status.
                    type: string
                type: object
              metrics:
                default:
                  address: 0.0.0.0
                  port: 8000
                description: Metrics defines the endpoint Contour uses to serve metrics.
                properties:
                  address:
                    description: Defines the metrics address interface.
                    maxLength: 253
                    minLength: 1
                    type: string
                  port:
                    description: Defines the metrics port.
                    type: integer
                  tls:
                    description: TLS holds TLS file config details. Metrics and health
                      endpoints cannot have same port number when metrics is served
                      over HTTPS.
                    properties:
                      caFile:
                        description: CA filename.
                        type: string
                      certFile:
                        description: Client certificate filename.
                        type: string
                      keyFile:
                        description: Client key filename.
                        type: string
                    type: object
                required:
                - address
                - port
                type: object
              policy:
                description: Policy specifies default policy applied if not overridden
                  by the user
                properties:
                  applyToIngress:
                    description: ApplyToIngress determines if the Policies will apply
                      to ingress objects
                    type: boolean
                  requestHeaders:
                    description: RequestHeadersPolicy defines the request headers
                      set/removed on all routes
                    properties:
                      remove:
                        items:
                          type: string
                        type: array
                      set:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                  responseHeaders:
                    description: ResponseHeadersPolicy defines the response headers
                      set/removed on all routes
                    properties:
                      remove:
                        items:
                          type: string
                        type: array
                      set:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                type: object
              rateLimitService:
                description: RateLimitService optionally holds properties of the Rate
                  Limit Service to be used for global rate limiting.
                properties:
                  domain:
                    description: Domain is passed to the Rate Limit Service.
                    type: string
                  enableXRateLimitHeaders:
                    description: "EnableXRateLimitHeaders defines whether to include
                      the X-RateLimit headers X-RateLimit-Limit, X-RateLimit-Remaining,
                      and X-RateLimit-Reset (as defined by the IETF Internet-Draft
                      linked below), on responses to clients when the Rate Limit Service
                      is consulted for a request. \n ref. https://tools.ietf.org/id/draft-polli-ratelimit-headers-03.html"
                    type: boolean
                  extensionService:
                    description: ExtensionService identifies the extension service
                      defining the RLS.
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  failOpen:
                    description: FailOpen defines whether to allow requests to proceed
                      when the Rate Limit Service fails to respond with a valid rate
                      limit decision within the timeout defined on the extension service.
                    type: boolean
                required:
                - domain
                - enableXRateLimitHeaders
                - failOpen
                type: object
              xdsServer:
                default:
                  address: 0.0.0.0
                  port: 8001
                  tls:
                    caFile: /certs/ca.crt
                    certFile: /certs/tls.crt
                    insecure: false
                    keyFile: /certs/tls.key
                  type: contour
                description: XDSServer contains parameters for the xDS server.
                properties:
                  address:
                    description: Defines the xDS gRPC API address which Contour will
                      serve.
                    minLength: 1
                    type: string
                  port:
                    description: Defines the xDS gRPC API port which Contour will
                      serve.
                    type: integer
                  tls:
                    description: TLS holds TLS file config details.
                    properties:
                      caFile:
                        description: CA filename.
                        type: string
                      certFile:
                        description: Client certificate filename.
                        type: string
                      insecure:
                        description: Allow serving the xDS gRPC API without TLS.
                        type: boolean
                      keyFile:
                        description: Client key filename.
                        type: string
                    required:
                    - insecure
                    type: object
                  type:
                    description: Defines the XDSServer to use for `contour serve`.
                    enum:
                    - contour
                    - envoy
                    type: string
                required:
                - address
                - port
                - type
                type: object
            type: object
          status:
            description: ContourConfigurationStatus defines the observed state of
              a ContourConfiguration resource.
            properties:
              conditions:
                description: "Conditions contains the current status of the Contour
                  resource. \n Contour will update a single condition, `Valid`, that
                  is in normal-true polarity. \n Contour will not modify any other
                  Conditions set in this block, in case some other controller wants
                  to add a Condition."
                items:
                  description: "DetailedCondition is an extension of the normal Kubernetes
                    conditions, with two extra fields to hold sub-conditions, which
                    provide more detailed reasons for the state (True or False) of
                    the condition. \n `errors` holds information about sub-conditions
                    which are fatal to that condition and render its state False.
                    \n `warnings` holds information about sub-conditions which are
                    not fatal to that condition and do not force the state to be False.
                    \n Remember that Conditions have a type, a status, and a reason.
                    \n The type is the type of the condition, the most important one
                    in this CRD set is `Valid`. `Valid` is a positive-polarity condition:
                    when it is `status: true` there are no problems. \n In more detail,
                    `status: true` means that the object is has been ingested into
                    Contour with no errors. `warnings` may still be present, and will
                    be indicated in the Reason field. There must be zero entries in
                    the `errors` slice in this case. \n `Valid`, `status: false` means
                    that the object has had one or more fatal errors during processing
                    into Contour.  The details of the errors will be present under
                    the `errors` field. There must be at least one error in the `errors`
                    slice if `status` is `false`. \n For DetailedConditions of types
                    other than `Valid`, the Condition must be in the negative polarity.
                    When they have `status` `true`, there is an error. There must
                    be at least one entry in the `errors` Subcondition slice. When
                    they have `status` `false`, there are no serious errors, and there
                    must be zero entries in the `errors` slice. In either case, there
                    may be entries in the `warnings` slice. \n Regardless of the polarity,
                    the `reason` and `message` fields must be updated with either
                    the detail of the reason (if there is one and only one entry in
                    total across both the `errors` and `warnings` slices), or `MultipleReasons`
                    if there is more than one entry."
                  properties:
                    errors:
                      description: "Errors contains a slice of relevant error subconditions
                        for this object. \n Subconditions are expected to appear when
                        relevant (when there is a error), and disappear when not relevant.
                        An empty slice here indicates no errors."
                      items:
                        description: "SubCondition is a Condition-like type intended
                          for use as a subcondition inside a DetailedCondition. \n
                          It contains a subset of the Condition fields. \n It is intended
                          for warnings and errors, so `type` names should use abnormal-true
                          polarity, that is, they should be of the form \"ErrorPresent:
                          true\". \n The expected lifecycle for these errors is that
                          they should only be present when the error or warning is,
                          and should be removed when they are not relevant."
                        properties:
                          message:
                            description: "Message is a human readable message indicating
                              details about the transition. \n This may be an empty
                              string."
                            maxLength: 32768
                            type: string
                          reason:
                            description: "Reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. \n The value
                              should be a CamelCase string. \n This field may not
                              be empty."
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: Status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`.
                              \n This must be in abnormal-true polarity, that is,
                              `ErrorFound` or `controller.io/ErrorFound`. \n The regex
                              it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      type: array
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                    warnings:
                      description: "Warnings contains a slice of relevant warning
                        subconditions for this object. \n Subconditions are expected
                        to appear when relevant (when there is a warning), and disappear
                        when not relevant. An empty slice here indicates no warnings."
                      items:
                        description: "SubCondition is a Condition-like type intended
                          for use as a subcondition inside a DetailedCondition. \n
                          It contains a subset of the Condition fields. \n It is intended
                          for warnings and errors, so `type` names should use abnormal-true
                          polarity, that is, they should be of the form \"ErrorPresent:
                          true\". \n The expected lifecycle for these errors is that
                          they should only be present when the error or warning is,
                          and should be removed when they are not relevant."
                        properties:
                          message:
                            description: "Message is a human readable message indicating
                              details about the transition. \n This may be an empty
                              string."
                            maxLength: 32768
                            type: string
                          reason:
                            description: "Reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. \n The value
                              should be a CamelCase string. \n This field may not
                              be empty."
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: Status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`.
                              \n This must be in abnormal-true polarity, that is,
                              `ErrorFound` or `controller.io/ErrorFound`. \n The regex
                              it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      type: array
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: contourdeployments.projectcontour.io
spec:
  preserveUnknownFields: false
  group: projectcontour.io
  names:
    kind: ContourDeployment
    listKind: ContourDeploymentList
    plural: contourdeployments
    shortNames:
    - contourdeploy
    singular: contourdeployment
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ContourDeployment is the schema for a Contour Deployment.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ContourDeploymentSpec defines the parameters of how a Contour
              instance should be configured.
            properties:
              config:
                description: Config is the config that the instances of Contour are
                  to utilize.
                properties:
                  debug:
                    default:
                      kubernetesLogLevel: 0
                      logLevel: info
                    description: Debug contains parameters to enable debug logging
                      and debug interfaces inside Contour.
                    properties:
                      address:
                        description: Defines the Contour debug address interface.
                        type: string
                      kubernetesLogLevel:
                        default: 0
                        description: "KubernetesDebugLogLevel defines the log level
                          which Contour will use when outputting Kubernetes specific
                          log information. \n Details: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-instrumentation/logging.md"
                        maximum: 9
                        minimum: 0
                        type: integer
                      logLevel:
                        description: DebugLogLevel defines the log level which Contour
                          will use when outputting log information.
                        enum:
                        - info
                        - debug
                        type: string
                      port:
                        description: Defines the Contour debug address port.
                        type: integer
                    required:
                    - logLevel
                    type: object
                  enableExternalNameService:
                    default: false
                    description: EnableExternalNameService allows processing of ExternalNameServices
                      Defaults to disabled for security reasons.
                    type: boolean
                  envoy:
                    default:
                      cluster:
                        dnsLookupFamily: auto
                      defaultHTTPVersions:
                      - HTTP/1.1
                      - HTTP/2
                      health:
                        address: 0.0.0.0
                        port: 8002
                      http:
                        accessLog: /dev/stdout
                        address: 0.0.0.0
                        port: 8080
                      https:
                        accessLog: /dev/stdout
                        address: 0.0.0.0
                        port: 8443
                      listener:
                        connectionBalancer: ""
                        disableAllowChunkedLength: false
                        tls:
                          cipherSuites:
                          - '[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]'
                          - '[ECDHE-RSA-AES128-GCM-SHA256|ECDHE-RSA-CHACHA20-POLY1305]'
                          - ECDHE-ECDSA-AES256-GCM-SHA384
                          - ECDHE-RSA-AES256-GCM-SHA384
                          minimumProtocolVersion: "1.2"
                        useProxyProtocol: false
                      logging:
                        accessLogFormat: envoy
                      metrics:
                        address: 0.0.0.0
                        port: 8002
                      network:
                        adminPort: 9001
                      service:
                        name: envoy
                        namespace: projectcontour
                    description: Envoy contains parameters for Envoy as well as how
                      to optionally configure a managed Envoy fleet.
                    properties:
                      clientCertificate:
                        description: ClientCertificate defines the namespace/name
                          of the Kubernetes secret containing the client certificate
                          and private key to be used when establishing TLS connection
                          to upstream cluster.
                        properties:
                          name:
                            type: string
                          namespace:
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                      cluster:
                        description: Cluster holds various configurable Envoy cluster
                          values that can be set in the config file.
                        properties:
                          dnsLookupFamily:
                            default: auto
                            description: "DNSLookupFamily defines how external names
                              are looked up When configured as V4, the DNS resolver
                              will only perform a lookup for addresses in the IPv4
                              family. If V6 is configured, the DNS resolver will only
                              perform a lookup for addresses in the IPv6 family. If
                              AUTO is configured, the DNS resolver will first perform
                              a lookup for addresses in the IPv6 family and fallback
                              to a lookup for addresses in the IPv4 family. Note:
                              This only applies to externalName clusters. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto.html#envoy-v3-api-enum-config-cluster-v3-cluster-dnslookupfamily
                              for more information."
                            enum:
                            - auto
                            - v4
                            - v6
                            type: string
                        required:
                        - dnsLookupFamily
                        type: object
                      defaultHTTPVersions:
                        description: DefaultHTTPVersions defines the default set of
                          HTTPS versions the proxy should accept. HTTP versions are
                          strings of the form "HTTP/xx". Supported versions are "HTTP/1.1"
                          and "HTTP/2".
                        items:
                          description: HTTPVersionType is the name of a supported
                            HTTP version.
                          enum:
                          - HTTP/1.1
                          - HTTP/2
                          type: string
                        type: array
                      health:
                        default:
                          address: 0.0.0.0
                          port: 8002
                        description: Health defines the endpoint Envoy uses to serve
                          health checks.
                        properties:
                          address:
                            description: Defines the health address interface.
                            minLength: 1
                            type: string
                          port:
                            description: Defines the health port.
                            type: integer
                        required:
                        - address
                        - port
                        type: object
                      http:
                        default:
                          accessLog: /dev/stdout
                          address: 0.0.0.0
                          port: 8080
                        description: Defines the HTTP Listener for Envoy.
                        properties:
                          accessLog:
                            description: AccessLog defines where Envoy logs are outputted
                              for this listener.
                            type: string
                          address:
                            description: Defines an Envoy Listener Address.
                            minLength: 1
                            type: string
                          port:
                            description: Defines an Envoy listener Port.
                            type: integer
                        required:
                        - accessLog
                        - address
                        - port
                        type: object
                      https:
                        default:
                          accessLog: /dev/stdout
                          address: 0.0.0.0
                          port: 8443
                        description: Defines the HTTP Listener for Envoy.
                        properties:
                          accessLog:
                            description: AccessLog defines where Envoy logs are outputted
                              for this listener.
                            type: string
                          address:
                            description: Defines an Envoy Listener Address.
                            minLength: 1
                            type: string
                          port:
                            description: Defines an Envoy listener Port.
                            type: integer
                        required:
                        - accessLog
                        - address
                        - port
                        type: object
                      listener:
                        description: Listener hold various configurable Envoy listener
                          values.
                        properties:
                          connectionBalancer:
                            description: ConnectionBalancer. If the value is exact,
                              the listener will use the exact connection balancer
                              See https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/listener.proto#envoy-api-msg-listener-connectionbalanceconfig
                              for more information.
                            enum:
                            - ""
                            - exact
                            type: string
                          disableAllowChunkedLength:
                            description: 'DisableAllowChunkedLength disables the RFC-compliant
                              Envoy behavior to strip the "Content-Length" header
                              if "Transfer-Encoding: chunked" is also set. This is
                              an emergency off-switch to revert back to Envoy''s default
                              behavior in case of failures. Please file an issue if
                              failures are encountered. See: https://github.com/projectcontour/contour/issues/3221'
                            type: boolean
                          tls:
                            description: TLS holds various configurable Envoy TLS
                              listener values.
                            properties:
                              cipherSuites:
                                description: "CipherSuites defines the TLS ciphers
                                  to be supported by Envoy TLS listeners when negotiating
                                  TLS 1.2. Ciphers are validated against the set that
                                  Envoy supports by default. This parameter should
                                  only be used by advanced users. Note that these
                                  will be ignored when TLS 1.3 is in use. \n See:
                                  https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/transport_sockets/tls/v3/common.proto#extensions-transport-sockets-tls-v3-tlsparameters
                                  Note: This list is a superset of what is valid for
                                  stock Envoy builds and those using BoringSSL FIPS."
                                items:
                                  enum:
                                  - '[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]'
                                  - '[ECDHE-RSA-AES128-GCM-SHA256|ECDHE-RSA-CHACHA20-POLY1305]'
                                  - ECDHE-ECDSA-AES128-GCM-SHA256
                                  - ECDHE-RSA-AES128-GCM-SHA256
                                  - ECDHE-ECDSA-AES128-SHA
                                  - ECDHE-RSA-AES128-SHA
                                  - AES128-GCM-SHA256
                                  - AES128-SHA
                                  - ECDHE-ECDSA-AES256-GCM-SHA384
                                  - ECDHE-RSA-AES256-GCM-SHA384
                                  - ECDHE-ECDSA-AES256-SHA
                                  - ECDHE-RSA-AES256-SHA
                                  - AES256-GCM-SHA384
                                  - AES256-SHA
                                  type: string
                                type: array
                              minimumProtocolVersion:
                                description: MinimumProtocolVersion is the minimum
                                  TLS version this vhost should negotiate. Valid options
                                  are `1.2` (default) and `1.3`.
                                enum:
                                - "1.2"
                                - "1.3"
                                type: string
                            required:
                            - cipherSuites
                            - minimumProtocolVersion
                            type: object
                          useProxyProtocol:
                            description: Use PROXY protocol for all listeners.
                            type: boolean
                        required:
                        - connectionBalancer
                        - disableAllowChunkedLength
                        - tls
                        - useProxyProtocol
                        type: object
                      logging:
                        description: Logging defines how Envoy's logs can be configured.
                        properties:
                          accessLogFormat:
                            description: AccessLogFormat sets the global access log
                              format. Valid options are 'envoy' or 'json'
                            enum:
                            - envoy
                            - json
                            type: string
                          accessLogFormatString:
                            description: AccessLogFormatString sets the access log
                              format when format is set to `envoy`. When empty, Envoy's
                              default format is used.
                            type: string
                          jsonFields:
                            description: AccessLogFields sets the fields that JSON
                              logging will output when AccessLogFormat is json.
                            items:
                              type: string
                            type: array
                        required:
                        - accessLogFormat
                        type: object
                      metrics:
                        default:
                          address: 0.0.0.0
                          port: 8002
                        description: Metrics defines the endpoint Envoy uses to serve
                          metrics.
                        properties:
                          address:
                            description: Defines the metrics address interface.
                            maxLength: 253
                            minLength: 1
                            type: string
                          port:
                            description: Defines the metrics port.
                            type: integer
                          tls:
                            description: TLS holds TLS file config details. Metrics
                              and health endpoints cannot have same port number when
                              metrics is served over HTTPS.
                            properties:
                              caFile:
                                description: CA filename.
                                type: string
                              certFile:
                                description: Client certificate filename.
                                type: string
                              keyFile:
                                description: Client key filename.
                                type: string
                            type: object
                        required:
                        - address
                        - port
                        type: object
                      network:
                        description: Network holds various configurable Envoy network
                          values.
                        properties:
                          adminPort:
                            default: 9001
                            description: Configure the port used to access the Envoy
                              Admin interface. If configured to port "0" then the
                              admin interface is disabled.
                            type: integer
                          numTrustedHops:
                            description: "XffNumTrustedHops defines the number of
                              additional ingress proxy hops from the right side of
                              the x-forwarded-for HTTP header to trust when determining
                              the origin client’s IP address. \n See https://www.envoyproxy.io/docs/envoy/v1.17.0/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto?highlight=xff_num_trusted_hops
                              for more information."
                            format: int32
                            type: integer
                        required:
                        - adminPort
                        type: object
                      service:
                        default:
                          name: envoy
                          namespace: projectcontour
                        description: Service holds Envoy service parameters for setting
                          Ingress status.
                        properties:
                          name:
                            type: string
                          namespace:
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                      timeouts:
                        description: Timeouts holds various configurable timeouts
                          that can be set in the config file.
                        properties:
                          connectionIdleTimeout:
                            description: "ConnectionIdleTimeout defines how long the
                              proxy should wait while there are no active requests
                              (for HTTP/1.1) or streams (for HTTP/2) before terminating
                              an HTTP connection. Set to \"infinity\" to disable the
                              timeout entirely. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/protocol.proto#envoy-v3-api-field-config-core-v3-httpprotocoloptions-idle-timeout
                              for more information."
                            type: string
                          connectionShutdownGracePeriod:
                            description: "ConnectionShutdownGracePeriod defines how
                              long the proxy will wait between sending an initial
                              GOAWAY frame and a second, final GOAWAY frame when terminating
                              an HTTP/2 connection. During this grace period, the
                              proxy will continue to respond to new streams. After
                              the final GOAWAY frame has been sent, the proxy will
                              refuse new streams. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-field-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-drain-timeout
                              for more information."
                            type: string
                          delayedCloseTimeout:
                            description: "DelayedCloseTimeout defines how long envoy
                              will wait, once connection close processing has been
                              initiated, for the downstream peer to close the connection
                              before Envoy closes the socket associated with the connection.
                              \n Setting this timeout to 'infinity' will disable it,
                              equivalent to setting it to '0' in Envoy. Leaving it
                              unset will result in the Envoy default value being used.
                              \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-field-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-delayed-close-timeout
                              for more information."
                            type: string
                          maxConnectionDuration:
                            description: "MaxConnectionDuration defines the maximum
                              period of time after an HTTP connection has been established
                              from the client to the proxy before it is closed by
                              the proxy, regardless of whether there has been activity
                              or not. Omit or set to \"infinity\" for no max duration.
                              \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/protocol.proto#envoy-v3-api-field-config-core-v3-httpprotocoloptions-max-connection-duration
                              for more information."
                            type: string
                          requestTimeout:
                            description: "RequestTimeout sets the client request timeout
                              globally for Contour. Note that this is a timeout for
                              the entire request, not an idle timeout. Omit or set
                              to \"infinity\" to disable the timeout entirely. \n
                              See https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-field-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-request-timeout
                              for more information."
                            type: string
                          streamIdleTimeout:
                            description: "StreamIdleTimeout defines how long the proxy
                              should wait while there is no request activity (for
                              HTTP/1.1) or stream activity (for HTTP/2) before terminating
                              the HTTP request or stream. Set to \"infinity\" to disable
                              the timeout entirely. \n See https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/http_connection_manager/v3/http_connection_manager.proto#envoy-v3-api-field-extensions-filters-network-http-connection-manager-v3-httpconnectionmanager-stream-idle-timeout
                              for more information."
                            type: string
                        type: object
                    required:
                    - cluster
                    - defaultHTTPVersions
                    - http
                    - https
                    - listener
                    - logging
                    - metrics
                    - network
                    - service
                    type: object
                  gateway:
                    description: Gateway contains parameters for the gateway-api Gateway
                      that Contour is configured to serve traffic.
                    properties:
                      controllerName:
                        default: projectcontour.io/projectcontour/contour
                        description: ControllerName is used to determine whether Contour
                          should reconcile a GatewayClass. The string takes the form
                          of "projectcontour.io/<namespace>/contour". If unset, the
                          gatewayclass controller will not be started.
                        type: string
                    required:
                    - controllerName
                    type: object
                  health:
                    default:
                      address: 0.0.0.0
                      port: 8000
                    description: Health defines the endpoints Contour uses to serve
                      health checks.
                    properties:
                      address:
                        description: Defines the health address interface.
                        minLength: 1
                        type: string
                      port:
                        description: Defines the health port.
                        type: integer
                    required:
                    - address
                    - port
                    type: object
                  httpproxy:
                    default:
                      disablePermitInsecure: false
                    description: HTTPProxy defines parameters on HTTPProxy.
                    properties:
                      disablePermitInsecure:
                        description: DisablePermitInsecure disables the use of the
                          permitInsecure field in HTTPProxy.
                        type: boolean
                      fallbackCertificate:
                        description: FallbackCertificate defines the namespace/name
                          of the Kubernetes secret to use as fallback when a non-SNI
                          request is received.
                        properties:
                          name:
                            type: string
                          namespace:
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                      rootNamespaces:
                        description: Restrict Contour to searching these namespaces
                          for root ingress routes.
                        items:
                          type: string
                        type: array
                    required:
                    - disablePermitInsecure
                    type: object
                  ingress:
                    description: Ingress contains parameters for ingress options.
                    properties:
                      className:
                        description: Ingress Class Name Contour should use.
                        type: string
                      statusAddress:
                        description: Address to set in Ingress object status.
                        type: string
                    type: object
                  metrics:
                    default:
                      address: 0.0.0.0
                      port: 8000
                    description: Metrics defines the endpoint Contour uses to serve
                      metrics.
                    properties:
                      address:
                        description: Defines the metrics address interface.
                        maxLength: 253
                        minLength: 1
                        type: string
                      port:
                        description: Defines the metrics port.
                        type: integer
                      tls:
                        description: TLS holds TLS file config details. Metrics and
                          health endpoints cannot have same port number when metrics
                          is served over HTTPS.
                        properties:
                          caFile:
                            description: CA filename.
                            type: string
                          certFile:
                            description: Client certificate filename.
                            type: string
                          keyFile:
                            description: Client key filename.
                            type: string
                        type: object
                    required:
                    - address
                    - port
                    type: object
                  policy:
                    description: Policy specifies default policy applied if not overridden
                      by the user
                    properties:
                      applyToIngress:
                        description: ApplyToIngress determines if the Policies will
                          apply to ingress objects
                        type: boolean
                      requestHeaders:
                        description: RequestHeadersPolicy defines the request headers
                          set/removed on all routes
                        properties:
                          remove:
                            items:
                              type: string
                            type: array
                          set:
                            additionalProperties:
                              type: string
                            type: object
                        type: object
                      responseHeaders:
                        description: ResponseHeadersPolicy defines the response headers
                          set/removed on all routes
                        properties:
                          remove:
                            items:
                              type: string
                            type: array
                          set:
                            additionalProperties:
                              type: string
                            type: object
                        type: object
                    type: object
                  rateLimitService:
                    description: RateLimitService optionally holds properties of the
                      Rate Limit Service to be used for global rate limiting.
                    properties:
                      domain:
                        description: Domain is passed to the Rate Limit Service.
                        type: string
                      enableXRateLimitHeaders:
                        description: "EnableXRateLimitHeaders defines whether to include
                          the X-RateLimit headers X-RateLimit-Limit, X-RateLimit-Remaining,
                          and X-RateLimit-Reset (as defined by the IETF Internet-Draft
                          linked below), on responses to clients when the Rate Limit
                          Service is consulted for a request. \n ref. https://tools.ietf.org/id/draft-polli-ratelimit-headers-03.html"
                        type: boolean
                      extensionService:
                        description: ExtensionService identifies the extension service
                          defining the RLS.
                        properties:
                          name:
                            type: string
                          namespace:
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                      failOpen:
                        description: FailOpen defines whether to allow requests to
                          proceed when the Rate Limit Service fails to respond with
                          a valid rate limit decision within the timeout defined on
                          the extension service.
                        type: boolean
                    required:
                    - domain
                    - enableXRateLimitHeaders
                    - failOpen
                    type: object
                  xdsServer:
                    default:
                      address: 0.0.0.0
                      port: 8001
                      tls:
                        caFile: /certs/ca.crt
                        certFile: /certs/tls.crt
                        insecure: false
                        keyFile: /certs/tls.key
                      type: contour
                    description: XDSServer contains parameters for the xDS server.
                    properties:
                      address:
                        description: Defines the xDS gRPC API address which Contour
                          will serve.
                        minLength: 1
                        type: string
                      port:
                        description: Defines the xDS gRPC API port which Contour will
                          serve.
                        type: integer
                      tls:
                        description: TLS holds TLS file config details.
                        properties:
                          caFile:
                            description: CA filename.
                            type: string
                          certFile:
                            description: Client certificate filename.
                            type: string
                          insecure:
                            description: Allow serving the xDS gRPC API without TLS.
                            type: boolean
                          keyFile:
                            description: Client key filename.
                            type: string
                        required:
                        - insecure
                        type: object
                      type:
                        description: Defines the XDSServer to use for `contour serve`.
                        enum:
                        - contour
                        - envoy
                        type: string
                    required:
                    - address
                    - port
                    - type
                    type: object
                type: object
              replicas:
                default: 2
                description: Replicas is the desired number of Contour replicas. If
                  unset, defaults to 2.
                format: int32
                minimum: 0
                type: integer
            required:
            - config
            type: object
          status:
            description: ContourDeploymentStatus defines the observed state of a ContourDeployment
              resource.
            properties:
              conditions:
                description: "Conditions contains the current status of the Contour
                  resource. \n Contour will update a single condition, `Valid`, that
                  is in normal-true polarity. \n Contour will not modify any other
                  Conditions set in this block, in case some other controller wants
                  to add a Condition."
                items:
                  description: "DetailedCondition is an extension of the normal Kubernetes
                    conditions, with two extra fields to hold sub-conditions, which
                    provide more detailed reasons for the state (True or False) of
                    the condition. \n `errors` holds information about sub-conditions
                    which are fatal to that condition and render its state False.
                    \n `warnings` holds information about sub-conditions which are
                    not fatal to that condition and do not force the state to be False.
                    \n Remember that Conditions have a type, a status, and a reason.
                    \n The type is the type of the condition, the most important one
                    in this CRD set is `Valid`. `Valid` is a positive-polarity condition:
                    when it is `status: true` there are no problems. \n In more detail,
                    `status: true` means that the object is has been ingested into
                    Contour with no errors. `warnings` may still be present, and will
                    be indicated in the Reason field. There must be zero entries in
                    the `errors` slice in this case. \n `Valid`, `status: false` means
                    that the object has had one or more fatal errors during processing
                    into Contour.  The details of the errors will be present under
                    the `errors` field. There must be at least one error in the `errors`
                    slice if `status` is `false`. \n For DetailedConditions of types
                    other than `Valid`, the Condition must be in the negative polarity.
                    When they have `status` `true`, there is an error. There must
                    be at least one entry in the `errors` Subcondition slice. When
                    they have `status` `false`, there are no serious errors, and there
                    must be zero entries in the `errors` slice. In either case, there
                    may be entries in the `warnings` slice. \n Regardless of the polarity,
                    the `reason` and `message` fields must be updated with either
                    the detail of the reason (if there is one and only one entry in
                    total across both the `errors` and `warnings` slices), or `MultipleReasons`
                    if there is more than one entry."
                  properties:
                    errors:
                      description: "Errors contains a slice of relevant error subconditions
                        for this object. \n Subconditions are expected to appear when
                        relevant (when there is a error), and disappear when not relevant.
                        An empty slice here indicates no errors."
                      items:
                        description: "SubCondition is a Condition-like type intended
                          for use as a subcondition inside a DetailedCondition. \n
                          It contains a subset of the Condition fields. \n It is intended
                          for warnings and errors, so `type` names should use abnormal-true
                          polarity, that is, they should be of the form \"ErrorPresent:
                          true\". \n The expected lifecycle for these errors is that
                          they should only be present when the error or warning is,
                          and should be removed when they are not relevant."
                        properties:
                          message:
                            description: "Message is a human readable message indicating
                              details about the transition. \n This may be an empty
                              string."
                            maxLength: 32768
                            type: string
                          reason:
                            description: "Reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. \n The value
                              should be a CamelCase string. \n This field may not
                              be empty."
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: Status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`.
                              \n This must be in abnormal-true polarity, that is,
                              `ErrorFound` or `controller.io/ErrorFound`. \n The regex
                              it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      type: array
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                    warnings:
                      description: "Warnings contains a slice of relevant warning
                        subconditions for this object. \n Subconditions are expected
                        to appear when relevant (when there is a warning), and disappear
                        when not relevant. An empty slice here indicates no warnings."
                      items:
                        description: "SubCondition is a Condition-like type intended
                          for use as a subcondition inside a DetailedCondition. \n
                          It contains a subset of the Condition fields. \n It is intended
                          for warnings and errors, so `type` names should use abnormal-true
                          polarity, that is, they should be of the form \"ErrorPresent:
                          true\". \n The expected lifecycle for these errors is that
                          they should only be present when the error or warning is,
                          and should be removed when they are not relevant."
                        properties:
                          message:
                            description: "Message is a human readable message indicating
                              details about the transition. \n This may be an empty
                              string."
                            maxLength: 32768
                            type: string
                          reason:
                            description: "Reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. \n The value
                              should be a CamelCase string. \n This field may not
                              be empty."
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: Status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`.
                              \n This must be in abnormal-true polarity, that is,
                              `ErrorFound` or `controller.io/ErrorFound`. \n The regex
                              it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      type: array
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: extensionservices.projectcontour.io
spec:
  preserveUnknownFields: false
  group: projectcontour.io
  names:
    kind: ExtensionService
    listKind: ExtensionServiceList
    plural: extensionservices
    shortNames:
    - extensionservice
    - extensionservices
    singular: extensionservice
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ExtensionService is the schema for the Contour extension services
          API. An ExtensionService resource binds a network service to the Contour
          API so that Contour API features can be implemented by collaborating components.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ExtensionServiceSpec defines the desired state of an ExtensionService
              resource.
            properties:
              loadBalancerPolicy:
                description: The policy for load balancing GRPC service requests.
                  Note that the `Cookie` and `RequestHash` load balancing strategies
                  cannot be used here.
                properties:
                  requestHashPolicies:
                    description: RequestHashPolicies contains a list of hash policies
                      to apply when the `RequestHash` load balancing strategy is chosen.
                      If an element of the supplied list of hash policies is invalid,
                      it will be ignored. If the list of hash policies is empty after
                      validation, the load balancing strategy will fall back the the
                      default `RoundRobin`.
                    items:
                      description: RequestHashPolicy contains configuration for an
                        individual hash policy on a request attribute.
                      properties:
                        hashSourceIP:
                          description: HashSourceIP should be set to true when request
                            source IP hash based load balancing is desired. It must
                            be the only hash option field set, otherwise this request
                            hash policy object will be ignored.
                          type: boolean
                        headerHashOptions:
                          description: HeaderHashOptions should be set when request
                            header hash based load balancing is desired. It must be
                            the only hash option field set, otherwise this request
                            hash policy object will be ignored.
                          properties:
                            headerName:
                              description: HeaderName is the name of the HTTP request
                                header that will be used to calculate the hash key.
                                If the header specified is not present on a request,
                                no hash will be produced.
                              minLength: 1
                              type: string
                          type: object
                        terminal:
                          description: Terminal is a flag that allows for short-circuiting
                            computing of a hash for a given request. If set to true,
                            and the request attribute specified in the attribute hash
                            options is present, no further hash policies will be used
                            to calculate a hash for the request.
                          type: boolean
                      type: object
                    type: array
                  strategy:
                    description: Strategy specifies the policy used to balance requests
                      across the pool of backend pods. Valid policy names are `Random`,
                      `RoundRobin`, `WeightedLeastRequest`, `Cookie`, and `RequestHash`.
                      If an unknown strategy name is specified or no policy is supplied,
                      the default `RoundRobin` policy is used.
                    type: string
                type: object
              protocol:
                description: Protocol may be used to specify (or override) the protocol
                  used to reach this Service. Values may be h2 or h2c. If omitted,
                  protocol-selection falls back on Service annotations.
                enum:
                - h2
                - h2c
                type: string
              protocolVersion:
                description: This field sets the version of the GRPC protocol that
                  Envoy uses to send requests to the extension service. Since Contour
                  always uses the v3 Envoy API, this is currently fixed at "v3". However,
                  other protocol options will be available in future.
                enum:
                - v3
                type: string
              services:
                description: Services specifies the set of Kubernetes Service resources
                  that receive GRPC extension API requests. If no weights are specified
                  for any of the entries in this array, traffic will be spread evenly
                  across all the services. Otherwise, traffic is balanced proportionally
                  to the Weight field in each entry.
                items:
                  description: ExtensionServiceTarget defines an Kubernetes Service
                    to target with extension service traffic.
                  properties:
                    name:
                      description: Name is the name of Kubernetes service that will
                        accept service traffic.
                      type: string
                    port:
                      description: Port (defined as Integer) to proxy traffic to since
                        a service can have multiple defined.
                      exclusiveMaximum: true
                      maximum: 65536
                      minimum: 1
                      type: integer
                    weight:
                      description: Weight defines proportion of traffic to balance
                        to the Kubernetes Service.
                      format: int32
                      type: integer
                  required:
                  - name
                  - port
                  type: object
                minItems: 1
                type: array
              timeoutPolicy:
                description: The timeout policy for requests to the services.
                properties:
                  idle:
                    description: Timeout for how long the proxy should wait while
                      there is no activity during single request/response (for HTTP/1.1)
                      or stream (for HTTP/2). Timeout will not trigger while HTTP/1.1
                      connection is idle between two consecutive requests. If not
                      specified, there is no per-route idle timeout, though a connection
                      manager-wide stream_idle_timeout default of 5m still applies.
                    pattern: ^(((\d*(\.\d*)?h)|(\d*(\.\d*)?m)|(\d*(\.\d*)?s)|(\d*(\.\d*)?ms)|(\d*(\.\d*)?us)|(\d*(\.\d*)?µs)|(\d*(\.\d*)?ns))+|infinity|infinite)$
                    type: string
                  response:
                    description: Timeout for receiving a response from the server
                      after processing a request from client. If not supplied, Envoy's
                      default value of 15s applies.
                    pattern: ^(((\d*(\.\d*)?h)|(\d*(\.\d*)?m)|(\d*(\.\d*)?s)|(\d*(\.\d*)?ms)|(\d*(\.\d*)?us)|(\d*(\.\d*)?µs)|(\d*(\.\d*)?ns))+|infinity|infinite)$
                    type: string
                type: object
              validation:
                description: UpstreamValidation defines how to verify the backend
                  service's certificate
                properties:
                  caSecret:
                    description: Name or namespaced name of the Kubernetes secret
                      used to validate the certificate presented by the backend
                    type: string
                  subjectName:
                    description: Key which is expected to be present in the 'subjectAltName'
                      of the presented certificate
                    type: string
                required:
                - caSecret
                - subjectName
                type: object
            required:
            - services
            type: object
          status:
            description: ExtensionServiceStatus defines the observed state of an ExtensionService
              resource.
            properties:
              conditions:
                description: "Conditions contains the current status of the ExtensionService
                  resource. \n Contour will update a single condition, `Valid`, that
                  is in normal-true polarity. \n Contour will not modify any other
                  Conditions set in this block, in case some other controller wants
                  to add a Condition."
                items:
                  description: "DetailedCondition is an extension of the normal Kubernetes
                    conditions, with two extra fields to hold sub-conditions, which
                    provide more detailed reasons for the state (True or False) of
                    the condition. \n `errors` holds information about sub-conditions
                    which are fatal to that condition and render its state False.
                    \n `warnings` holds information about sub-conditions which are
                    not fatal to that condition and do not force the state to be False.
                    \n Remember that Conditions have a type, a status, and a reason.
                    \n The type is the type of the condition, the most important one
                    in this CRD set is `Valid`. `Valid` is a positive-polarity condition:
                    when it is `status: true` there are no problems. \n In more detail,
                    `status: true` means that the object is has been ingested into
                    Contour with no errors. `warnings` may still be present, and will
                    be indicated in the Reason field. There must be zero entries in
                    the `errors` slice in this case. \n `Valid`, `status: false` means
                    that the object has had one or more fatal errors during processing
                    into Contour.  The details of the errors will be present under
                    the `errors` field. There must be at least one error in the `errors`
                    slice if `status` is `false`. \n For DetailedConditions of types
                    other than `Valid`, the Condition must be in the negative polarity.
                    When they have `status` `true`, there is an error. There must
                    be at least one entry in the `errors` Subcondition slice. When
                    they have `status` `false`, there are no serious errors, and there
                    must be zero entries in the `errors` slice. In either case, there
                    may be entries in the `warnings` slice. \n Regardless of the polarity,
                    the `reason` and `message` fields must be updated with either
                    the detail of the reason (if there is one and only one entry in
                    total across both the `errors` and `warnings` slices), or `MultipleReasons`
                    if there is more than one entry."
                  properties:
                    errors:
                      description: "Errors contains a slice of relevant error subconditions
                        for this object. \n Subconditions are expected to appear when
                        relevant (when there is a error), and disappear when not relevant.
                        An empty slice here indicates no errors."
                      items:
                        description: "SubCondition is a Condition-like type intended
                          for use as a subcondition inside a DetailedCondition. \n
                          It contains a subset of the Condition fields. \n It is intended
                          for warnings and errors, so `type` names should use abnormal-true
                          polarity, that is, they should be of the form \"ErrorPresent:
                          true\". \n The expected lifecycle for these errors is that
                          they should only be present when the error or warning is,
                          and should be removed when they are not relevant."
                        properties:
                          message:
                            description: "Message is a human readable message indicating
                              details about the transition. \n This may be an empty
                              string."
                            maxLength: 32768
                            type: string
                          reason:
                            description: "Reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. \n The value
                              should be a CamelCase string. \n This field may not
                              be empty."
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: Status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`.
                              \n This must be in abnormal-true polarity, that is,
                              `ErrorFound` or `controller.io/ErrorFound`. \n The regex
                              it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      type: array
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                    warnings:
                      description: "Warnings contains a slice of relevant warning
                        subconditions for this object. \n Subconditions are expected
                        to appear when relevant (when there is a warning), and disappear
                        when not relevant. An empty slice here indicates no warnings."
                      items:
                        description: "SubCondition is a Condition-like type intended
                          for use as a subcondition inside a DetailedCondition. \n
                          It contains a subset of the Condition fields. \n It is intended
                          for warnings and errors, so `type` names should use abnormal-true
                          polarity, that is, they should be of the form \"ErrorPresent:
                          true\". \n The expected lifecycle for these errors is that
                          they should only be present when the error or warning is,
                          and should be removed when they are not relevant."
                        properties:
                          message:
                            description: "Message is a human readable message indicating
                              details about the transition. \n This may be an empty
                              string."
                            maxLength: 32768
                            type: string
                          reason:
                            description: "Reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. \n The value
                              should be a CamelCase string. \n This field may not
                              be empty."
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: Status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`.
                              \n This must be in abnormal-true polarity, that is,
                              `ErrorFound` or `controller.io/ErrorFound`. \n The regex
                              it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      type: array
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: httpproxies.projectcontour.io
spec:
  preserveUnknownFields: false
  group: projectcontour.io
  names:
    kind: HTTPProxy
    listKind: HTTPProxyList
    plural: httpproxies
    shortNames:
    - proxy
    - proxies
    singular: httpproxy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Fully qualified domain name
      jsonPath: .spec.virtualhost.fqdn
      name: FQDN
      type: string
    - description: Secret with TLS credentials
      jsonPath: .spec.virtualhost.tls.secretName
      name: TLS Secret
      type: string
    - description: The current status of the HTTPProxy
      jsonPath: .status.currentStatus
      name: Status
      type: string
    - description: Description of the current status
      jsonPath: .status.description
      name: Status Description
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: HTTPProxy is an Ingress CRD specification.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: HTTPProxySpec defines the spec of the CRD.
            properties:
              includes:
                description: Includes allow for specific routing configuration to
                  be included from another HTTPProxy, possibly in another namespace.
                items:
                  description: Include describes a set of policies that can be applied
                    to an HTTPProxy in a namespace.
                  properties:
                    conditions:
                      description: 'Conditions are a set of rules that are applied
                        to included HTTPProxies. In effect, they are added onto the
                        Conditions of included HTTPProxy Route structs. When applied,
                        they are merged using AND, with one exception: There can be
                        only one Prefix MatchCondition per Conditions slice. More
                        than one Prefix, or contradictory Conditions, will make the
                        include invalid.'
                      items:
                        description: MatchCondition are a general holder for matching
                          rules for HTTPProxies. One of Prefix or Header must be provided.
                        properties:
                          header:
                            description: Header specifies the header condition to
                              match.
                            properties:
                              contains:
                                description: Contains specifies a substring that must
                                  be present in the header value.
                                type: string
                              exact:
                                description: Exact specifies a string that the header
                                  value must be equal to.
                                type: string
                              name:
                                description: Name is the name of the header to match
                                  against. Name is required. Header names are case
                                  insensitive.
                                type: string
                              notcontains:
                                description: NotContains specifies a substring that
                                  must not be present in the header value.
                                type: string
                              notexact:
                                description: NoExact specifies a string that the header
                                  value must not be equal to. The condition is true
                                  if the header has any other value.
                                type: string
                              notpresent:
                                description: NotPresent specifies that condition is
                                  true when the named header is not present. Note
                                  that setting NotPresent to false does not make the
                                  condition true if the named header is present.
                                type: boolean
                              present:
                                description: Present specifies that condition is true
                                  when the named header is present, regardless of
                                  its value. Note that setting Present to false does
                                  not make the condition true if the named header
                                  is absent.
                                type: boolean
                            required:
                            - name
                            type: object
                          prefix:
                            description: Prefix defines a prefix match for a request.
                            type: string
                        type: object
                      type: array
                    name:
                      description: Name of the HTTPProxy
                      type: string
                    namespace:
                      description: Namespace of the HTTPProxy to include. Defaults
                        to the current namespace if not supplied.
                      type: string
                  required:
                  - name
                  type: object
                type: array
              ingressClassName:
                description: IngressClassName optionally specifies the ingress class
                  to use for this HTTPProxy. This replaces the deprecated `kubernetes.io/ingress.class`
                  annotation. For backwards compatibility, when that annotation is
                  set, it is given precedence over this field.
                type: string
              routes:
                description: Routes are the ingress routes. If TCPProxy is present,
                  Routes is ignored.
                items:
                  description: Route contains the set of routes for a virtual host.
                  properties:
                    authPolicy:
                      description: AuthPolicy updates the authorization policy that
                        was set on the root HTTPProxy object for client requests that
                        match this route.
                      properties:
                        context:
                          additionalProperties:
                            type: string
                          description: Context is a set of key/value pairs that are
                            sent to the authentication server in the check request.
                            If a context is provided at an enclosing scope, the entries
                            are merged such that the inner scope overrides matching
                            keys from the outer scope.
                          type: object
                        disabled:
                          description: When true, this field disables client request
                            authentication for the scope of the policy.
                          type: boolean
                      type: object
                    conditions:
                      description: 'Conditions are a set of rules that are applied
                        to a Route. When applied, they are merged using AND, with
                        one exception: There can be only one Prefix MatchCondition
                        per Conditions slice. More than one Prefix, or contradictory
                        Conditions, will make the route invalid.'
                      items:
                        description: MatchCondition are a general holder for matching
                          rules for HTTPProxies. One of Prefix or Header must be provided.
                        properties:
                          header:
                            description: Header specifies the header condition to
                              match.
                            properties:
                              contains:
                                description: Contains specifies a substring that must
                                  be present in the header value.
                                type: string
                              exact:
                                description: Exact specifies a string that the header
                                  value must be equal to.
                                type: string
                              name:
                                description: Name is the name of the header to match
                                  against. Name is required. Header names are case
                                  insensitive.
                                type: string
                              notcontains:
                                description: NotContains specifies a substring that
                                  must not be present in the header value.
                                type: string
                              notexact:
                                description: NoExact specifies a string that the header
                                  value must not be equal to. The condition is true
                                  if the header has any other value.
                                type: string
                              notpresent:
                                description: NotPresent specifies that condition is
                                  true when the named header is not present. Note
                                  that setting NotPresent to false does not make the
                                  condition true if the named header is present.
                                type: boolean
                              present:
                                description: Present specifies that condition is true
                                  when the named header is present, regardless of
                                  its value. Note that setting Present to false does
                                  not make the condition true if the named header
                                  is absent.
                                type: boolean
                            required:
                            - name
                            type: object
                          prefix:
                            description: Prefix defines a prefix match for a request.
                            type: string
                        type: object
                      type: array
                    cookieRewritePolicies:
                      description: The policies for rewriting Set-Cookie header attributes.
                        Note that rewritten cookie names must be unique in this list.
                        Order rewrite policies are specified in does not matter.
                      items:
                        properties:
                          domainRewrite:
                            description: DomainRewrite enables rewriting the Set-Cookie
                              Domain element. If not set, Domain will not be rewritten.
                            properties:
                              value:
                                description: Value is the value to rewrite the Domain
                                  attribute to. For now this is required.
                                maxLength: 4096
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                            required:
                            - value
                            type: object
                          name:
                            description: Name is the name of the cookie for which
                              attributes will be rewritten.
                            maxLength: 4096
                            minLength: 1
                            pattern: ^[^()<>@,;:\\"\/[\]?={} \t\x7f\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f]+$
                            type: string
                          pathRewrite:
                            description: PathRewrite enables rewriting the Set-Cookie
                              Path element. If not set, Path will not be rewritten.
                            properties:
                              value:
                                description: Value is the value to rewrite the Path
                                  attribute to. For now this is required.
                                maxLength: 4096
                                minLength: 1
                                pattern: ^[^;\x7f\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f]+$
                                type: string
                            required:
                            - value
                            type: object
                          sameSite:
                            description: SameSite enables rewriting the Set-Cookie
                              SameSite element. If not set, SameSite attribute will
                              not be rewritten.
                            enum:
                            - Strict
                            - Lax
                            - None
                            type: string
                          secure:
                            description: Secure enables rewriting the Set-Cookie Secure
                              element. If not set, Secure attribute will not be rewritten.
                            type: boolean
                        required:
                        - name
                        type: object
                      type: array
                    enableWebsockets:
                      description: Enables websocket support for the route.
                      type: boolean
                    healthCheckPolicy:
                      description: The health check policy for this route.
                      properties:
                        healthyThresholdCount:
                          description: The number of healthy health checks required
                            before a host is marked healthy
                          format: int64
                          minimum: 0
                          type: integer
                        host:
                          description: The value of the host header in the HTTP health
                            check request. If left empty (default value), the name
                            "contour-envoy-healthcheck" will be used.
                          type: string
                        intervalSeconds:
                          description: The interval (seconds) between health checks
                          format: int64
                          type: integer
                        path:
                          description: HTTP endpoint used to perform health checks
                            on upstream service
                          type: string
                        timeoutSeconds:
                          description: The time to wait (seconds) for a health check
                            response
                          format: int64
                          type: integer
                        unhealthyThresholdCount:
                          description: The number of unhealthy health checks required
                            before a host is marked unhealthy
                          format: int64
                          minimum: 0
                          type: integer
                      required:
                      - path
                      type: object
                    loadBalancerPolicy:
                      description: The load balancing policy for this route.
                      properties:
                        requestHashPolicies:
                          description: RequestHashPolicies contains a list of hash
                            policies to apply when the `RequestHash` load balancing
                            strategy is chosen. If an element of the supplied list
                            of hash policies is invalid, it will be ignored. If the
                            list of hash policies is empty after validation, the load
                            balancing strategy will fall back the the default `RoundRobin`.
                          items:
                            description: RequestHashPolicy contains configuration
                              for an individual hash policy on a request attribute.
                            properties:
                              hashSourceIP:
                                description: HashSourceIP should be set to true when
                                  request source IP hash based load balancing is desired.
                                  It must be the only hash option field set, otherwise
                                  this request hash policy object will be ignored.
                                type: boolean
                              headerHashOptions:
                                description: HeaderHashOptions should be set when
                                  request header hash based load balancing is desired.
                                  It must be the only hash option field set, otherwise
                                  this request hash policy object will be ignored.
                                properties:
                                  headerName:
                                    description: HeaderName is the name of the HTTP
                                      request header that will be used to calculate
                                      the hash key. If the header specified is not
                                      present on a request, no hash will be produced.
                                    minLength: 1
                                    type: string
                                type: object
                              terminal:
                                description: Terminal is a flag that allows for short-circuiting
                                  computing of a hash for a given request. If set
                                  to true, and the request attribute specified in
                                  the attribute hash options is present, no further
                                  hash policies will be used to calculate a hash for
                                  the request.
                                type: boolean
                            type: object
                          type: array
                        strategy:
                          description: Strategy specifies the policy used to balance
                            requests across the pool of backend pods. Valid policy
                            names are `Random`, `RoundRobin`, `WeightedLeastRequest`,
                            `Cookie`, and `RequestHash`. If an unknown strategy name
                            is specified or no policy is supplied, the default `RoundRobin`
                            policy is used.
                          type: string
                      type: object
                    pathRewritePolicy:
                      description: The policy for rewriting the path of the request
                        URL after the request has been routed to a Service.
                      properties:
                        replacePrefix:
                          description: ReplacePrefix describes how the path prefix
                            should be replaced.
                          items:
                            description: ReplacePrefix describes a path prefix replacement.
                            properties:
                              prefix:
                                description: "Prefix specifies the URL path prefix
                                  to be replaced. \n If Prefix is specified, it must
                                  exactly match the MatchCondition prefix that is
                                  rendered by the chain of including HTTPProxies and
                                  only that path prefix will be replaced by Replacement.
                                  This allows HTTPProxies that are included through
                                  multiple roots to only replace specific path prefixes,
                                  leaving others unmodified. \n If Prefix is not specified,
                                  all routing prefixes rendered by the include chain
                                  will be replaced."
                                minLength: 1
                                type: string
                              replacement:
                                description: Replacement is the string that the routing
                                  path prefix will be replaced with. This must not
                                  be empty.
                                minLength: 1
                                type: string
                            required:
                            - replacement
                            type: object
                          type: array
                      type: object
                    permitInsecure:
                      description: Allow this path to respond to insecure requests
                        over HTTP which are normally not permitted when a `virtualhost.tls`
                        block is present.
                      type: boolean
                    rateLimitPolicy:
                      description: The policy for rate limiting on the route.
                      properties:
                        global:
                          description: Global defines global rate limiting parameters,
                            i.e. parameters defining descriptors that are sent to
                            an external rate limit service (RLS) for a rate limit
                            decision on each request.
                          properties:
                            descriptors:
                              description: Descriptors defines the list of descriptors
                                that will be generated and sent to the rate limit
                                service. Each descriptor contains 1+ key-value pair
                                entries.
                              items:
                                description: RateLimitDescriptor defines a list of
                                  key-value pair generators.
                                properties:
                                  entries:
                                    description: Entries is the list of key-value
                                      pair generators.
                                    items:
                                      description: RateLimitDescriptorEntry is a key-value
                                        pair generator. Exactly one field on this
                                        struct must be non-nil.
                                      properties:
                                        genericKey:
                                          description: GenericKey defines a descriptor
                                            entry with a static key and value.
                                          properties:
                                            key:
                                              description: Key defines the key of
                                                the descriptor entry. If not set,
                                                the key is set to "generic_key".
                                              type: string
                                            value:
                                              description: Value defines the value
                                                of the descriptor entry.
                                              minLength: 1
                                              type: string
                                          type: object
                                        remoteAddress:
                                          description: RemoteAddress defines a descriptor
                                            entry with a key of "remote_address" and
                                            a value equal to the client's IP address
                                            (from x-forwarded-for).
                                          type: object
                                        requestHeader:
                                          description: RequestHeader defines a descriptor
                                            entry that's populated only if a given
                                            header is present on the request. The
                                            descriptor key is static, and the descriptor
                                            value is equal to the value of the header.
                                          properties:
                                            descriptorKey:
                                              description: DescriptorKey defines the
                                                key to use on the descriptor entry.
                                              minLength: 1
                                              type: string
                                            headerName:
                                              description: HeaderName defines the
                                                name of the header to look for on
                                                the request.
                                              minLength: 1
                                              type: string
                                          type: object
                                        requestHeaderValueMatch:
                                          description: RequestHeaderValueMatch defines
                                            a descriptor entry that's populated if
                                            the request's headers match a set of 1+
                                            match criteria. The descriptor key is
                                            "header_match", and the descriptor value
                                            is static.
                                          properties:
                                            expectMatch:
                                              default: true
                                              description: ExpectMatch defines whether
                                                the request must positively match
                                                the match criteria in order to generate
                                                a descriptor entry (i.e. true), or
                                                not match the match criteria in order
                                                to generate a descriptor entry (i.e.
                                                false). The default is true.
                                              type: boolean
                                            headers:
                                              description: Headers is a list of 1+
                                                match criteria to apply against the
                                                request to determine whether to populate
                                                the descriptor entry or not.
                                              items:
                                                description: HeaderMatchCondition
                                                  specifies how to conditionally match
                                                  against HTTP headers. The Name field
                                                  is required, but only one of the
                                                  remaining fields should be be provided.
                                                properties:
                                                  contains:
                                                    description: Contains specifies
                                                      a substring that must be present
                                                      in the header value.
                                                    type: string
                                                  exact:
                                                    description: Exact specifies a
                                                      string that the header value
                                                      must be equal to.
                                                    type: string
                                                  name:
                                                    description: Name is the name
                                                      of the header to match against.
                                                      Name is required. Header names
                                                      are case insensitive.
                                                    type: string
                                                  notcontains:
                                                    description: NotContains specifies
                                                      a substring that must not be
                                                      present in the header value.
                                                    type: string
                                                  notexact:
                                                    description: NoExact specifies
                                                      a string that the header value
                                                      must not be equal to. The condition
                                                      is true if the header has any
                                                      other value.
                                                    type: string
                                                  notpresent:
                                                    description: NotPresent specifies
                                                      that condition is true when
                                                      the named header is not present.
                                                      Note that setting NotPresent
                                                      to false does not make the condition
                                                      true if the named header is
                                                      present.
                                                    type: boolean
                                                  present:
                                                    description: Present specifies
                                                      that condition is true when
                                                      the named header is present,
                                                      regardless of its value. Note
                                                      that setting Present to false
                                                      does not make the condition
                                                      true if the named header is
                                                      absent.
                                                    type: boolean
                                                required:
                                                - name
                                                type: object
                                              minItems: 1
                                              type: array
                                            value:
                                              description: Value defines the value
                                                of the descriptor entry.
                                              minLength: 1
                                              type: string
                                          type: object
                                      type: object
                                    minItems: 1
                                    type: array
                                type: object
                              minItems: 1
                              type: array
                          type: object
                        local:
                          description: Local defines local rate limiting parameters,
                            i.e. parameters for rate limiting that occurs within each
                            Envoy pod as requests are handled.
                          properties:
                            burst:
                              description: Burst defines the number of requests above
                                the requests per unit that should be allowed within
                                a short period of time.
                              format: int32
                              type: integer
                            requests:
                              description: Requests defines how many requests per
                                unit of time should be allowed before rate limiting
                                occurs.
                              format: int32
                              minimum: 1
                              type: integer
                            responseHeadersToAdd:
                              description: ResponseHeadersToAdd is an optional list
                                of response headers to set when a request is rate-limited.
                              items:
                                description: HeaderValue represents a header name/value
                                  pair
                                properties:
                                  name:
                                    description: Name represents a key of a header
                                    minLength: 1
                                    type: string
                                  value:
                                    description: Value represents the value of a header
                                      specified by a key
                                    minLength: 1
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            responseStatusCode:
                              description: ResponseStatusCode is the HTTP status code
                                to use for responses to rate-limited requests. Codes
                                must be in the 400-599 range (inclusive). If not specified,
                                the Envoy default of 429 (Too Many Requests) is used.
                              format: int32
                              maximum: 599
                              minimum: 400
                              type: integer
                            unit:
                              description: Unit defines the period of time within
                                which requests over the limit will be rate limited.
                                Valid values are "second", "minute" and "hour".
                              enum:
                              - second
                              - minute
                              - hour
                              type: string
                          required:
                          - requests
                          - unit
                          type: object
                      type: object
                    requestHeadersPolicy:
                      description: The policy for managing request headers during
                        proxying.
                      properties:
                        remove:
                          description: Remove specifies a list of HTTP header names
                            to remove.
                          items:
                            type: string
                          type: array
                        set:
                          description: Set specifies a list of HTTP header values
                            that will be set in the HTTP header. If the header does
                            not exist it will be added, otherwise it will be overwritten
                            with the new value.
                          items:
                            description: HeaderValue represents a header name/value
                              pair
                            properties:
                              name:
                                description: Name represents a key of a header
                                minLength: 1
                                type: string
                              value:
                                description: Value represents the value of a header
                                  specified by a key
                                minLength: 1
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                      type: object
                    requestRedirectPolicy:
                      description: RequestRedirectPolicy defines an HTTP redirection.
                      properties:
                        hostname:
                          description: Hostname is the precise hostname to be used
                            in the value of the `Location` header in the response.
                            When empty, the hostname of the request is used. No wildcards
                            are allowed.
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        path:
                          description: "Path allows for redirection to a different
                            path from the original on the request. The path must start
                            with a leading slash. \n Note: Only one of Path or Prefix
                            can be defined."
                          pattern: ^\/.*$
                          type: string
                        port:
                          description: Port is the port to be used in the value of
                            the `Location` header in the response. When empty, port
                            (if specified) of the request is used.
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        prefix:
                          description: "Prefix defines the value to swap the matched
                            prefix or path with. The prefix must start with a leading
                            slash. \n Note: Only one of Path or Prefix can be defined."
                          pattern: ^\/.*$
                          type: string
                        scheme:
                          description: Scheme is the scheme to be used in the value
                            of the `Location` header in the response. When empty,
                            the scheme of the request is used.
                          enum:
                          - http
                          - https
                          type: string
                        statusCode:
                          default: 302
                          description: StatusCode is the HTTP status code to be used
                            in response.
                          enum:
                          - 301
                          - 302
                          type: integer
                      type: object
                    responseHeadersPolicy:
                      description: The policy for managing response headers during
                        proxying. Rewriting the 'Host' header is not supported.
                      properties:
                        remove:
                          description: Remove specifies a list of HTTP header names
                            to remove.
                          items:
                            type: string
                          type: array
                        set:
                          description: Set specifies a list of HTTP header values
                            that will be set in the HTTP header. If the header does
                            not exist it will be added, otherwise it will be overwritten
                            with the new value.
                          items:
                            description: HeaderValue represents a header name/value
                              pair
                            properties:
                              name:
                                description: Name represents a key of a header
                                minLength: 1
                                type: string
                              value:
                                description: Value represents the value of a header
                                  specified by a key
                                minLength: 1
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                      type: object
                    retryPolicy:
                      description: The retry policy for this route.
                      properties:
                        count:
                          default: 1
                          description: NumRetries is maximum allowed number of retries.
                            If set to -1, then retries are disabled. If set to 0 or
                            not supplied, the value is set to the Envoy default of
                            1.
                          format: int64
                          minimum: -1
                          type: integer
                        perTryTimeout:
                          description: PerTryTimeout specifies the timeout per retry
                            attempt. Ignored if NumRetries is not supplied.
                          pattern: ^(((\d*(\.\d*)?h)|(\d*(\.\d*)?m)|(\d*(\.\d*)?s)|(\d*(\.\d*)?ms)|(\d*(\.\d*)?us)|(\d*(\.\d*)?µs)|(\d*(\.\d*)?ns))+|infinity|infinite)$
                          type: string
                        retriableStatusCodes:
                          description: "RetriableStatusCodes specifies the HTTP status
                            codes that should be retried. \n This field is only respected
                            when you include `retriable-status-codes` in the `RetryOn`
                            field."
                          items:
                            format: int32
                            type: integer
                          type: array
                        retryOn:
                          description: "RetryOn specifies the conditions on which
                            to retry a request. \n Supported [HTTP conditions](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-on):
                            \n - `5xx` - `gateway-error` - `reset` - `connect-failure`
                            - `retriable-4xx` - `refused-stream` - `retriable-status-codes`
                            - `retriable-headers` \n Supported [gRPC conditions](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-grpc-on):
                            \n - `cancelled` - `deadline-exceeded` - `internal` -
                            `resource-exhausted` - `unavailable`"
                          items:
                            description: RetryOn is a string type alias with validation
                              to ensure that the value is valid.
                            enum:
                            - 5xx
                            - gateway-error
                            - reset
                            - connect-failure
                            - retriable-4xx
                            - refused-stream
                            - retriable-status-codes
                            - retriable-headers
                            - cancelled
                            - deadline-exceeded
                            - internal
                            - resource-exhausted
                            - unavailable
                            type: string
                          type: array
                      type: object
                    services:
                      description: Services are the services to proxy traffic.
                      items:
                        description: Service defines an Kubernetes Service to proxy
                          traffic.
                        properties:
                          cookieRewritePolicies:
                            description: The policies for rewriting Set-Cookie header
                              attributes.
                            items:
                              properties:
                                domainRewrite:
                                  description: DomainRewrite enables rewriting the
                                    Set-Cookie Domain element. If not set, Domain
                                    will not be rewritten.
                                  properties:
                                    value:
                                      description: Value is the value to rewrite the
                                        Domain attribute to. For now this is required.
                                      maxLength: 4096
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                  required:
                                  - value
                                  type: object
                                name:
                                  description: Name is the name of the cookie for
                                    which attributes will be rewritten.
                                  maxLength: 4096
                                  minLength: 1
                                  pattern: ^[^()<>@,;:\\"\/[\]?={} \t\x7f\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f]+$
                                  type: string
                                pathRewrite:
                                  description: PathRewrite enables rewriting the Set-Cookie
                                    Path element. If not set, Path will not be rewritten.
                                  properties:
                                    value:
                                      description: Value is the value to rewrite the
                                        Path attribute to. For now this is required.
                                      maxLength: 4096
                                      minLength: 1
                                      pattern: ^[^;\x7f\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f]+$
                                      type: string
                                  required:
                                  - value
                                  type: object
                                sameSite:
                                  description: SameSite enables rewriting the Set-Cookie
                                    SameSite element. If not set, SameSite attribute
                                    will not be rewritten.
                                  enum:
                                  - Strict
                                  - Lax
                                  - None
                                  type: string
                                secure:
                                  description: Secure enables rewriting the Set-Cookie
                                    Secure element. If not set, Secure attribute will
                                    not be rewritten.
                                  type: boolean
                              required:
                              - name
                              type: object
                            type: array
                          mirror:
                            description: If Mirror is true the Service will receive
                              a read only mirror of the traffic for this route.
                            type: boolean
                          name:
                            description: Name is the name of Kubernetes service to
                              proxy traffic. Names defined here will be used to look
                              up corresponding endpoints which contain the ips to
                              route.
                            type: string
                          port:
                            description: Port (defined as Integer) to proxy traffic
                              to since a service can have multiple defined.
                            exclusiveMaximum: true
                            maximum: 65536
                            minimum: 1
                            type: integer
                          protocol:
                            description: Protocol may be used to specify (or override)
                              the protocol used to reach this Service. Values may
                              be tls, h2, h2c. If omitted, protocol-selection falls
                              back on Service annotations.
                            enum:
                            - h2
                            - h2c
                            - tls
                            type: string
                          requestHeadersPolicy:
                            description: The policy for managing request headers during
                              proxying. Rewriting the 'Host' header is not supported.
                            properties:
                              remove:
                                description: Remove specifies a list of HTTP header
                                  names to remove.
                                items:
                                  type: string
                                type: array
                              set:
                                description: Set specifies a list of HTTP header values
                                  that will be set in the HTTP header. If the header
                                  does not exist it will be added, otherwise it will
                                  be overwritten with the new value.
                                items:
                                  description: HeaderValue represents a header name/value
                                    pair
                                  properties:
                                    name:
                                      description: Name represents a key of a header
                                      minLength: 1
                                      type: string
                                    value:
                                      description: Value represents the value of a
                                        header specified by a key
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                            type: object
                          responseHeadersPolicy:
                            description: The policy for managing response headers
                              during proxying. Rewriting the 'Host' header is not
                              supported.
                            properties:
                              remove:
                                description: Remove specifies a list of HTTP header
                                  names to remove.
                                items:
                                  type: string
                                type: array
                              set:
                                description: Set specifies a list of HTTP header values
                                  that will be set in the HTTP header. If the header
                                  does not exist it will be added, otherwise it will
                                  be overwritten with the new value.
                                items:
                                  description: HeaderValue represents a header name/value
                                    pair
                                  properties:
                                    name:
                                      description: Name represents a key of a header
                                      minLength: 1
                                      type: string
                                    value:
                                      description: Value represents the value of a
                                        header specified by a key
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                            type: object
                          validation:
                            description: UpstreamValidation defines how to verify
                              the backend service's certificate
                            properties:
                              caSecret:
                                description: Name or namespaced name of the Kubernetes
                                  secret used to validate the certificate presented
                                  by the backend
                                type: string
                              subjectName:
                                description: Key which is expected to be present in
                                  the 'subjectAltName' of the presented certificate
                                type: string
                            required:
                            - caSecret
                            - subjectName
                            type: object
                          weight:
                            description: Weight defines percentage of traffic to balance
                              traffic
                            format: int64
                            minimum: 0
                            type: integer
                        required:
                        - name
                        - port
                        type: object
                      type: array
                    timeoutPolicy:
                      description: The timeout policy for this route.
                      properties:
                        idle:
                          description: Timeout for how long the proxy should wait
                            while there is no activity during single request/response
                            (for HTTP/1.1) or stream (for HTTP/2). Timeout will not
                            trigger while HTTP/1.1 connection is idle between two
                            consecutive requests. If not specified, there is no per-route
                            idle timeout, though a connection manager-wide stream_idle_timeout
                            default of 5m still applies.
                          pattern: ^(((\d*(\.\d*)?h)|(\d*(\.\d*)?m)|(\d*(\.\d*)?s)|(\d*(\.\d*)?ms)|(\d*(\.\d*)?us)|(\d*(\.\d*)?µs)|(\d*(\.\d*)?ns))+|infinity|infinite)$
                          type: string
                        response:
                          description: Timeout for receiving a response from the server
                            after processing a request from client. If not supplied,
                            Envoy's default value of 15s applies.
                          pattern: ^(((\d*(\.\d*)?h)|(\d*(\.\d*)?m)|(\d*(\.\d*)?s)|(\d*(\.\d*)?ms)|(\d*(\.\d*)?us)|(\d*(\.\d*)?µs)|(\d*(\.\d*)?ns))+|infinity|infinite)$
                          type: string
                      type: object
                  type: object
                type: array
              tcpproxy:
                description: TCPProxy holds TCP proxy information.
                properties:
                  healthCheckPolicy:
                    description: The health check policy for this tcp proxy
                    properties:
                      healthyThresholdCount:
                        description: The number of healthy health checks required
                          before a host is marked healthy
                        format: int32
                        type: integer
                      intervalSeconds:
                        description: The interval (seconds) between health checks
                        format: int64
                        type: integer
                      timeoutSeconds:
                        description: The time to wait (seconds) for a health check
                          response
                        format: int64
                        type: integer
                      unhealthyThresholdCount:
                        description: The number of unhealthy health checks required
                          before a host is marked unhealthy
                        format: int32
                        type: integer
                    type: object
                  include:
                    description: Include specifies that this tcpproxy should be delegated
                      to another HTTPProxy.
                    properties:
                      name:
                        description: Name of the child HTTPProxy
                        type: string
                      namespace:
                        description: Namespace of the HTTPProxy to include. Defaults
                          to the current namespace if not supplied.
                        type: string
                    required:
                    - name
                    type: object
                  includes:
                    description: "IncludesDeprecated allow for specific routing configuration
                      to be appended to another HTTPProxy in another namespace. \n
                      Exists due to a mistake when developing HTTPProxy and the field
                      was marked plural when it should have been singular. This field
                      should stay to not break backwards compatibility to v1 users."
                    properties:
                      name:
                        description: Name of the child HTTPProxy
                        type: string
                      namespace:
                        description: Namespace of the HTTPProxy to include. Defaults
                          to the current namespace if not supplied.
                        type: string
                    required:
                    - name
                    type: object
                  loadBalancerPolicy:
                    description: The load balancing policy for the backend services.
                      Note that the `Cookie` and `RequestHash` load balancing strategies
                      cannot be used here.
                    properties:
                      requestHashPolicies:
                        description: RequestHashPolicies contains a list of hash policies
                          to apply when the `RequestHash` load balancing strategy
                          is chosen. If an element of the supplied list of hash policies
                          is invalid, it will be ignored. If the list of hash policies
                          is empty after validation, the load balancing strategy will
                          fall back the the default `RoundRobin`.
                        items:
                          description: RequestHashPolicy contains configuration for
                            an individual hash policy on a request attribute.
                          properties:
                            hashSourceIP:
                              description: HashSourceIP should be set to true when
                                request source IP hash based load balancing is desired.
                                It must be the only hash option field set, otherwise
                                this request hash policy object will be ignored.
                              type: boolean
                            headerHashOptions:
                              description: HeaderHashOptions should be set when request
                                header hash based load balancing is desired. It must
                                be the only hash option field set, otherwise this
                                request hash policy object will be ignored.
                              properties:
                                headerName:
                                  description: HeaderName is the name of the HTTP
                                    request header that will be used to calculate
                                    the hash key. If the header specified is not present
                                    on a request, no hash will be produced.
                                  minLength: 1
                                  type: string
                              type: object
                            terminal:
                              description: Terminal is a flag that allows for short-circuiting
                                computing of a hash for a given request. If set to
                                true, and the request attribute specified in the attribute
                                hash options is present, no further hash policies
                                will be used to calculate a hash for the request.
                              type: boolean
                          type: object
                        type: array
                      strategy:
                        description: Strategy specifies the policy used to balance
                          requests across the pool of backend pods. Valid policy names
                          are `Random`, `RoundRobin`, `WeightedLeastRequest`, `Cookie`,
                          and `RequestHash`. If an unknown strategy name is specified
                          or no policy is supplied, the default `RoundRobin` policy
                          is used.
                        type: string
                    type: object
                  services:
                    description: Services are the services to proxy traffic
                    items:
                      description: Service defines an Kubernetes Service to proxy
                        traffic.
                      properties:
                        cookieRewritePolicies:
                          description: The policies for rewriting Set-Cookie header
                            attributes.
                          items:
                            properties:
                              domainRewrite:
                                description: DomainRewrite enables rewriting the Set-Cookie
                                  Domain element. If not set, Domain will not be rewritten.
                                properties:
                                  value:
                                    description: Value is the value to rewrite the
                                      Domain attribute to. For now this is required.
                                    maxLength: 4096
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                required:
                                - value
                                type: object
                              name:
                                description: Name is the name of the cookie for which
                                  attributes will be rewritten.
                                maxLength: 4096
                                minLength: 1
                                pattern: ^[^()<>@,;:\\"\/[\]?={} \t\x7f\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f]+$
                                type: string
                              pathRewrite:
                                description: PathRewrite enables rewriting the Set-Cookie
                                  Path element. If not set, Path will not be rewritten.
                                properties:
                                  value:
                                    description: Value is the value to rewrite the
                                      Path attribute to. For now this is required.
                                    maxLength: 4096
                                    minLength: 1
                                    pattern: ^[^;\x7f\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f]+$
                                    type: string
                                required:
                                - value
                                type: object
                              sameSite:
                                description: SameSite enables rewriting the Set-Cookie
                                  SameSite element. If not set, SameSite attribute
                                  will not be rewritten.
                                enum:
                                - Strict
                                - Lax
                                - None
                                type: string
                              secure:
                                description: Secure enables rewriting the Set-Cookie
                                  Secure element. If not set, Secure attribute will
                                  not be rewritten.
                                type: boolean
                            required:
                            - name
                            type: object
                          type: array
                        mirror:
                          description: If Mirror is true the Service will receive
                            a read only mirror of the traffic for this route.
                          type: boolean
                        name:
                          description: Name is the name of Kubernetes service to proxy
                            traffic. Names defined here will be used to look up corresponding
                            endpoints which contain the ips to route.
                          type: string
                        port:
                          description: Port (defined as Integer) to proxy traffic
                            to since a service can have multiple defined.
                          exclusiveMaximum: true
                          maximum: 65536
                          minimum: 1
                          type: integer
                        protocol:
                          description: Protocol may be used to specify (or override)
                            the protocol used to reach this Service. Values may be
                            tls, h2, h2c. If omitted, protocol-selection falls back
                            on Service annotations.
                          enum:
                          - h2
                          - h2c
                          - tls
                          type: string
                        requestHeadersPolicy:
                          description: The policy for managing request headers during
                            proxying. Rewriting the 'Host' header is not supported.
                          properties:
                            remove:
                              description: Remove specifies a list of HTTP header
                                names to remove.
                              items:
                                type: string
                              type: array
                            set:
                              description: Set specifies a list of HTTP header values
                                that will be set in the HTTP header. If the header
                                does not exist it will be added, otherwise it will
                                be overwritten with the new value.
                              items:
                                description: HeaderValue represents a header name/value
                                  pair
                                properties:
                                  name:
                                    description: Name represents a key of a header
                                    minLength: 1
                                    type: string
                                  value:
                                    description: Value represents the value of a header
                                      specified by a key
                                    minLength: 1
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                          type: object
                        responseHeadersPolicy:
                          description: The policy for managing response headers during
                            proxying. Rewriting the 'Host' header is not supported.
                          properties:
                            remove:
                              description: Remove specifies a list of HTTP header
                                names to remove.
                              items:
                                type: string
                              type: array
                            set:
                              description: Set specifies a list of HTTP header values
                                that will be set in the HTTP header. If the header
                                does not exist it will be added, otherwise it will
                                be overwritten with the new value.
                              items:
                                description: HeaderValue represents a header name/value
                                  pair
                                properties:
                                  name:
                                    description: Name represents a key of a header
                                    minLength: 1
                                    type: string
                                  value:
                                    description: Value represents the value of a header
                                      specified by a key
                                    minLength: 1
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                          type: object
                        validation:
                          description: UpstreamValidation defines how to verify the
                            backend service's certificate
                          properties:
                            caSecret:
                              description: Name or namespaced name of the Kubernetes
                                secret used to validate the certificate presented
                                by the backend
                              type: string
                            subjectName:
                              description: Key which is expected to be present in
                                the 'subjectAltName' of the presented certificate
                              type: string
                          required:
                          - caSecret
                          - subjectName
                          type: object
                        weight:
                          description: Weight defines percentage of traffic to balance
                            traffic
                          format: int64
                          minimum: 0
                          type: integer
                      required:
                      - name
                      - port
                      type: object
                    type: array
                type: object
              virtualhost:
                description: Virtualhost appears at most once. If it is present, the
                  object is considered to be a "root" HTTPProxy.
                properties:
                  authorization:
                    description: This field configures an extension service to perform
                      authorization for this virtual host. Authorization can only
                      be configured on virtual hosts that have TLS enabled. If the
                      TLS configuration requires client certificate validation, the
                      client certificate is always included in the authentication
                      check request.
                    properties:
                      authPolicy:
                        description: AuthPolicy sets a default authorization policy
                          for client requests. This policy will be used unless overridden
                          by individual routes.
                        properties:
                          context:
                            additionalProperties:
                              type: string
                            description: Context is a set of key/value pairs that
                              are sent to the authentication server in the check request.
                              If a context is provided at an enclosing scope, the
                              entries are merged such that the inner scope overrides
                              matching keys from the outer scope.
                            type: object
                          disabled:
                            description: When true, this field disables client request
                              authentication for the scope of the policy.
                            type: boolean
                        type: object
                      extensionRef:
                        description: ExtensionServiceRef specifies the extension resource
                          that will authorize client requests.
                        properties:
                          apiVersion:
                            description: API version of the referent. If this field
                              is not specified, the default "projectcontour.io/v1alpha1"
                              will be used
                            minLength: 1
                            type: string
                          name:
                            description: "Name of the referent. \n More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                            minLength: 1
                            type: string
                          namespace:
                            description: "Namespace of the referent. If this field
                              is not specifies, the namespace of the resource that
                              targets the referent will be used. \n More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
                            minLength: 1
                            type: string
                        type: object
                      failOpen:
                        description: If FailOpen is true, the client request is forwarded
                          to the upstream service even if the authorization server
                          fails to respond. This field should not be set in most cases.
                          It is intended for use only while migrating applications
                          from internal authorization to Contour external authorization.
                        type: boolean
                      responseTimeout:
                        description: ResponseTimeout configures maximum time to wait
                          for a check response from the authorization server. Timeout
                          durations are expressed in the Go [Duration format](https://godoc.org/time#ParseDuration).
                          Valid time units are "ns", "us" (or "µs"), "ms", "s", "m",
                          "h". The string "infinity" is also a valid input and specifies
                          no timeout.
                        pattern: ^(((\d*(\.\d*)?h)|(\d*(\.\d*)?m)|(\d*(\.\d*)?s)|(\d*(\.\d*)?ms)|(\d*(\.\d*)?us)|(\d*(\.\d*)?µs)|(\d*(\.\d*)?ns))+|infinity|infinite)$
                        type: string
                      withRequestBody:
                        description: WithRequestBody specifies configuration for sending
                          the client request's body to authorization server.
                        properties:
                          allowPartialMessage:
                            description: If AllowPartialMessage is true, then Envoy
                              will buffer the body until MaxRequestBytes are reached.
                            type: boolean
                          maxRequestBytes:
                            default: 1024
                            description: MaxRequestBytes sets the maximum size of
                              message body ExtAuthz filter will hold in-memory.
                            format: int32
                            minimum: 1
                            type: integer
                          packAsBytes:
                            description: If PackAsBytes is true, the body sent to
                              Authorization Server is in raw bytes.
                            type: boolean
                        type: object
                    required:
                    - extensionRef
                    type: object
                  corsPolicy:
                    description: Specifies the cross-origin policy to apply to the
                      VirtualHost.
                    properties:
                      allowCredentials:
                        description: Specifies whether the resource allows credentials.
                        type: boolean
                      allowHeaders:
                        description: AllowHeaders specifies the content for the *access-control-allow-headers*
                          header.
                        items:
                          description: CORSHeaderValue specifies the value of the
                            string headers returned by a cross-domain request.
                          pattern: ^[a-zA-Z0-9!#$%&'*+.^_`|~-]+$
                          type: string
                        type: array
                      allowMethods:
                        description: AllowMethods specifies the content for the *access-control-allow-methods*
                          header.
                        items:
                          description: CORSHeaderValue specifies the value of the
                            string headers returned by a cross-domain request.
                          pattern: ^[a-zA-Z0-9!#$%&'*+.^_`|~-]+$
                          type: string
                        type: array
                      allowOrigin:
                        description: AllowOrigin specifies the origins that will be
                          allowed to do CORS requests. "*" means allow any origin.
                        items:
                          type: string
                        type: array
                      exposeHeaders:
                        description: ExposeHeaders Specifies the content for the *access-control-expose-headers*
                          header.
                        items:
                          description: CORSHeaderValue specifies the value of the
                            string headers returned by a cross-domain request.
                          pattern: ^[a-zA-Z0-9!#$%&'*+.^_`|~-]+$
                          type: string
                        type: array
                      maxAge:
                        description: MaxAge indicates for how long the results of
                          a preflight request can be cached. MaxAge durations are
                          expressed in the Go [Duration format](https://godoc.org/time#ParseDuration).
                          Valid time units are "ns", "us" (or "µs"), "ms", "s", "m",
                          "h". Only positive values are allowed while 0 disables the
                          cache requiring a preflight OPTIONS check for all cross-origin
                          requests.
                        type: string
                    required:
                    - allowMethods
                    - allowOrigin
                    type: object
                  fqdn:
                    description: The fully qualified domain name of the root of the
                      ingress tree all leaves of the DAG rooted at this object relate
                      to the fqdn.
                    pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  rateLimitPolicy:
                    description: The policy for rate limiting on the virtual host.
                    properties:
                      global:
                        description: Global defines global rate limiting parameters,
                          i.e. parameters defining descriptors that are sent to an
                          external rate limit service (RLS) for a rate limit decision
                          on each request.
                        properties:
                          descriptors:
                            description: Descriptors defines the list of descriptors
                              that will be generated and sent to the rate limit service.
                              Each descriptor contains 1+ key-value pair entries.
                            items:
                              description: RateLimitDescriptor defines a list of key-value
                                pair generators.
                              properties:
                                entries:
                                  description: Entries is the list of key-value pair
                                    generators.
                                  items:
                                    description: RateLimitDescriptorEntry is a key-value
                                      pair generator. Exactly one field on this struct
                                      must be non-nil.
                                    properties:
                                      genericKey:
                                        description: GenericKey defines a descriptor
                                          entry with a static key and value.
                                        properties:
                                          key:
                                            description: Key defines the key of the
                                              descriptor entry. If not set, the key
                                              is set to "generic_key".
                                            type: string
                                          value:
                                            description: Value defines the value of
                                              the descriptor entry.
                                            minLength: 1
                                            type: string
                                        type: object
                                      remoteAddress:
                                        description: RemoteAddress defines a descriptor
                                          entry with a key of "remote_address" and
                                          a value equal to the client's IP address
                                          (from x-forwarded-for).
                                        type: object
                                      requestHeader:
                                        description: RequestHeader defines a descriptor
                                          entry that's populated only if a given header
                                          is present on the request. The descriptor
                                          key is static, and the descriptor value
                                          is equal to the value of the header.
                                        properties:
                                          descriptorKey:
                                            description: DescriptorKey defines the
                                              key to use on the descriptor entry.
                                            minLength: 1
                                            type: string
                                          headerName:
                                            description: HeaderName defines the name
                                              of the header to look for on the request.
                                            minLength: 1
                                            type: string
                                        type: object
                                      requestHeaderValueMatch:
                                        description: RequestHeaderValueMatch defines
                                          a descriptor entry that's populated if the
                                          request's headers match a set of 1+ match
                                          criteria. The descriptor key is "header_match",
                                          and the descriptor value is static.
                                        properties:
                                          expectMatch:
                                            default: true
                                            description: ExpectMatch defines whether
                                              the request must positively match the
                                              match criteria in order to generate
                                              a descriptor entry (i.e. true), or not
                                              match the match criteria in order to
                                              generate a descriptor entry (i.e. false).
                                              The default is true.
                                            type: boolean
                                          headers:
                                            description: Headers is a list of 1+ match
                                              criteria to apply against the request
                                              to determine whether to populate the
                                              descriptor entry or not.
                                            items:
                                              description: HeaderMatchCondition specifies
                                                how to conditionally match against
                                                HTTP headers. The Name field is required,
                                                but only one of the remaining fields
                                                should be be provided.
                                              properties:
                                                contains:
                                                  description: Contains specifies
                                                    a substring that must be present
                                                    in the header value.
                                                  type: string
                                                exact:
                                                  description: Exact specifies a string
                                                    that the header value must be
                                                    equal to.
                                                  type: string
                                                name:
                                                  description: Name is the name of
                                                    the header to match against. Name
                                                    is required. Header names are
                                                    case insensitive.
                                                  type: string
                                                notcontains:
                                                  description: NotContains specifies
                                                    a substring that must not be present
                                                    in the header value.
                                                  type: string
                                                notexact:
                                                  description: NoExact specifies a
                                                    string that the header value must
                                                    not be equal to. The condition
                                                    is true if the header has any
                                                    other value.
                                                  type: string
                                                notpresent:
                                                  description: NotPresent specifies
                                                    that condition is true when the
                                                    named header is not present. Note
                                                    that setting NotPresent to false
                                                    does not make the condition true
                                                    if the named header is present.
                                                  type: boolean
                                                present:
                                                  description: Present specifies that
                                                    condition is true when the named
                                                    header is present, regardless
                                                    of its value. Note that setting
                                                    Present to false does not make
                                                    the condition true if the named
                                                    header is absent.
                                                  type: boolean
                                              required:
                                              - name
                                              type: object
                                            minItems: 1
                                            type: array
                                          value:
                                            description: Value defines the value of
                                              the descriptor entry.
                                            minLength: 1
                                            type: string
                                        type: object
                                    type: object
                                  minItems: 1
                                  type: array
                              type: object
                            minItems: 1
                            type: array
                        type: object
                      local:
                        description: Local defines local rate limiting parameters,
                          i.e. parameters for rate limiting that occurs within each
                          Envoy pod as requests are handled.
                        properties:
                          burst:
                            description: Burst defines the number of requests above
                              the requests per unit that should be allowed within
                              a short period of time.
                            format: int32
                            type: integer
                          requests:
                            description: Requests defines how many requests per unit
                              of time should be allowed before rate limiting occurs.
                            format: int32
                            minimum: 1
                            type: integer
                          responseHeadersToAdd:
                            description: ResponseHeadersToAdd is an optional list
                              of response headers to set when a request is rate-limited.
                            items:
                              description: HeaderValue represents a header name/value
                                pair
                              properties:
                                name:
                                  description: Name represents a key of a header
                                  minLength: 1
                                  type: string
                                value:
                                  description: Value represents the value of a header
                                    specified by a key
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                          responseStatusCode:
                            description: ResponseStatusCode is the HTTP status code
                              to use for responses to rate-limited requests. Codes
                              must be in the 400-599 range (inclusive). If not specified,
                              the Envoy default of 429 (Too Many Requests) is used.
                            format: int32
                            maximum: 599
                            minimum: 400
                            type: integer
                          unit:
                            description: Unit defines the period of time within which
                              requests over the limit will be rate limited. Valid
                              values are "second", "minute" and "hour".
                            enum:
                            - second
                            - minute
                            - hour
                            type: string
                        required:
                        - requests
                        - unit
                        type: object
                    type: object
                  tls:
                    description: If present the fields describes TLS properties of
                      the virtual host. The SNI names that will be matched on are
                      described in fqdn, the tls.secretName secret must contain a
                      certificate that itself contains a name that matches the FQDN.
                    properties:
                      clientValidation:
                        description: "ClientValidation defines how to verify the client
                          certificate when an external client establishes a TLS connection
                          to Envoy. \n This setting: \n 1. Enables TLS client certificate
                          validation. 2. Specifies how the client certificate will
                          be validated (i.e.    validation required or skipped). \n
                          Note: Setting client certificate validation to be skipped
                          should be only used in conjunction with an external authorization
                          server that performs client validation as Contour will ensure
                          client certificates are passed along."
                        properties:
                          caSecret:
                            description: Name of a Kubernetes secret that contains
                              a CA certificate bundle. The client certificate must
                              validate against the certificates in the bundle. If
                              specified and SkipClientCertValidation is true, client
                              certificates will be required on requests.
                            minLength: 1
                            type: string
                          skipClientCertValidation:
                            description: SkipClientCertValidation disables downstream
                              client certificate validation. Defaults to false. This
                              field is intended to be used in conjunction with external
                              authorization in order to enable the external authorization
                              server to validate client certificates. When this field
                              is set to true, client certificates are requested but
                              not verified by Envoy. If CACertificate is specified,
                              client certificates are required on requests, but not
                              verified. If external authorization is in use, they
                              are presented to the external authorization server.
                            type: boolean
                        type: object
                      enableFallbackCertificate:
                        description: EnableFallbackCertificate defines if the vhost
                          should allow a default certificate to be applied which handles
                          all requests which don't match the SNI defined in this vhost.
                        type: boolean
                      minimumProtocolVersion:
                        description: MinimumProtocolVersion is the minimum TLS version
                          this vhost should negotiate. Valid options are `1.2` (default)
                          and `1.3`. Any other value defaults to TLS 1.2.
                        type: string
                      passthrough:
                        description: Passthrough defines whether the encrypted TLS
                          handshake will be passed through to the backing cluster.
                          Either Passthrough or SecretName must be specified, but
                          not both.
                        type: boolean
                      secretName:
                        description: SecretName is the name of a TLS secret in the
                          current namespace. Either SecretName or Passthrough must
                          be specified, but not both. If specified, the named secret
                          must contain a matching certificate for the virtual host's
                          FQDN.
                        type: string
                    type: object
                required:
                - fqdn
                type: object
            type: object
          status:
            default:
              currentStatus: NotReconciled
              description: Waiting for controller
            description: Status is a container for computed information about the
              HTTPProxy.
            properties:
              conditions:
                description: "Conditions contains information about the current status
                  of the HTTPProxy, in an upstream-friendly container. \n Contour
                  will update a single condition, `Valid`, that is in normal-true
                  polarity. That is, when `currentStatus` is `valid`, the `Valid`
                  condition will be `status: true`, and vice versa. \n Contour will
                  leave untouched any other Conditions set in this block, in case
                  some other controller wants to add a Condition. \n If you are another
                  controller owner and wish to add a condition, you *should* namespace
                  your condition with a label, like `controller.domain.com/ConditionName`."
                items:
                  description: "DetailedCondition is an extension of the normal Kubernetes
                    conditions, with two extra fields to hold sub-conditions, which
                    provide more detailed reasons for the state (True or False) of
                    the condition. \n `errors` holds information about sub-conditions
                    which are fatal to that condition and render its state False.
                    \n `warnings` holds information about sub-conditions which are
                    not fatal to that condition and do not force the state to be False.
                    \n Remember that Conditions have a type, a status, and a reason.
                    \n The type is the type of the condition, the most important one
                    in this CRD set is `Valid`. `Valid` is a positive-polarity condition:
                    when it is `status: true` there are no problems. \n In more detail,
                    `status: true` means that the object is has been ingested into
                    Contour with no errors. `warnings` may still be present, and will
                    be indicated in the Reason field. There must be zero entries in
                    the `errors` slice in this case. \n `Valid`, `status: false` means
                    that the object has had one or more fatal errors during processing
                    into Contour.  The details of the errors will be present under
                    the `errors` field. There must be at least one error in the `errors`
                    slice if `status` is `false`. \n For DetailedConditions of types
                    other than `Valid`, the Condition must be in the negative polarity.
                    When they have `status` `true`, there is an error. There must
                    be at least one entry in the `errors` Subcondition slice. When
                    they have `status` `false`, there are no serious errors, and there
                    must be zero entries in the `errors` slice. In either case, there
                    may be entries in the `warnings` slice. \n Regardless of the polarity,
                    the `reason` and `message` fields must be updated with either
                    the detail of the reason (if there is one and only one entry in
                    total across both the `errors` and `warnings` slices), or `MultipleReasons`
                    if there is more than one entry."
                  properties:
                    errors:
                      description: "Errors contains a slice of relevant error subconditions
                        for this object. \n Subconditions are expected to appear when
                        relevant (when there is a error), and disappear when not relevant.
                        An empty slice here indicates no errors."
                      items:
                        description: "SubCondition is a Condition-like type intended
                          for use as a subcondition inside a DetailedCondition. \n
                          It contains a subset of the Condition fields. \n It is intended
                          for warnings and errors, so `type` names should use abnormal-true
                          polarity, that is, they should be of the form \"ErrorPresent:
                          true\". \n The expected lifecycle for these errors is that
                          they should only be present when the error or warning is,
                          and should be removed when they are not relevant."
                        properties:
                          message:
                            description: "Message is a human readable message indicating
                              details about the transition. \n This may be an empty
                              string."
                            maxLength: 32768
                            type: string
                          reason:
                            description: "Reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. \n The value
                              should be a CamelCase string. \n This field may not
                              be empty."
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: Status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`.
                              \n This must be in abnormal-true polarity, that is,
                              `ErrorFound` or `controller.io/ErrorFound`. \n The regex
                              it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      type: array
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                    warnings:
                      description: "Warnings contains a slice of relevant warning
                        subconditions for this object. \n Subconditions are expected
                        to appear when relevant (when there is a warning), and disappear
                        when not relevant. An empty slice here indicates no warnings."
                      items:
                        description: "SubCondition is a Condition-like type intended
                          for use as a subcondition inside a DetailedCondition. \n
                          It contains a subset of the Condition fields. \n It is intended
                          for warnings and errors, so `type` names should use abnormal-true
                          polarity, that is, they should be of the form \"ErrorPresent:
                          true\". \n The expected lifecycle for these errors is that
                          they should only be present when the error or warning is,
                          and should be removed when they are not relevant."
                        properties:
                          message:
                            description: "Message is a human readable message indicating
                              details about the transition. \n This may be an empty
                              string."
                            maxLength: 32768
                            type: string
                          reason:
                            description: "Reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. \n The value
                              should be a CamelCase string. \n This field may not
                              be empty."
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: Status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`.
                              \n This must be in abnormal-true polarity, that is,
                              `ErrorFound` or `controller.io/ErrorFound`. \n The regex
                              it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      type: array
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              currentStatus:
                type: string
              description:
                type: string
              loadBalancer:
                description: LoadBalancer contains the current status of the load
                  balancer.
                properties:
                  ingress:
                    description: Ingress is a list containing ingress points for the
                      load-balancer. Traffic intended for the service should be sent
                      to these ingress points.
                    items:
                      description: 'LoadBalancerIngress represents the status of a
                        load-balancer ingress point: traffic intended for the service
                        should be sent to an ingress point.'
                      properties:
                        hostname:
                          description: Hostname is set for load-balancer ingress points
                            that are DNS based (typically AWS load-balancers)
                          type: string
                        ip:
                          description: IP is set for load-balancer ingress points
                            that are IP based (typically GCE or OpenStack load-balancers)
                          type: string
                        ports:
                          description: Ports is a list of records of service ports
                            If used, every port defined in the service should have
                            an entry in it
                          items:
                            properties:
                              error:
                                description: 'Error is to record the problem with
                                  the service port The format of the error shall comply
                                  with the following rules: - built-in error values
                                  shall be specified in this file and those shall
                                  use   CamelCase names - cloud provider specific
                                  error values must have names that comply with the   format
                                  foo.example.com/CamelCase. --- The regex it matches
                                  is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                maxLength: 316
                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                type: string
                              port:
                                description: Port is the port number of the service
                                  port of which status is recorded here
                                format: int32
                                type: integer
                              protocol:
                                default: TCP
                                description: 'Protocol is the protocol of the service
                                  port of which status is recorded here The supported
                                  values are: "TCP", "UDP", "SCTP"'
                                type: string
                            required:
                            - port
                            - protocol
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                      type: object
                    type: array
                type: object
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: tlscertificatedelegations.projectcontour.io
spec:
  preserveUnknownFields: false
  group: projectcontour.io
  names:
    kind: TLSCertificateDelegation
    listKind: TLSCertificateDelegationList
    plural: tlscertificatedelegations
    shortNames:
    - tlscerts
    singular: tlscertificatedelegation
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: TLSCertificateDelegation is an TLS Certificate Delegation CRD
          specification. See design/tls-certificate-delegation.md for details.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TLSCertificateDelegationSpec defines the spec of the CRD
            properties:
              delegations:
                items:
                  description: CertificateDelegation maps the authority to reference
                    a secret in the current namespace to a set of namespaces.
                  properties:
                    secretName:
                      description: required, the name of a secret in the current namespace.
                      type: string
                    targetNamespaces:
                      description: required, the namespaces the authority to reference
                        the the secret will be delegated to. If TargetNamespaces is
                        nil or empty, the CertificateDelegation' is ignored. If the
                        TargetNamespace list contains the character, "*" the secret
                        will be delegated to all namespaces.
                      items:
                        type: string
                      type: array
                  required:
                  - secretName
                  - targetNamespaces
                  type: object
                type: array
            required:
            - delegations
            type: object
          status:
            description: TLSCertificateDelegationStatus allows for the status of the
              delegation to be presented to the user.
            properties:
              conditions:
                description: "Conditions contains information about the current status
                  of the HTTPProxy, in an upstream-friendly container. \n Contour
                  will update a single condition, `Valid`, that is in normal-true
                  polarity. That is, when `currentStatus` is `valid`, the `Valid`
                  condition will be `status: true`, and vice versa. \n Contour will
                  leave untouched any other Conditions set in this block, in case
                  some other controller wants to add a Condition. \n If you are another
                  controller owner and wish to add a condition, you *should* namespace
                  your condition with a label, like `controller.domain.com\\ConditionName`."
                items:
                  description: "DetailedCondition is an extension of the normal Kubernetes
                    conditions, with two extra fields to hold sub-conditions, which
                    provide more detailed reasons for the state (True or False) of
                    the condition. \n `errors` holds information about sub-conditions
                    which are fatal to that condition and render its state False.
                    \n `warnings` holds information about sub-conditions which are
                    not fatal to that condition and do not force the state to be False.
                    \n Remember that Conditions have a type, a status, and a reason.
                    \n The type is the type of the condition, the most important one
                    in this CRD set is `Valid`. `Valid` is a positive-polarity condition:
                    when it is `status: true` there are no problems. \n In more detail,
                    `status: true` means that the object is has been ingested into
                    Contour with no errors. `warnings` may still be present, and will
                    be indicated in the Reason field. There must be zero entries in
                    the `errors` slice in this case. \n `Valid`, `status: false` means
                    that the object has had one or more fatal errors during processing
                    into Contour.  The details of the errors will be present under
                    the `errors` field. There must be at least one error in the `errors`
                    slice if `status` is `false`. \n For DetailedConditions of types
                    other than `Valid`, the Condition must be in the negative polarity.
                    When they have `status` `true`, there is an error. There must
                    be at least one entry in the `errors` Subcondition slice. When
                    they have `status` `false`, there are no serious errors, and there
                    must be zero entries in the `errors` slice. In either case, there
                    may be entries in the `warnings` slice. \n Regardless of the polarity,
                    the `reason` and `message` fields must be updated with either
                    the detail of the reason (if there is one and only one entry in
                    total across both the `errors` and `warnings` slices), or `MultipleReasons`
                    if there is more than one entry."
                  properties:
                    errors:
                      description: "Errors contains a slice of relevant error subconditions
                        for this object. \n Subconditions are expected to appear when
                        relevant (when there is a error), and disappear when not relevant.
                        An empty slice here indicates no errors."
                      items:
                        description: "SubCondition is a Condition-like type intended
                          for use as a subcondition inside a DetailedCondition. \n
                          It contains a subset of the Condition fields. \n It is intended
                          for warnings and errors, so `type` names should use abnormal-true
                          polarity, that is, they should be of the form \"ErrorPresent:
                          true\". \n The expected lifecycle for these errors is that
                          they should only be present when the error or warning is,
                          and should be removed when they are not relevant."
                        properties:
                          message:
                            description: "Message is a human readable message indicating
                              details about the transition. \n This may be an empty
                              string."
                            maxLength: 32768
                            type: string
                          reason:
                            description: "Reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. \n The value
                              should be a CamelCase string. \n This field may not
                              be empty."
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: Status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`.
                              \n This must be in abnormal-true polarity, that is,
                              `ErrorFound` or `controller.io/ErrorFound`. \n The regex
                              it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      type: array
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                    warnings:
                      description: "Warnings contains a slice of relevant warning
                        subconditions for this object. \n Subconditions are expected
                        to appear when relevant (when there is a warning), and disappear
                        when not relevant. An empty slice here indicates no warnings."
                      items:
                        description: "SubCondition is a Condition-like type intended
                          for use as a subcondition inside a DetailedCondition. \n
                          It contains a subset of the Condition fields. \n It is intended
                          for warnings and errors, so `type` names should use abnormal-true
                          polarity, that is, they should be of the form \"ErrorPresent:
                          true\". \n The expected lifecycle for these errors is that
                          they should only be present when the error or warning is,
                          and should be removed when they are not relevant."
                        properties:
                          message:
                            description: "Message is a human readable message indicating
                              details about the transition. \n This may be an empty
                              string."
                            maxLength: 32768
                            type: string
                          reason:
                            description: "Reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. \n The value
                              should be a CamelCase string. \n This field may not
                              be empty."
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: Status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: "Type of condition in `CamelCase` or in `foo.example.com/CamelCase`.
                              \n This must be in abnormal-true polarity, that is,
                              `ErrorFound` or `controller.io/ErrorFound`. \n The regex
                              it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      type: array
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: contour-certgen
  namespace: projectcontour
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: contour
  namespace: projectcontour
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: contour-certgen
subjects:
- kind: ServiceAccount
  name: contour-certgen
  namespace: projectcontour
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: contour-certgen
  namespace: projectcontour
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - update
---
apiVersion: batch/v1
kind: Job
metadata:
  name: contour-certgen-v1.20.0
  namespace: projectcontour
spec:
  template:
    metadata:
      labels:
        app: "contour-certgen"
    spec:
      containers:
      - name: contour
        image: ghcr.io/projectcontour/contour:v1.20.0
        imagePullPolicy: Always
        command:
        - contour
        - certgen
        - --kube
        - --incluster
        - --overwrite
        - --secrets-format=compact
        - --namespace=$(CONTOUR_NAMESPACE)
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      restartPolicy: Never
      serviceAccountName: contour-certgen
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
  parallelism: 1
  completions: 1
  backoffLimit: 1

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: contour
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: contour
subjects:
- kind: ServiceAccount
  name: contour
  namespace: projectcontour

# The following ClusterRole is generated from kubebuilder RBAC tags by
# generate-rbac.sh. Do not edit this file directly but instead edit the source
# files and re-render.

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: contour
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - events
  verbs:
  - create
  - get
  - update
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - secrets
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  - gateways
  - httproutes
  - referencepolicies
  - tlsroutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses/status
  - gateways/status
  - httproutes/status
  - tlsroutes/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - create
  - get
  - update
- apiGroups:
  - projectcontour.io
  resources:
  - contourconfigurations
  - extensionservices
  - httpproxies
  - tlscertificatedelegations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - projectcontour.io
  resources:
  - contourconfigurations/status
  - extensionservices/status
  - httpproxies/status
  verbs:
  - create
  - get
  - update

---
apiVersion: v1
kind: Service
metadata:
  name: contour
  namespace: projectcontour
spec:
  ports:
  - port: 8001
    name: xds
    protocol: TCP
    targetPort: 8001
  selector:
    app: contour
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: envoy
  namespace: projectcontour
spec:
  ports:
  - port: 80
    name: http
    protocol: TCP
    targetPort: 8080
  - port: 443
    name: https
    protocol: TCP
    targetPort: 8443
  selector:
    app: envoy
  type: ClusterIP
  clusterIP: {CLUSTER_IP}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: contour
  name: contour
  namespace: projectcontour
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      # This value of maxSurge means that during a rolling update
      # the new ReplicaSet will be created first.
      maxSurge: 50%
  selector:
    matchLabels:
      app: contour
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
      labels:
        app: contour
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: contour
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - serve
        - --incluster
        - --xds-address=0.0.0.0
        - --xds-port=8001
        - --contour-cafile=/certs/ca.crt
        - --contour-cert-file=/certs/tls.crt
        - --contour-key-file=/certs/tls.key
        - --config-path=/config/contour.yaml
        command: ["contour"]
        image: ghcr.io/projectcontour/contour:v1.20.0
        imagePullPolicy: IfNotPresent
        name: contour
        ports:
        - containerPort: 8001
          name: xds
          protocol: TCP
        - containerPort: 8000
          name: metrics
          protocol: TCP
        - containerPort: 6060
          name: debug
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
        readinessProbe:
          tcpSocket:
            port: 8001
          initialDelaySeconds: 15
          periodSeconds: 10
        volumeMounts:
          - name: contourcert
            mountPath: /certs
            readOnly: true
          - name: contour-config
            mountPath: /config
            readOnly: true
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
      dnsPolicy: ClusterFirst
      serviceAccountName: contour
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
      volumes:
        - name: contourcert
          secret:
            secretName: contourcert
        - name: contour-config
          configMap:
            name: contour
            defaultMode: 0644
            items:
            - key: contour.yaml
              path: contour.yaml

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: envoy
  name: envoy
  namespace: projectcontour
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 10%
  selector:
    matchLabels:
      app: envoy
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8002"
        prometheus.io/path: "/stats/prometheus"
      labels:
        app: envoy
    spec:
      containers:
      - command:
        - /bin/contour
        args:
          - envoy
          - shutdown-manager
        image: ghcr.io/projectcontour/contour:v1.20.0
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
                - /bin/contour
                - envoy
                - shutdown
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8090
          initialDelaySeconds: 3
          periodSeconds: 10
        name: shutdown-manager
        volumeMounts:
          - name: envoy-admin
            mountPath: /admin
      - args:
        - -c
        - /config/envoy.json
        - --service-cluster $(CONTOUR_NAMESPACE)
        - --service-node $(ENVOY_POD_NAME)
        - --log-level info
        command:
        - envoy
        image: docker.io/envoyproxy/envoy:v1.21.0
        imagePullPolicy: IfNotPresent
        name: envoy
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: ENVOY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        ports:
        - containerPort: 8080
          hostPort: 80
          name: http
          protocol: TCP
        - containerPort: 8443
          hostPort: 443
          name: https
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8002
          initialDelaySeconds: 3
          periodSeconds: 4
        volumeMounts:
          - name: envoy-config
            mountPath: /config
            readOnly: true
          - name: envoycert
            mountPath: /certs
            readOnly: true
          - name: envoy-admin
            mountPath: /admin
        lifecycle:
          preStop:
            httpGet:
              path: /shutdown
              port: 8090
              scheme: HTTP
      initContainers:
      - args:
        - bootstrap
        - /config/envoy.json
        - --xds-address=contour
        - --xds-port=8001
        - --xds-resource-version=v3
        - --resources-dir=/config/resources
        - --envoy-cafile=/certs/ca.crt
        - --envoy-cert-file=/certs/tls.crt
        - --envoy-key-file=/certs/tls.key
        command:
        - contour
        image: ghcr.io/projectcontour/contour:v1.20.0
        imagePullPolicy: IfNotPresent
        name: envoy-initconfig
        volumeMounts:
        - name: envoy-config
          mountPath: /config
        - name: envoycert
          mountPath: /certs
          readOnly: true
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      automountServiceAccountToken: false
      serviceAccountName: envoy
      terminationGracePeriodSeconds: 300
      volumes:
        - name: envoy-admin
          emptyDir: {}
        - name: envoy-config
          emptyDir: {}
        - name: envoycert
          secret:
            secretName: envoycert
      restartPolicy: Always
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/891
  creationTimestamp: null
  name: gatewayclasses.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: GatewayClass
    listKind: GatewayClassList
    plural: gatewayclasses
    shortNames:
    - gc
    singular: gatewayclass
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.controllerName
      name: Controller
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .spec.description
      name: Description
      priority: 1
      type: string
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: "GatewayClass describes a class of Gateways available to the
          user for creating Gateway resources. \n It is recommended that this resource
          be used as a template for Gateways. This means that a Gateway is based on
          the state of the GatewayClass at the time it was created and changes to
          the GatewayClass or associated parameters are not propagated down to existing
          Gateways. This recommendation is intended to limit the blast radius of changes
          to GatewayClass or associated parameters. If implementations choose to propagate
          GatewayClass changes to existing Gateways, that MUST be clearly documented
          by the implementation. \n Whenever one or more Gateways are using a GatewayClass,
          implementations MUST add the `gateway-exists-finalizer.gateway.networking.k8s.io`
          finalizer on the associated GatewayClass. This ensures that a GatewayClass
          associated with a Gateway is not deleted while in use. \n GatewayClass is
          a Cluster level resource."
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of GatewayClass.
            properties:
              controllerName:
                description: "ControllerName is the name of the controller that is
                  managing Gateways of this class. The value of this field MUST be
                  a domain prefixed path. \n Example: \"example.net/gateway-controller\".
                  \n This field is not mutable and cannot be empty. \n Support: Core"
                maxLength: 253
                minLength: 1
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                type: string
              description:
                description: Description helps describe a GatewayClass with more details.
                maxLength: 64
                type: string
              parametersRef:
                description: "ParametersRef is a reference to a resource that contains
                  the configuration parameters corresponding to the GatewayClass.
                  This is optional if the controller does not require any additional
                  configuration. \n ParametersRef can reference a standard Kubernetes
                  resource, i.e. ConfigMap, or an implementation-specific custom resource.
                  The resource can be cluster-scoped or namespace-scoped. \n If the
                  referent cannot be found, the GatewayClass's \"InvalidParameters\"
                  status condition will be true. \n Support: Custom"
                properties:
                  group:
                    description: Group is the group of the referent.
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    description: Kind is kind of the referent.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: Name is the name of the referent.
                    maxLength: 253
                    minLength: 1
                    type: string
                  namespace:
                    description: Namespace is the namespace of the referent. This
                      field is required when referring to a Namespace-scoped resource
                      and MUST be unset when referring to a Cluster-scoped resource.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                required:
                - group
                - kind
                - name
                type: object
            required:
            - controllerName
            type: object
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Waiting
                status: Unknown
                type: Accepted
            description: Status defines the current state of GatewayClass.
            properties:
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Waiting
                  status: Unknown
                  type: Accepted
                description: "Conditions is the current status from the controller
                  for this GatewayClass. \n Controllers should prefer to publish conditions
                  using values of GatewayClassConditionType for the type of each Condition."
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/891
  creationTimestamp: null
  name: gateways.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: Gateway
    listKind: GatewayList
    plural: gateways
    shortNames:
    - gtw
    singular: gateway
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.gatewayClassName
      name: Class
      type: string
    - jsonPath: .status.addresses[*].value
      name: Address
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: Gateway represents an instance of a service-traffic handling
          infrastructure by binding Listeners to a set of IP addresses.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of Gateway.
            properties:
              addresses:
                description: "Addresses requested for this Gateway. This is optional
                  and behavior can depend on the implementation. If a value is set
                  in the spec and the requested address is invalid or unavailable,
                  the implementation MUST indicate this in the associated entry in
                  GatewayStatus.Addresses. \n The Addresses field represents a request
                  for the address(es) on the \"outside of the Gateway\", that traffic
                  bound for this Gateway will use. This could be the IP address or
                  hostname of an external load balancer or other networking infrastructure,
                  or some other address that traffic will be sent to. \n The .listener.hostname
                  field is used to route traffic that has already arrived at the Gateway
                  to the correct in-cluster destination. \n If no Addresses are specified,
                  the implementation MAY schedule the Gateway in an implementation-specific
                  manner, assigning an appropriate set of Addresses. \n The implementation
                  MUST bind all Listeners to every GatewayAddress that it assigns
                  to the Gateway and add a corresponding entry in GatewayStatus.Addresses.
                  \n Support: Core"
                items:
                  description: GatewayAddress describes an address that can be bound
                    to a Gateway.
                  properties:
                    type:
                      default: IPAddress
                      description: Type of the address.
                      enum:
                      - IPAddress
                      - Hostname
                      - NamedAddress
                      type: string
                    value:
                      description: "Value of the address. The validity of the values
                        will depend on the type and support by the controller. \n
                        Examples: `1.2.3.4`, `128::1`, `my-ip-address`."
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - value
                  type: object
                maxItems: 16
                type: array
              gatewayClassName:
                description: GatewayClassName used for this Gateway. This is the name
                  of a GatewayClass resource.
                maxLength: 253
                minLength: 1
                type: string
              listeners:
                description: "Listeners associated with this Gateway. Listeners define
                  logical endpoints that are bound on this Gateway's addresses. At
                  least one Listener MUST be specified. \n Each listener in a Gateway
                  must have a unique combination of Hostname, Port, and Protocol.
                  \n An implementation MAY group Listeners by Port and then collapse
                  each group of Listeners into a single Listener if the implementation
                  determines that the Listeners in the group are \"compatible\". An
                  implementation MAY also group together and collapse compatible Listeners
                  belonging to different Gateways. \n For example, an implementation
                  might consider Listeners to be compatible with each other if all
                  of the following conditions are met: \n 1. Either each Listener
                  within the group specifies the \"HTTP\"    Protocol or each Listener
                  within the group specifies either    the \"HTTPS\" or \"TLS\" Protocol.
                  \n 2. Each Listener within the group specifies a Hostname that is
                  unique    within the group. \n 3. As a special case, one Listener
                  within a group may omit Hostname,    in which case this Listener
                  matches when no other Listener    matches. \n If the implementation
                  does collapse compatible Listeners, the hostname provided in the
                  incoming client request MUST be matched to a Listener to find the
                  correct set of Routes. The incoming hostname MUST be matched using
                  the Hostname field for each Listener in order of most to least specific.
                  That is, exact matches must be processed before wildcard matches.
                  \n If this field specifies multiple Listeners that have the same
                  Port value but are not compatible, the implementation must raise
                  a \"Conflicted\" condition in the Listener status. \n Support: Core"
                items:
                  description: Listener embodies the concept of a logical endpoint
                    where a Gateway accepts network connections.
                  properties:
                    allowedRoutes:
                      default:
                        namespaces:
                          from: Same
                      description: "AllowedRoutes defines the types of routes that
                        MAY be attached to a Listener and the trusted namespaces where
                        those Route resources MAY be present. \n Although a client
                        request may match multiple route rules, only one rule may
                        ultimately receive the request. Matching precedence MUST be
                        determined in order of the following criteria: \n * The most
                        specific match as defined by the Route type. * The oldest
                        Route based on creation timestamp. For example, a Route with
                        \  a creation timestamp of \"2020-09-08 01:02:03\" is given
                        precedence over   a Route with a creation timestamp of \"2020-09-08
                        01:02:04\". * If everything else is equivalent, the Route
                        appearing first in   alphabetical order (namespace/name) should
                        be given precedence. For   example, foo/bar is given precedence
                        over foo/baz. \n All valid rules within a Route attached to
                        this Listener should be implemented. Invalid Route rules can
                        be ignored (sometimes that will mean the full Route). If a
                        Route rule transitions from valid to invalid, support for
                        that Route rule should be dropped to ensure consistency. For
                        example, even if a filter specified by a Route rule is invalid,
                        the rest of the rules within that Route should still be supported.
                        \n Support: Core"
                      properties:
                        kinds:
                          description: "Kinds specifies the groups and kinds of Routes
                            that are allowed to bind to this Gateway Listener. When
                            unspecified or empty, the kinds of Routes selected are
                            determined using the Listener protocol. \n A RouteGroupKind
                            MUST correspond to kinds of Routes that are compatible
                            with the application protocol specified in the Listener's
                            Protocol field. If an implementation does not support
                            or recognize this resource type, it MUST set the \"ResolvedRefs\"
                            condition to False for this Listener with the \"InvalidRoutesRef\"
                            reason. \n Support: Core"
                          items:
                            description: RouteGroupKind indicates the group and kind
                              of a Route resource.
                            properties:
                              group:
                                default: gateway.networking.k8s.io
                                description: Group is the group of the Route.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: Kind is the kind of the Route.
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                            required:
                            - kind
                            type: object
                          maxItems: 8
                          type: array
                        namespaces:
                          default:
                            from: Same
                          description: "Namespaces indicates namespaces from which
                            Routes may be attached to this Listener. This is restricted
                            to the namespace of this Gateway by default. \n Support:
                            Core"
                          properties:
                            from:
                              default: Same
                              description: "From indicates where Routes will be selected
                                for this Gateway. Possible values are: * All: Routes
                                in all namespaces may be used by this Gateway. * Selector:
                                Routes in namespaces selected by the selector may
                                be used by   this Gateway. * Same: Only Routes in
                                the same namespace may be used by this Gateway. \n
                                Support: Core"
                              enum:
                              - All
                              - Selector
                              - Same
                              type: string
                            selector:
                              description: "Selector must be specified when From is
                                set to \"Selector\". In that case, only Routes in
                                Namespaces matching this Selector will be selected
                                by this Gateway. This field is ignored for other values
                                of \"From\". \n Support: Core"
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                          type: object
                      type: object
                    hostname:
                      description: "Hostname specifies the virtual hostname to match
                        for protocol types that define this concept. When unspecified,
                        all hostnames are matched. This field is ignored for protocols
                        that don't require hostname based matching. \n Implementations
                        MUST apply Hostname matching appropriately for each of the
                        following protocols: \n * TLS: The Listener Hostname MUST
                        match the SNI. * HTTP: The Listener Hostname MUST match the
                        Host header of the request. * HTTPS: The Listener Hostname
                        SHOULD match at both the TLS and HTTP   protocol layers as
                        described above. If an implementation does not   ensure that
                        both the SNI and Host header match the Listener hostname,
                        \  it MUST clearly document that. \n For HTTPRoute and TLSRoute
                        resources, there is an interaction with the `spec.hostnames`
                        array. When both listener and route specify hostnames, there
                        MUST be an intersection between the values for a Route to
                        be accepted. For more information, refer to the Route specific
                        Hostnames documentation. \n Support: Core"
                      maxLength: 253
                      minLength: 1
                      pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    name:
                      description: "Name is the name of the Listener. \n Support:
                        Core"
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    port:
                      description: "Port is the network port. Multiple listeners may
                        use the same port, subject to the Listener compatibility rules.
                        \n Support: Core"
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    protocol:
                      description: "Protocol specifies the network protocol this listener
                        expects to receive. \n Support: Core"
                      maxLength: 255
                      minLength: 1
                      pattern: ^[a-zA-Z0-9]([-a-zSA-Z0-9]*[a-zA-Z0-9])?$|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9]+$
                      type: string
                    tls:
                      description: "TLS is the TLS configuration for the Listener.
                        This field is required if the Protocol field is \"HTTPS\"
                        or \"TLS\". It is invalid to set this field if the Protocol
                        field is \"HTTP\", \"TCP\", or \"UDP\". \n The association
                        of SNIs to Certificate defined in GatewayTLSConfig is defined
                        based on the Hostname field for this listener. \n The GatewayClass
                        MUST use the longest matching SNI out of all available certificates
                        for any TLS handshake. \n Support: Core"
                      properties:
                        certificateRefs:
                          description: "CertificateRefs contains a series of references
                            to Kubernetes objects that contains TLS certificates and
                            private keys. These certificates are used to establish
                            a TLS handshake for requests that match the hostname of
                            the associated listener. \n A single CertificateRef to
                            a Kubernetes Secret has \"Core\" support. Implementations
                            MAY choose to support attaching multiple certificates
                            to a Listener, but this behavior is implementation-specific.
                            \n References to a resource in different namespace are
                            invalid UNLESS there is a ReferencePolicy in the target
                            namespace that allows the certificate to be attached.
                            If a ReferencePolicy does not allow this reference, the
                            \"ResolvedRefs\" condition MUST be set to False for this
                            listener with the \"InvalidCertificateRef\" reason. \n
                            This field is required to have at least one element when
                            the mode is set to \"Terminate\" (default) and is optional
                            otherwise. \n CertificateRefs can reference to standard
                            Kubernetes resources, i.e. Secret, or implementation-specific
                            custom resources. \n Support: Core - A single reference
                            to a Kubernetes Secret \n Support: Implementation-specific
                            (More than one reference or other resource types)"
                          items:
                            description: "SecretObjectReference identifies an API
                              object including its namespace, defaulting to Secret.
                              \n The API object must be valid in the cluster; the
                              Group and Kind must be registered in the cluster for
                              this reference to be valid. \n References to objects
                              with invalid Group and Kind are not valid, and must
                              be rejected by the implementation, with appropriate
                              Conditions set on the containing object."
                            properties:
                              group:
                                default: ""
                                description: Group is the group of the referent. For
                                  example, "networking.k8s.io". When unspecified (empty
                                  string), core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                default: Secret
                                description: Kind is kind of the referent. For example
                                  "HTTPRoute" or "Service".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                              namespace:
                                description: "Namespace is the namespace of the backend.
                                  When unspecified, the local namespace is inferred.
                                  \n Note that when a namespace is specified, a ReferencePolicy
                                  object is required in the referent namespace to
                                  allow that namespace's owner to accept the reference.
                                  See the ReferencePolicy documentation for details.
                                  \n Support: Core"
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                            required:
                            - name
                            type: object
                          maxItems: 64
                          type: array
                        mode:
                          default: Terminate
                          description: "Mode defines the TLS behavior for the TLS
                            session initiated by the client. There are two possible
                            modes: \n - Terminate: The TLS session between the downstream
                            client   and the Gateway is terminated at the Gateway.
                            This mode requires   certificateRefs to be set and contain
                            at least one element. - Passthrough: The TLS session is
                            NOT terminated by the Gateway. This   implies that the
                            Gateway can't decipher the TLS stream except for   the
                            ClientHello message of the TLS protocol.   CertificateRefs
                            field is ignored in this mode. \n Support: Core"
                          enum:
                          - Terminate
                          - Passthrough
                          type: string
                        options:
                          additionalProperties:
                            description: AnnotationValue is the value of an annotation
                              in Gateway API. This is used for validation of maps
                              such as TLS options. This roughly matches Kubernetes
                              annotation validation, although the length validation
                              in that case is based on the entire size of the annotations
                              struct.
                            maxLength: 4096
                            minLength: 0
                            type: string
                          description: "Options are a list of key/value pairs to enable
                            extended TLS configuration for each implementation. For
                            example, configuring the minimum TLS version or supported
                            cipher suites. \n A set of common keys MAY be defined
                            by the API in the future. To avoid any ambiguity, implementation-specific
                            definitions MUST use domain-prefixed names, such as `example.com/my-custom-option`.
                            Un-prefixed names are reserved for key names defined by
                            Gateway API. \n Support: Implementation-specific"
                          maxProperties: 16
                          type: object
                      type: object
                  required:
                  - name
                  - port
                  - protocol
                  type: object
                maxItems: 64
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
            required:
            - gatewayClassName
            - listeners
            type: object
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: NotReconciled
                status: Unknown
                type: Scheduled
            description: Status defines the current state of Gateway.
            properties:
              addresses:
                description: Addresses lists the IP addresses that have actually been
                  bound to the Gateway. These addresses may differ from the addresses
                  in the Spec, e.g. if the Gateway automatically assigns an address
                  from a reserved pool.
                items:
                  description: GatewayAddress describes an address that can be bound
                    to a Gateway.
                  properties:
                    type:
                      default: IPAddress
                      description: Type of the address.
                      enum:
                      - IPAddress
                      - Hostname
                      - NamedAddress
                      type: string
                    value:
                      description: "Value of the address. The validity of the values
                        will depend on the type and support by the controller. \n
                        Examples: `1.2.3.4`, `128::1`, `my-ip-address`."
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - value
                  type: object
                maxItems: 16
                type: array
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: NotReconciled
                  status: Unknown
                  type: Scheduled
                description: "Conditions describe the current conditions of the Gateway.
                  \n Implementations should prefer to express Gateway conditions using
                  the `GatewayConditionType` and `GatewayConditionReason` constants
                  so that operators and tools can converge on a common vocabulary
                  to describe Gateway state. \n Known condition types are: \n * \"Scheduled\"
                  * \"Ready\""
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              listeners:
                description: Listeners provide status for each unique listener port
                  defined in the Spec.
                items:
                  description: ListenerStatus is the status associated with a Listener.
                  properties:
                    attachedRoutes:
                      description: AttachedRoutes represents the total number of Routes
                        that have been successfully attached to this Listener.
                      format: int32
                      type: integer
                    conditions:
                      description: Conditions describe the current condition of this
                        listener.
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource. --- This struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example, type FooStatus struct{
                          \    // Represents the observations of a foo's current state.
                          \    // Known .status.conditions.type are: \"Available\",
                          \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                          \    // +patchStrategy=merge     // +listType=map     //
                          +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                          patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                          \n     // other fields }"
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime is the last time the condition
                              transitioned from one status to another. This should
                              be when the underlying condition changed.  If that is
                              not known, then using the time when the API field changed
                              is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: message is a human readable message indicating
                              details about the transition. This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation
                              that the condition was set based upon. For instance,
                              if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                              is 9, the condition is out of date with respect to the
                              current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. The value should
                              be a CamelCase string. This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              --- Many .condition.type values are consistent across
                              resources like Available, but because arbitrary conditions
                              can be useful (see .node.status.conditions), the ability
                              to deconflict is important. The regex it matches is
                              (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    name:
                      description: Name is the name of the Listener that this status
                        corresponds to.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    supportedKinds:
                      description: "SupportedKinds is the list indicating the Kinds
                        supported by this listener. This MUST represent the kinds
                        an implementation supports for that Listener configuration.
                        \n If kinds are specified in Spec that are not supported,
                        they MUST NOT appear in this list and an implementation MUST
                        set the \"ResolvedRefs\" condition to \"False\" with the \"InvalidRouteKinds\"
                        reason. If both valid and invalid Route kinds are specified,
                        the implementation MUST reference the valid Route kinds that
                        have been specified."
                      items:
                        description: RouteGroupKind indicates the group and kind of
                          a Route resource.
                        properties:
                          group:
                            default: gateway.networking.k8s.io
                            description: Group is the group of the Route.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            description: Kind is the kind of the Route.
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                        required:
                        - kind
                        type: object
                      maxItems: 8
                      type: array
                  required:
                  - attachedRoutes
                  - conditions
                  - name
                  - supportedKinds
                  type: object
                maxItems: 64
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/891
  creationTimestamp: null
  name: httproutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: HTTPRoute
    listKind: HTTPRouteList
    plural: httproutes
    singular: httproute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.hostnames
      name: Hostnames
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: HTTPRoute provides a way to route HTTP requests. This includes
          the capability to match requests by hostname, path, header, or query param.
          Filters can be used to specify additional processing steps. Backends specify
          where matching requests should be routed.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of HTTPRoute.
            properties:
              hostnames:
                description: "Hostnames defines a set of hostname that should match
                  against the HTTP Host header to select a HTTPRoute to process the
                  request. This matches the RFC 1123 definition of a hostname with
                  2 notable exceptions: \n 1. IPs are not allowed. 2. A hostname may
                  be prefixed with a wildcard label (`*.`). The wildcard    label
                  must appear by itself as the first label. \n If a hostname is specified
                  by both the Listener and HTTPRoute, there must be at least one intersecting
                  hostname for the HTTPRoute to be attached to the Listener. For example:
                  \n * A Listener with `test.example.com` as the hostname matches
                  HTTPRoutes   that have either not specified any hostnames, or have
                  specified at   least one of `test.example.com` or `*.example.com`.
                  * A Listener with `*.example.com` as the hostname matches HTTPRoutes
                  \  that have either not specified any hostnames or have specified
                  at least   one hostname that matches the Listener hostname. For
                  example,   `test.example.com` and `*.example.com` would both match.
                  On the other   hand, `example.com` and `test.example.net` would
                  not match. \n If both the Listener and HTTPRoute have specified
                  hostnames, any HTTPRoute hostnames that do not match the Listener
                  hostname MUST be ignored. For example, if a Listener specified `*.example.com`,
                  and the HTTPRoute specified `test.example.com` and `test.example.net`,
                  `test.example.net` must not be considered for a match. \n If both
                  the Listener and HTTPRoute have specified hostnames, and none match
                  with the criteria above, then the HTTPRoute is not accepted. The
                  implementation must raise an 'Accepted' Condition with a status
                  of `False` in the corresponding RouteParentStatus. \n Support: Core"
                items:
                  description: "Hostname is the fully qualified domain name of a network
                    host. This matches the RFC 1123 definition of a hostname with
                    2 notable exceptions: \n 1. IPs are not allowed. 2. A hostname
                    may be prefixed with a wildcard label (`*.`). The wildcard    label
                    must appear by itself as the first label. \n Hostname can be \"precise\"
                    which is a domain name without the terminating dot of a network
                    host (e.g. \"foo.example.com\") or \"wildcard\", which is a domain
                    name prefixed with a single wildcard label (e.g. `*.example.com`).
                    \n Note that as per RFC1035 and RFC1123, a *label* must consist
                    of lower case alphanumeric characters or '-', and must start and
                    end with an alphanumeric character. No other punctuation is allowed."
                  maxLength: 253
                  minLength: 1
                  pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                maxItems: 16
                type: array
              parentRefs:
                description: "ParentRefs references the resources (usually Gateways)
                  that a Route wants to be attached to. Note that the referenced parent
                  resource needs to allow this for the attachment to be complete.
                  For Gateways, that means the Gateway needs to allow attachment from
                  Routes of this kind and namespace. \n The only kind of parent resource
                  with \"Core\" support is Gateway. This API may be extended in the
                  future to support additional kinds of parent resources such as one
                  of the route kinds. \n It is invalid to reference an identical parent
                  more than once. It is valid to reference multiple distinct sections
                  within the same parent resource, such as 2 Listeners within a Gateway.
                  \n It is possible to separately reference multiple distinct objects
                  that may be collapsed by an implementation. For example, some implementations
                  may choose to merge compatible Gateway Listeners together. If that
                  is the case, the list of routes attached to those resources should
                  also be merged."
                items:
                  description: "ParentRef identifies an API object (usually a Gateway)
                    that can be considered a parent of this resource (usually a route).
                    The only kind of parent resource with \"Core\" support is Gateway.
                    This API may be extended in the future to support additional kinds
                    of parent resources, such as HTTPRoute. \n The API object must
                    be valid in the cluster; the Group and Kind must be registered
                    in the cluster for this reference to be valid. \n References to
                    objects with invalid Group and Kind are not valid, and must be
                    rejected by the implementation, with appropriate Conditions set
                    on the containing object."
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: "Group is the group of the referent. \n Support:
                        Core"
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: "Kind is kind of the referent. \n Support: Core
                        (Gateway) Support: Custom (Other Resources)"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: "Name is the name of the referent. \n Support:
                        Core"
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: "Namespace is the namespace of the referent. When
                        unspecified (or empty string), this refers to the local namespace
                        of the Route. \n Support: Core"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    sectionName:
                      description: "SectionName is the name of a section within the
                        target resource. In the following resources, SectionName is
                        interpreted as the following: \n * Gateway: Listener Name
                        \n Implementations MAY choose to support attaching Routes
                        to other resources. If that is the case, they MUST clearly
                        document how SectionName is interpreted. \n When unspecified
                        (empty string), this will reference the entire resource. For
                        the purpose of status, an attachment is considered successful
                        if at least one section in the parent resource accepts it.
                        For example, Gateway listeners can restrict which Routes can
                        attach to them by Route kind, namespace, or hostname. If 1
                        of 2 Gateway listeners accept attachment from the referencing
                        Route, the Route MUST be considered successfully attached.
                        If no Gateway listeners accept attachment from this Route,
                        the Route MUST be considered detached from the Gateway. \n
                        Support: Core"
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
              rules:
                default:
                - matches:
                  - path:
                      type: PathPrefix
                      value: /
                description: Rules are a list of HTTP matchers, filters and actions.
                items:
                  description: HTTPRouteRule defines semantics for matching an HTTP
                    request based on conditions (matches), processing it (filters),
                    and forwarding the request to an API object (backendRefs).
                  properties:
                    backendRefs:
                      description: "If unspecified or invalid (refers to a non-existent
                        resource or a Service with no endpoints), the rule performs
                        no forwarding. If there are also no filters specified that
                        would result in a response being sent, a HTTP 503 status code
                        is returned. 503 responses must be sent so that the overall
                        weight is respected; if an invalid backend is requested to
                        have 80% of requests, then 80% of requests must get a 503
                        instead. \n Support: Core for Kubernetes Service Support:
                        Custom for any other resource \n Support for weight: Core"
                      items:
                        description: HTTPBackendRef defines how a HTTPRoute should
                          forward an HTTP request.
                        properties:
                          filters:
                            description: "Filters defined at this level should be
                              executed if and only if the request is being forwarded
                              to the backend defined here. \n Support: Custom (For
                              broader support of filters, use the Filters field in
                              HTTPRouteRule.)"
                            items:
                              description: HTTPRouteFilter defines processing steps
                                that must be completed during the request or response
                                lifecycle. HTTPRouteFilters are meant as an extension
                                point to express processing that may be done in Gateway
                                implementations. Some examples include request or
                                response modification, implementing authentication
                                strategies, rate-limiting, and traffic shaping. API
                                guarantee/conformance is defined based on the type
                                of the filter.
                              properties:
                                extensionRef:
                                  description: "ExtensionRef is an optional, implementation-specific
                                    extension to the \"filter\" behavior.  For example,
                                    resource \"myroutefilter\" in group \"networking.example.net\").
                                    ExtensionRef MUST NOT be used for core and extended
                                    filters. \n Support: Implementation-specific"
                                  properties:
                                    group:
                                      description: Group is the group of the referent.
                                        For example, "networking.k8s.io". When unspecified
                                        (empty string), core API group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      description: Kind is kind of the referent. For
                                        example "HTTPRoute" or "Service".
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                  required:
                                  - group
                                  - kind
                                  - name
                                  type: object
                                requestHeaderModifier:
                                  description: "RequestHeaderModifier defines a schema
                                    for a filter that modifies request headers. \n
                                    Support: Core"
                                  properties:
                                    add:
                                      description: "Add adds the given header(s) (name,
                                        value) to the request before the action. It
                                        appends to any existing values associated
                                        with the header name. \n Input:   GET /foo
                                        HTTP/1.1   my-header: foo \n Config:   add:
                                        \  - name: \"my-header\"     value: \"bar\"
                                        \n Output:   GET /foo HTTP/1.1   my-header:
                                        foo   my-header: bar"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: "Remove the given header(s) from
                                        the HTTP request before the action. The value
                                        of Remove is a list of HTTP header names.
                                        Note that the header names are case-insensitive
                                        (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                        \n Input:   GET /foo HTTP/1.1   my-header1:
                                        foo   my-header2: bar   my-header3: baz \n
                                        Config:   remove: [\"my-header1\", \"my-header3\"]
                                        \n Output:   GET /foo HTTP/1.1   my-header2:
                                        bar"
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                    set:
                                      description: "Set overwrites the request with
                                        the given header (name, value) before the
                                        action. \n Input:   GET /foo HTTP/1.1   my-header:
                                        foo \n Config:   set:   - name: \"my-header\"
                                        \    value: \"bar\" \n Output:   GET /foo
                                        HTTP/1.1   my-header: bar"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                requestMirror:
                                  description: "RequestMirror defines a schema for
                                    a filter that mirrors requests. Requests are sent
                                    to the specified destination, but responses from
                                    that destination are ignored. \n Support: Extended"
                                  properties:
                                    backendRef:
                                      description: "BackendRef references a resource
                                        where mirrored requests are sent. \n If the
                                        referent cannot be found, this BackendRef
                                        is invalid and must be dropped from the Gateway.
                                        The controller must ensure the \"ResolvedRefs\"
                                        condition on the Route status is set to `status:
                                        False` and not configure this backend in the
                                        underlying implementation. \n If there is
                                        a cross-namespace reference to an *existing*
                                        object that is not allowed by a ReferencePolicy,
                                        the controller must ensure the \"ResolvedRefs\"
                                        \ condition on the Route is set to `status:
                                        False`, with the \"RefNotPermitted\" reason
                                        and not configure this backend in the underlying
                                        implementation. \n In either error case, the
                                        Message of the `ResolvedRefs` Condition should
                                        be used to provide more detail about the problem.
                                        \n Support: Extended for Kubernetes Service
                                        Support: Custom for any other resource"
                                      properties:
                                        group:
                                          default: ""
                                          description: Group is the group of the referent.
                                            For example, "networking.k8s.io". When
                                            unspecified (empty string), core API group
                                            is inferred.
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        kind:
                                          default: Service
                                          description: Kind is kind of the referent.
                                            For example "HTTPRoute" or "Service".
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                          type: string
                                        name:
                                          description: Name is the name of the referent.
                                          maxLength: 253
                                          minLength: 1
                                          type: string
                                        namespace:
                                          description: "Namespace is the namespace
                                            of the backend. When unspecified, the
                                            local namespace is inferred. \n Note that
                                            when a namespace is specified, a ReferencePolicy
                                            object is required in the referent namespace
                                            to allow that namespace's owner to accept
                                            the reference. See the ReferencePolicy
                                            documentation for details. \n Support:
                                            Core"
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                        port:
                                          description: Port specifies the destination
                                            port number to use for this resource.
                                            Port is required when the referent is
                                            a Kubernetes Service. For other resources,
                                            destination port might be derived from
                                            the referent resource or this field.
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                      required:
                                      - name
                                      type: object
                                  required:
                                  - backendRef
                                  type: object
                                requestRedirect:
                                  description: "RequestRedirect defines a schema for
                                    a filter that responds to the request with an
                                    HTTP redirection. \n Support: Core"
                                  properties:
                                    hostname:
                                      description: "Hostname is the hostname to be
                                        used in the value of the `Location` header
                                        in the response. When empty, the hostname
                                        of the request is used. \n Support: Core"
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    port:
                                      description: "Port is the port to be used in
                                        the value of the `Location` header in the
                                        response. When empty, port (if specified)
                                        of the request is used. \n Support: Extended"
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                    scheme:
                                      description: "Scheme is the scheme to be used
                                        in the value of the `Location` header in the
                                        response. When empty, the scheme of the request
                                        is used. \n Support: Extended"
                                      enum:
                                      - http
                                      - https
                                      type: string
                                    statusCode:
                                      default: 302
                                      description: "StatusCode is the HTTP status
                                        code to be used in response. \n Support: Core"
                                      enum:
                                      - 301
                                      - 302
                                      type: integer
                                  type: object
                                type:
                                  description: "Type identifies the type of filter
                                    to apply. As with other API fields, types are
                                    classified into three conformance levels: \n -
                                    Core: Filter types and their corresponding configuration
                                    defined by   \"Support: Core\" in this package,
                                    e.g. \"RequestHeaderModifier\". All   implementations
                                    must support core filters. \n - Extended: Filter
                                    types and their corresponding configuration defined
                                    by   \"Support: Extended\" in this package, e.g.
                                    \"RequestMirror\". Implementers   are encouraged
                                    to support extended filters. \n - Custom: Filters
                                    that are defined and supported by specific vendors.
                                    \  In the future, filters showing convergence
                                    in behavior across multiple   implementations
                                    will be considered for inclusion in extended or
                                    core   conformance levels. Filter-specific configuration
                                    for such filters   is specified using the ExtensionRef
                                    field. `Type` should be set to   \"ExtensionRef\"
                                    for custom filters. \n Implementers are encouraged
                                    to define custom implementation types to extend
                                    the core API with implementation-specific behavior.
                                    \n If a reference to a custom filter type cannot
                                    be resolved, the filter MUST NOT be skipped. Instead,
                                    requests that would have been processed by that
                                    filter MUST receive a HTTP error response."
                                  enum:
                                  - RequestHeaderModifier
                                  - RequestMirror
                                  - RequestRedirect
                                  - ExtensionRef
                                  type: string
                              required:
                              - type
                              type: object
                            maxItems: 16
                            type: array
                          group:
                            default: ""
                            description: Group is the group of the referent. For example,
                              "networking.k8s.io". When unspecified (empty string),
                              core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: Kind is kind of the referent. For example
                              "HTTPRoute" or "Service".
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: "Namespace is the namespace of the backend.
                              When unspecified, the local namespace is inferred. \n
                              Note that when a namespace is specified, a ReferencePolicy
                              object is required in the referent namespace to allow
                              that namespace's owner to accept the reference. See
                              the ReferencePolicy documentation for details. \n Support:
                              Core"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: Port specifies the destination port number
                              to use for this resource. Port is required when the
                              referent is a Kubernetes Service. For other resources,
                              destination port might be derived from the referent
                              resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: "Weight specifies the proportion of requests
                              forwarded to the referenced backend. This is computed
                              as weight/(sum of all weights in this BackendRefs list).
                              For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision
                              an implementation supports. Weight is not a percentage
                              and the sum of weights does not need to equal 100. \n
                              If only one backend is specified and it has a weight
                              greater than 0, 100% of the traffic is forwarded to
                              that backend. If weight is set to 0, no traffic should
                              be forwarded for this entry. If unspecified, weight
                              defaults to 1. \n Support for this field varies based
                              on the context where used."
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                      maxItems: 16
                      type: array
                    filters:
                      description: "Filters define the filters that are applied to
                        requests that match this rule. \n The effects of ordering
                        of multiple behaviors are currently unspecified. This can
                        change in the future based on feedback during the alpha stage.
                        \n Conformance-levels at this level are defined based on the
                        type of filter: \n - ALL core filters MUST be supported by
                        all implementations. - Implementers are encouraged to support
                        extended filters. - Implementation-specific custom filters
                        have no API guarantees across   implementations. \n Specifying
                        a core filter multiple times has unspecified or custom conformance.
                        \n Support: Core"
                      items:
                        description: HTTPRouteFilter defines processing steps that
                          must be completed during the request or response lifecycle.
                          HTTPRouteFilters are meant as an extension point to express
                          processing that may be done in Gateway implementations.
                          Some examples include request or response modification,
                          implementing authentication strategies, rate-limiting, and
                          traffic shaping. API guarantee/conformance is defined based
                          on the type of the filter.
                        properties:
                          extensionRef:
                            description: "ExtensionRef is an optional, implementation-specific
                              extension to the \"filter\" behavior.  For example,
                              resource \"myroutefilter\" in group \"networking.example.net\").
                              ExtensionRef MUST NOT be used for core and extended
                              filters. \n Support: Implementation-specific"
                            properties:
                              group:
                                description: Group is the group of the referent. For
                                  example, "networking.k8s.io". When unspecified (empty
                                  string), core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: Kind is kind of the referent. For example
                                  "HTTPRoute" or "Service".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                            required:
                            - group
                            - kind
                            - name
                            type: object
                          requestHeaderModifier:
                            description: "RequestHeaderModifier defines a schema for
                              a filter that modifies request headers. \n Support:
                              Core"
                            properties:
                              add:
                                description: "Add adds the given header(s) (name,
                                  value) to the request before the action. It appends
                                  to any existing values associated with the header
                                  name. \n Input:   GET /foo HTTP/1.1   my-header:
                                  foo \n Config:   add:   - name: \"my-header\"     value:
                                  \"bar\" \n Output:   GET /foo HTTP/1.1   my-header:
                                  foo   my-header: bar"
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: "Name is the name of the HTTP Header
                                        to be matched. Name matching MUST be case
                                        insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                        \n If multiple entries specify equivalent
                                        header names, the first entry with an equivalent
                                        name MUST be considered for a match. Subsequent
                                        entries with an equivalent header name MUST
                                        be ignored. Due to the case-insensitivity
                                        of header names, \"foo\" and \"Foo\" are considered
                                        equivalent."
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: "Remove the given header(s) from the
                                  HTTP request before the action. The value of Remove
                                  is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                  \n Input:   GET /foo HTTP/1.1   my-header1: foo
                                  \  my-header2: bar   my-header3: baz \n Config:
                                  \  remove: [\"my-header1\", \"my-header3\"] \n Output:
                                  \  GET /foo HTTP/1.1   my-header2: bar"
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                              set:
                                description: "Set overwrites the request with the
                                  given header (name, value) before the action. \n
                                  Input:   GET /foo HTTP/1.1   my-header: foo \n Config:
                                  \  set:   - name: \"my-header\"     value: \"bar\"
                                  \n Output:   GET /foo HTTP/1.1   my-header: bar"
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: "Name is the name of the HTTP Header
                                        to be matched. Name matching MUST be case
                                        insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                        \n If multiple entries specify equivalent
                                        header names, the first entry with an equivalent
                                        name MUST be considered for a match. Subsequent
                                        entries with an equivalent header name MUST
                                        be ignored. Due to the case-insensitivity
                                        of header names, \"foo\" and \"Foo\" are considered
                                        equivalent."
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          requestMirror:
                            description: "RequestMirror defines a schema for a filter
                              that mirrors requests. Requests are sent to the specified
                              destination, but responses from that destination are
                              ignored. \n Support: Extended"
                            properties:
                              backendRef:
                                description: "BackendRef references a resource where
                                  mirrored requests are sent. \n If the referent cannot
                                  be found, this BackendRef is invalid and must be
                                  dropped from the Gateway. The controller must ensure
                                  the \"ResolvedRefs\" condition on the Route status
                                  is set to `status: False` and not configure this
                                  backend in the underlying implementation. \n If
                                  there is a cross-namespace reference to an *existing*
                                  object that is not allowed by a ReferencePolicy,
                                  the controller must ensure the \"ResolvedRefs\"
                                  \ condition on the Route is set to `status: False`,
                                  with the \"RefNotPermitted\" reason and not configure
                                  this backend in the underlying implementation. \n
                                  In either error case, the Message of the `ResolvedRefs`
                                  Condition should be used to provide more detail
                                  about the problem. \n Support: Extended for Kubernetes
                                  Service Support: Custom for any other resource"
                                properties:
                                  group:
                                    default: ""
                                    description: Group is the group of the referent.
                                      For example, "networking.k8s.io". When unspecified
                                      (empty string), core API group is inferred.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    default: Service
                                    description: Kind is kind of the referent. For
                                      example "HTTPRoute" or "Service".
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: "Namespace is the namespace of the
                                      backend. When unspecified, the local namespace
                                      is inferred. \n Note that when a namespace is
                                      specified, a ReferencePolicy object is required
                                      in the referent namespace to allow that namespace's
                                      owner to accept the reference. See the ReferencePolicy
                                      documentation for details. \n Support: Core"
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  port:
                                    description: Port specifies the destination port
                                      number to use for this resource. Port is required
                                      when the referent is a Kubernetes Service. For
                                      other resources, destination port might be derived
                                      from the referent resource or this field.
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                required:
                                - name
                                type: object
                            required:
                            - backendRef
                            type: object
                          requestRedirect:
                            description: "RequestRedirect defines a schema for a filter
                              that responds to the request with an HTTP redirection.
                              \n Support: Core"
                            properties:
                              hostname:
                                description: "Hostname is the hostname to be used
                                  in the value of the `Location` header in the response.
                                  When empty, the hostname of the request is used.
                                  \n Support: Core"
                                maxLength: 253
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              port:
                                description: "Port is the port to be used in the value
                                  of the `Location` header in the response. When empty,
                                  port (if specified) of the request is used. \n Support:
                                  Extended"
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              scheme:
                                description: "Scheme is the scheme to be used in the
                                  value of the `Location` header in the response.
                                  When empty, the scheme of the request is used. \n
                                  Support: Extended"
                                enum:
                                - http
                                - https
                                type: string
                              statusCode:
                                default: 302
                                description: "StatusCode is the HTTP status code to
                                  be used in response. \n Support: Core"
                                enum:
                                - 301
                                - 302
                                type: integer
                            type: object
                          type:
                            description: "Type identifies the type of filter to apply.
                              As with other API fields, types are classified into
                              three conformance levels: \n - Core: Filter types and
                              their corresponding configuration defined by   \"Support:
                              Core\" in this package, e.g. \"RequestHeaderModifier\".
                              All   implementations must support core filters. \n
                              - Extended: Filter types and their corresponding configuration
                              defined by   \"Support: Extended\" in this package,
                              e.g. \"RequestMirror\". Implementers   are encouraged
                              to support extended filters. \n - Custom: Filters that
                              are defined and supported by specific vendors.   In
                              the future, filters showing convergence in behavior
                              across multiple   implementations will be considered
                              for inclusion in extended or core   conformance levels.
                              Filter-specific configuration for such filters   is
                              specified using the ExtensionRef field. `Type` should
                              be set to   \"ExtensionRef\" for custom filters. \n
                              Implementers are encouraged to define custom implementation
                              types to extend the core API with implementation-specific
                              behavior. \n If a reference to a custom filter type
                              cannot be resolved, the filter MUST NOT be skipped.
                              Instead, requests that would have been processed by
                              that filter MUST receive a HTTP error response."
                            enum:
                            - RequestHeaderModifier
                            - RequestMirror
                            - RequestRedirect
                            - ExtensionRef
                            type: string
                        required:
                        - type
                        type: object
                      maxItems: 16
                      type: array
                    matches:
                      default:
                      - path:
                          type: PathPrefix
                          value: /
                      description: "Matches define conditions used for matching the
                        rule against incoming HTTP requests. Each match is independent,
                        i.e. this rule will be matched if **any** one of the matches
                        is satisfied. \n For example, take the following matches configuration:
                        \n ``` matches: - path:     value: \"/foo\"   headers:   -
                        name: \"version\"     value: \"v2\" - path:     value: \"/v2/foo\"
                        ``` \n For a request to match against this rule, a request
                        must satisfy EITHER of the two conditions: \n - path prefixed
                        with `/foo` AND contains the header `version: v2` - path prefix
                        of `/v2/foo` \n See the documentation for HTTPRouteMatch on
                        how to specify multiple match conditions that should be ANDed
                        together. \n If no matches are specified, the default is a
                        prefix path match on \"/\", which has the effect of matching
                        every HTTP request. \n Proxy or Load Balancer routing configuration
                        generated from HTTPRoutes MUST prioritize rules based on the
                        following criteria, continuing on ties. Precedence must be
                        given to the the Rule with the largest number of: \n * Characters
                        in a matching non-wildcard hostname. * Characters in a matching
                        hostname. * Characters in a matching path. * Header matches.
                        * Query param matches. \n If ties still exist across multiple
                        Routes, matching precedence MUST be determined in order of
                        the following criteria, continuing on ties: \n * The oldest
                        Route based on creation timestamp. * The Route appearing first
                        in alphabetical order by   \"<namespace>/<name>\". \n If ties
                        still exist within the Route that has been given precedence,
                        matching precedence MUST be granted to the first matching
                        rule meeting the above criteria."
                      items:
                        description: "HTTPRouteMatch defines the predicate used to
                          match requests to a given action. Multiple match types are
                          ANDed together, i.e. the match will evaluate to true only
                          if all conditions are satisfied. \n For example, the match
                          below will match a HTTP request only if its path starts
                          with `/foo` AND it contains the `version: v1` header: \n
                          ``` match:   path:     value: \"/foo\"   headers:   - name:
                          \"version\"     value \"v1\" ```"
                        properties:
                          headers:
                            description: Headers specifies HTTP request header matchers.
                              Multiple match values are ANDed together, meaning, a
                              request must match all the specified headers to select
                              the route.
                            items:
                              description: HTTPHeaderMatch describes how to select
                                a HTTP route by matching HTTP request headers.
                              properties:
                                name:
                                  description: "Name is the name of the HTTP Header
                                    to be matched. Name matching MUST be case insensitive.
                                    (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                    \n If multiple entries specify equivalent header
                                    names, only the first entry with an equivalent
                                    name MUST be considered for a match. Subsequent
                                    entries with an equivalent header name MUST be
                                    ignored. Due to the case-insensitivity of header
                                    names, \"foo\" and \"Foo\" are considered equivalent.
                                    \n When a header is repeated in an HTTP request,
                                    it is implementation-specific behavior as to how
                                    this is represented. Generally, proxies should
                                    follow the guidance from the RFC: https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2
                                    regarding processing a repeated header, with special
                                    handling for \"Set-Cookie\"."
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: "Type specifies how to match against
                                    the value of the header. \n Support: Core (Exact)
                                    \n Support: Custom (RegularExpression) \n Since
                                    RegularExpression HeaderMatchType has custom conformance,
                                    implementations can support POSIX, PCRE or any
                                    other dialects of regular expressions. Please
                                    read the implementation's documentation to determine
                                    the supported dialect."
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP Header to
                                    be matched.
                                  maxLength: 4096
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          method:
                            description: "Method specifies HTTP method matcher. When
                              specified, this route will be matched only if the request
                              has the specified method. \n Support: Extended"
                            enum:
                            - GET
                            - HEAD
                            - POST
                            - PUT
                            - DELETE
                            - CONNECT
                            - OPTIONS
                            - TRACE
                            - PATCH
                            type: string
                          path:
                            default:
                              type: PathPrefix
                              value: /
                            description: Path specifies a HTTP request path matcher.
                              If this field is not specified, a default prefix match
                              on the "/" path is provided.
                            properties:
                              type:
                                default: PathPrefix
                                description: "Type specifies how to match against
                                  the path Value. \n Support: Core (Exact, PathPrefix)
                                  \n Support: Custom (RegularExpression)"
                                enum:
                                - Exact
                                - PathPrefix
                                - RegularExpression
                                type: string
                              value:
                                default: /
                                description: Value of the HTTP path to match against.
                                maxLength: 1024
                                type: string
                            type: object
                          queryParams:
                            description: QueryParams specifies HTTP query parameter
                              matchers. Multiple match values are ANDed together,
                              meaning, a request must match all the specified query
                              parameters to select the route.
                            items:
                              description: HTTPQueryParamMatch describes how to select
                                a HTTP route by matching HTTP query parameters.
                              properties:
                                name:
                                  description: Name is the name of the HTTP query
                                    param to be matched. This must be an exact string
                                    match. (See https://tools.ietf.org/html/rfc7230#section-2.7.3).
                                  maxLength: 256
                                  minLength: 1
                                  type: string
                                type:
                                  default: Exact
                                  description: "Type specifies how to match against
                                    the value of the query parameter. \n Support:
                                    Extended (Exact) \n Support: Custom (RegularExpression)
                                    \n Since RegularExpression QueryParamMatchType
                                    has custom conformance, implementations can support
                                    POSIX, PCRE or any other dialects of regular expressions.
                                    Please read the implementation's documentation
                                    to determine the supported dialect."
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP query param
                                    to be matched.
                                  maxLength: 1024
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                        type: object
                      maxItems: 8
                      type: array
                  type: object
                maxItems: 16
                type: array
            type: object
          status:
            description: Status defines the current state of HTTPRoute.
            properties:
              parents:
                description: "Parents is a list of parent resources (usually Gateways)
                  that are associated with the route, and the status of the route
                  with respect to each parent. When this route attaches to a parent,
                  the controller that manages the parent must add an entry to this
                  list when the controller first sees the route and should update
                  the entry as appropriate when the route or gateway is modified.
                  \n Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this
                  API can only populate Route status for the Gateways/parent resources
                  they are responsible for. \n A maximum of 32 Gateways will be represented
                  in this list. An empty list means the route has not been attached
                  to any Gateway."
                items:
                  description: RouteParentStatus describes the status of a route with
                    respect to an associated Parent.
                  properties:
                    conditions:
                      description: "Conditions describes the status of the route with
                        respect to the Gateway. Note that the route's availability
                        is also subject to the Gateway's own status conditions and
                        listener status. \n If the Route's ParentRef specifies an
                        existing Gateway that supports Routes of this kind AND that
                        Gateway's controller has sufficient access, then that Gateway's
                        controller MUST set the \"Accepted\" condition on the Route,
                        to indicate whether the route has been accepted or rejected
                        by the Gateway, and why. \n A Route MUST be considered \"Accepted\"
                        if at least one of the Route's rules is implemented by the
                        Gateway. \n There are a number of cases where the \"Accepted\"
                        condition may not be set due to lack of controller visibility,
                        that includes when: \n * The Route refers to a non-existent
                        parent. * The Route is of a type that the controller does
                        not support. * The Route is in a namespace the the controller
                        does not have access to."
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource. --- This struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example, type FooStatus struct{
                          \    // Represents the observations of a foo's current state.
                          \    // Known .status.conditions.type are: \"Available\",
                          \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                          \    // +patchStrategy=merge     // +listType=map     //
                          +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                          patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                          \n     // other fields }"
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime is the last time the condition
                              transitioned from one status to another. This should
                              be when the underlying condition changed.  If that is
                              not known, then using the time when the API field changed
                              is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: message is a human readable message indicating
                              details about the transition. This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation
                              that the condition was set based upon. For instance,
                              if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                              is 9, the condition is out of date with respect to the
                              current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. The value should
                              be a CamelCase string. This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              --- Many .condition.type values are consistent across
                              resources like Available, but because arbitrary conditions
                              can be useful (see .node.status.conditions), the ability
                              to deconflict is important. The regex it matches is
                              (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: "ControllerName is a domain/path string that indicates
                        the name of the controller that wrote this status. This corresponds
                        with the controllerName field on GatewayClass. \n Example:
                        \"example.net/gateway-controller\". \n The format of this
                        field is DOMAIN \"/\" PATH, where DOMAIN and PATH are valid
                        Kubernetes names (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names)."
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: ParentRef corresponds with a ParentRef in the spec
                        that this RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: "Group is the group of the referent. \n Support:
                            Core"
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: "Kind is kind of the referent. \n Support:
                            Core (Gateway) Support: Custom (Other Resources)"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: "Name is the name of the referent. \n Support:
                            Core"
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: "Namespace is the namespace of the referent.
                            When unspecified (or empty string), this refers to the
                            local namespace of the Route. \n Support: Core"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        sectionName:
                          description: "SectionName is the name of a section within
                            the target resource. In the following resources, SectionName
                            is interpreted as the following: \n * Gateway: Listener
                            Name \n Implementations MAY choose to support attaching
                            Routes to other resources. If that is the case, they MUST
                            clearly document how SectionName is interpreted. \n When
                            unspecified (empty string), this will reference the entire
                            resource. For the purpose of status, an attachment is
                            considered successful if at least one section in the parent
                            resource accepts it. For example, Gateway listeners can
                            restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept
                            attachment from the referencing Route, the Route MUST
                            be considered successfully attached. If no Gateway listeners
                            accept attachment from this Route, the Route MUST be considered
                            detached from the Gateway. \n Support: Core"
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/891
  creationTimestamp: null
  name: referencepolicies.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: ReferencePolicy
    listKind: ReferencePolicyList
    plural: referencepolicies
    shortNames:
    - refpol
    singular: referencepolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: "ReferencePolicy identifies kinds of resources in other namespaces
          that are trusted to reference the specified kinds of resources in the same
          namespace as the policy. \n Each ReferencePolicy can be used to represent
          a unique trust relationship. Additional Reference Policies can be used to
          add to the set of trusted sources of inbound references for the namespace
          they are defined within. \n All cross-namespace references in Gateway API
          (with the exception of cross-namespace Gateway-route attachment) require
          a ReferencePolicy. \n Support: Core"
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of ReferencePolicy.
            properties:
              from:
                description: "From describes the trusted namespaces and kinds that
                  can reference the resources described in \"To\". Each entry in this
                  list must be considered to be an additional place that references
                  can be valid from, or to put this another way, entries must be combined
                  using OR. \n Support: Core"
                items:
                  description: ReferencePolicyFrom describes trusted namespaces and
                    kinds.
                  properties:
                    group:
                      description: "Group is the group of the referent. When empty,
                        the Kubernetes core API group is inferred. \n Support: Core"
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: "Kind is the kind of the referent. Although implementations
                        may support additional resources, the following Route types
                        are part of the \"Core\" support level for this field: \n
                        * HTTPRoute * TCPRoute * TLSRoute * UDPRoute"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    namespace:
                      description: "Namespace is the namespace of the referent. \n
                        Support: Core"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                  required:
                  - group
                  - kind
                  - namespace
                  type: object
                maxItems: 16
                minItems: 1
                type: array
              to:
                description: "To describes the resources that may be referenced by
                  the resources described in \"From\". Each entry in this list must
                  be considered to be an additional place that references can be valid
                  to, or to put this another way, entries must be combined using OR.
                  \n Support: Core"
                items:
                  description: ReferencePolicyTo describes what Kinds are allowed
                    as targets of the references.
                  properties:
                    group:
                      description: "Group is the group of the referent. When empty,
                        the Kubernetes core API group is inferred. \n Support: Core"
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: "Kind is the kind of the referent. Although implementations
                        may support additional resources, the following types are
                        part of the \"Core\" support level for this field: \n * Service"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: Name is the name of the referent. When unspecified
                        or empty, this policy refers to all resources of the specified
                        Group and Kind in the local namespace.
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - group
                  - kind
                  type: object
                maxItems: 16
                minItems: 1
                type: array
            required:
            - from
            - to
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/891
  creationTimestamp: null
  name: tcproutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: TCPRoute
    listKind: TCPRouteList
    plural: tcproutes
    singular: tcproute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: TCPRoute provides a way to route TCP requests. When combined
          with a Gateway listener, it can be used to forward connections on the port
          specified by the listener to a set of backends specified by the TCPRoute.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of TCPRoute.
            properties:
              parentRefs:
                description: "ParentRefs references the resources (usually Gateways)
                  that a Route wants to be attached to. Note that the referenced parent
                  resource needs to allow this for the attachment to be complete.
                  For Gateways, that means the Gateway needs to allow attachment from
                  Routes of this kind and namespace. \n The only kind of parent resource
                  with \"Core\" support is Gateway. This API may be extended in the
                  future to support additional kinds of parent resources such as one
                  of the route kinds. \n It is invalid to reference an identical parent
                  more than once. It is valid to reference multiple distinct sections
                  within the same parent resource, such as 2 Listeners within a Gateway.
                  \n It is possible to separately reference multiple distinct objects
                  that may be collapsed by an implementation. For example, some implementations
                  may choose to merge compatible Gateway Listeners together. If that
                  is the case, the list of routes attached to those resources should
                  also be merged."
                items:
                  description: "ParentRef identifies an API object (usually a Gateway)
                    that can be considered a parent of this resource (usually a route).
                    The only kind of parent resource with \"Core\" support is Gateway.
                    This API may be extended in the future to support additional kinds
                    of parent resources, such as HTTPRoute. \n The API object must
                    be valid in the cluster; the Group and Kind must be registered
                    in the cluster for this reference to be valid. \n References to
                    objects with invalid Group and Kind are not valid, and must be
                    rejected by the implementation, with appropriate Conditions set
                    on the containing object."
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: "Group is the group of the referent. \n Support:
                        Core"
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: "Kind is kind of the referent. \n Support: Core
                        (Gateway) Support: Custom (Other Resources)"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: "Name is the name of the referent. \n Support:
                        Core"
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: "Namespace is the namespace of the referent. When
                        unspecified (or empty string), this refers to the local namespace
                        of the Route. \n Support: Core"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    sectionName:
                      description: "SectionName is the name of a section within the
                        target resource. In the following resources, SectionName is
                        interpreted as the following: \n * Gateway: Listener Name
                        \n Implementations MAY choose to support attaching Routes
                        to other resources. If that is the case, they MUST clearly
                        document how SectionName is interpreted. \n When unspecified
                        (empty string), this will reference the entire resource. For
                        the purpose of status, an attachment is considered successful
                        if at least one section in the parent resource accepts it.
                        For example, Gateway listeners can restrict which Routes can
                        attach to them by Route kind, namespace, or hostname. If 1
                        of 2 Gateway listeners accept attachment from the referencing
                        Route, the Route MUST be considered successfully attached.
                        If no Gateway listeners accept attachment from this Route,
                        the Route MUST be considered detached from the Gateway. \n
                        Support: Core"
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
              rules:
                description: Rules are a list of TCP matchers and actions.
                items:
                  description: TCPRouteRule is the configuration for a given rule.
                  properties:
                    backendRefs:
                      description: "BackendRefs defines the backend(s) where matching
                        requests should be sent. If unspecified or invalid (refers
                        to a non-existent resource or a Service with no endpoints),
                        the underlying implementation MUST actively reject connection
                        attempts to this backend. Connection rejections must respect
                        weight; if an invalid backend is requested to have 80% of
                        connections, then 80% of connections must be rejected instead.
                        \n Support: Core for Kubernetes Service Support: Custom for
                        any other resource \n Support for weight: Extended"
                      items:
                        description: "BackendRef defines how a Route should forward
                          a request to a Kubernetes resource. \n Note that when a
                          namespace is specified, a ReferencePolicy object is required
                          in the referent namespace to allow that namespace's owner
                          to accept the reference. See the ReferencePolicy documentation
                          for details."
                        properties:
                          group:
                            default: ""
                            description: Group is the group of the referent. For example,
                              "networking.k8s.io". When unspecified (empty string),
                              core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: Kind is kind of the referent. For example
                              "HTTPRoute" or "Service".
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: "Namespace is the namespace of the backend.
                              When unspecified, the local namespace is inferred. \n
                              Note that when a namespace is specified, a ReferencePolicy
                              object is required in the referent namespace to allow
                              that namespace's owner to accept the reference. See
                              the ReferencePolicy documentation for details. \n Support:
                              Core"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: Port specifies the destination port number
                              to use for this resource. Port is required when the
                              referent is a Kubernetes Service. For other resources,
                              destination port might be derived from the referent
                              resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: "Weight specifies the proportion of requests
                              forwarded to the referenced backend. This is computed
                              as weight/(sum of all weights in this BackendRefs list).
                              For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision
                              an implementation supports. Weight is not a percentage
                              and the sum of weights does not need to equal 100. \n
                              If only one backend is specified and it has a weight
                              greater than 0, 100% of the traffic is forwarded to
                              that backend. If weight is set to 0, no traffic should
                              be forwarded for this entry. If unspecified, weight
                              defaults to 1. \n Support for this field varies based
                              on the context where used."
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                      maxItems: 16
                      minItems: 1
                      type: array
                  type: object
                maxItems: 16
                minItems: 1
                type: array
            required:
            - rules
            type: object
          status:
            description: Status defines the current state of TCPRoute.
            properties:
              parents:
                description: "Parents is a list of parent resources (usually Gateways)
                  that are associated with the route, and the status of the route
                  with respect to each parent. When this route attaches to a parent,
                  the controller that manages the parent must add an entry to this
                  list when the controller first sees the route and should update
                  the entry as appropriate when the route or gateway is modified.
                  \n Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this
                  API can only populate Route status for the Gateways/parent resources
                  they are responsible for. \n A maximum of 32 Gateways will be represented
                  in this list. An empty list means the route has not been attached
                  to any Gateway."
                items:
                  description: RouteParentStatus describes the status of a route with
                    respect to an associated Parent.
                  properties:
                    conditions:
                      description: "Conditions describes the status of the route with
                        respect to the Gateway. Note that the route's availability
                        is also subject to the Gateway's own status conditions and
                        listener status. \n If the Route's ParentRef specifies an
                        existing Gateway that supports Routes of this kind AND that
                        Gateway's controller has sufficient access, then that Gateway's
                        controller MUST set the \"Accepted\" condition on the Route,
                        to indicate whether the route has been accepted or rejected
                        by the Gateway, and why. \n A Route MUST be considered \"Accepted\"
                        if at least one of the Route's rules is implemented by the
                        Gateway. \n There are a number of cases where the \"Accepted\"
                        condition may not be set due to lack of controller visibility,
                        that includes when: \n * The Route refers to a non-existent
                        parent. * The Route is of a type that the controller does
                        not support. * The Route is in a namespace the the controller
                        does not have access to."
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource. --- This struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example, type FooStatus struct{
                          \    // Represents the observations of a foo's current state.
                          \    // Known .status.conditions.type are: \"Available\",
                          \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                          \    // +patchStrategy=merge     // +listType=map     //
                          +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                          patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                          \n     // other fields }"
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime is the last time the condition
                              transitioned from one status to another. This should
                              be when the underlying condition changed.  If that is
                              not known, then using the time when the API field changed
                              is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: message is a human readable message indicating
                              details about the transition. This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation
                              that the condition was set based upon. For instance,
                              if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                              is 9, the condition is out of date with respect to the
                              current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. The value should
                              be a CamelCase string. This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              --- Many .condition.type values are consistent across
                              resources like Available, but because arbitrary conditions
                              can be useful (see .node.status.conditions), the ability
                              to deconflict is important. The regex it matches is
                              (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: "ControllerName is a domain/path string that indicates
                        the name of the controller that wrote this status. This corresponds
                        with the controllerName field on GatewayClass. \n Example:
                        \"example.net/gateway-controller\". \n The format of this
                        field is DOMAIN \"/\" PATH, where DOMAIN and PATH are valid
                        Kubernetes names (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names)."
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: ParentRef corresponds with a ParentRef in the spec
                        that this RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: "Group is the group of the referent. \n Support:
                            Core"
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: "Kind is kind of the referent. \n Support:
                            Core (Gateway) Support: Custom (Other Resources)"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: "Name is the name of the referent. \n Support:
                            Core"
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: "Namespace is the namespace of the referent.
                            When unspecified (or empty string), this refers to the
                            local namespace of the Route. \n Support: Core"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        sectionName:
                          description: "SectionName is the name of a section within
                            the target resource. In the following resources, SectionName
                            is interpreted as the following: \n * Gateway: Listener
                            Name \n Implementations MAY choose to support attaching
                            Routes to other resources. If that is the case, they MUST
                            clearly document how SectionName is interpreted. \n When
                            unspecified (empty string), this will reference the entire
                            resource. For the purpose of status, an attachment is
                            considered successful if at least one section in the parent
                            resource accepts it. For example, Gateway listeners can
                            restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept
                            attachment from the referencing Route, the Route MUST
                            be considered successfully attached. If no Gateway listeners
                            accept attachment from this Route, the Route MUST be considered
                            detached from the Gateway. \n Support: Core"
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/891
  creationTimestamp: null
  name: tlsroutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: TLSRoute
    listKind: TLSRouteList
    plural: tlsroutes
    singular: tlsroute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: "The TLSRoute resource is similar to TCPRoute, but can be configured
          to match against TLS-specific metadata. This allows more flexibility in
          matching streams for a given TLS listener. \n If you need to forward traffic
          to a single target for a TLS listener, you could choose to use a TCPRoute
          with a TLS listener."
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of TLSRoute.
            properties:
              hostnames:
                description: "Hostnames defines a set of SNI names that should match
                  against the SNI attribute of TLS ClientHello message in TLS handshake.
                  This matches the RFC 1123 definition of a hostname with 2 notable
                  exceptions: \n 1. IPs are not allowed in SNI names per RFC 6066.
                  2. A hostname may be prefixed with a wildcard label (`*.`). The
                  wildcard    label must appear by itself as the first label. \n If
                  a hostname is specified by both the Listener and TLSRoute, there
                  must be at least one intersecting hostname for the TLSRoute to be
                  attached to the Listener. For example: \n * A Listener with `test.example.com`
                  as the hostname matches TLSRoutes   that have either not specified
                  any hostnames, or have specified at   least one of `test.example.com`
                  or `*.example.com`. * A Listener with `*.example.com` as the hostname
                  matches TLSRoutes   that have either not specified any hostnames
                  or have specified at least   one hostname that matches the Listener
                  hostname. For example,   `test.example.com` and `*.example.com`
                  would both match. On the other   hand, `example.com` and `test.example.net`
                  would not match. \n If both the Listener and TLSRoute have specified
                  hostnames, any TLSRoute hostnames that do not match the Listener
                  hostname MUST be ignored. For example, if a Listener specified `*.example.com`,
                  and the TLSRoute specified `test.example.com` and `test.example.net`,
                  `test.example.net` must not be considered for a match. \n If both
                  the Listener and TLSRoute have specified hostnames, and none match
                  with the criteria above, then the TLSRoute is not accepted. The
                  implementation must raise an 'Accepted' Condition with a status
                  of `False` in the corresponding RouteParentStatus. \n Support: Core"
                items:
                  description: "Hostname is the fully qualified domain name of a network
                    host. This matches the RFC 1123 definition of a hostname with
                    2 notable exceptions: \n 1. IPs are not allowed. 2. A hostname
                    may be prefixed with a wildcard label (`*.`). The wildcard    label
                    must appear by itself as the first label. \n Hostname can be \"precise\"
                    which is a domain name without the terminating dot of a network
                    host (e.g. \"foo.example.com\") or \"wildcard\", which is a domain
                    name prefixed with a single wildcard label (e.g. `*.example.com`).
                    \n Note that as per RFC1035 and RFC1123, a *label* must consist
                    of lower case alphanumeric characters or '-', and must start and
                    end with an alphanumeric character. No other punctuation is allowed."
                  maxLength: 253
                  minLength: 1
                  pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                maxItems: 16
                type: array
              parentRefs:
                description: "ParentRefs references the resources (usually Gateways)
                  that a Route wants to be attached to. Note that the referenced parent
                  resource needs to allow this for the attachment to be complete.
                  For Gateways, that means the Gateway needs to allow attachment from
                  Routes of this kind and namespace. \n The only kind of parent resource
                  with \"Core\" support is Gateway. This API may be extended in the
                  future to support additional kinds of parent resources such as one
                  of the route kinds. \n It is invalid to reference an identical parent
                  more than once. It is valid to reference multiple distinct sections
                  within the same parent resource, such as 2 Listeners within a Gateway.
                  \n It is possible to separately reference multiple distinct objects
                  that may be collapsed by an implementation. For example, some implementations
                  may choose to merge compatible Gateway Listeners together. If that
                  is the case, the list of routes attached to those resources should
                  also be merged."
                items:
                  description: "ParentRef identifies an API object (usually a Gateway)
                    that can be considered a parent of this resource (usually a route).
                    The only kind of parent resource with \"Core\" support is Gateway.
                    This API may be extended in the future to support additional kinds
                    of parent resources, such as HTTPRoute. \n The API object must
                    be valid in the cluster; the Group and Kind must be registered
                    in the cluster for this reference to be valid. \n References to
                    objects with invalid Group and Kind are not valid, and must be
                    rejected by the implementation, with appropriate Conditions set
                    on the containing object."
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: "Group is the group of the referent. \n Support:
                        Core"
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: "Kind is kind of the referent. \n Support: Core
                        (Gateway) Support: Custom (Other Resources)"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: "Name is the name of the referent. \n Support:
                        Core"
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: "Namespace is the namespace of the referent. When
                        unspecified (or empty string), this refers to the local namespace
                        of the Route. \n Support: Core"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    sectionName:
                      description: "SectionName is the name of a section within the
                        target resource. In the following resources, SectionName is
                        interpreted as the following: \n * Gateway: Listener Name
                        \n Implementations MAY choose to support attaching Routes
                        to other resources. If that is the case, they MUST clearly
                        document how SectionName is interpreted. \n When unspecified
                        (empty string), this will reference the entire resource. For
                        the purpose of status, an attachment is considered successful
                        if at least one section in the parent resource accepts it.
                        For example, Gateway listeners can restrict which Routes can
                        attach to them by Route kind, namespace, or hostname. If 1
                        of 2 Gateway listeners accept attachment from the referencing
                        Route, the Route MUST be considered successfully attached.
                        If no Gateway listeners accept attachment from this Route,
                        the Route MUST be considered detached from the Gateway. \n
                        Support: Core"
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
              rules:
                description: Rules are a list of TLS matchers and actions.
                items:
                  description: TLSRouteRule is the configuration for a given rule.
                  properties:
                    backendRefs:
                      description: "BackendRefs defines the backend(s) where matching
                        requests should be sent. If unspecified or invalid (refers
                        to a non-existent resource or a Service with no endpoints),
                        the rule performs no forwarding; if no filters are specified
                        that would result in a response being sent, the underlying
                        implementation must actively reject request attempts to this
                        backend, by rejecting the connection or returning a 503 status
                        code. Request rejections must respect weight; if an invalid
                        backend is requested to have 80% of requests, then 80% of
                        requests must be rejected instead. \n Support: Core for Kubernetes
                        Service Support: Custom for any other resource \n Support
                        for weight: Extended"
                      items:
                        description: "BackendRef defines how a Route should forward
                          a request to a Kubernetes resource. \n Note that when a
                          namespace is specified, a ReferencePolicy object is required
                          in the referent namespace to allow that namespace's owner
                          to accept the reference. See the ReferencePolicy documentation
                          for details."
                        properties:
                          group:
                            default: ""
                            description: Group is the group of the referent. For example,
                              "networking.k8s.io". When unspecified (empty string),
                              core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: Kind is kind of the referent. For example
                              "HTTPRoute" or "Service".
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: "Namespace is the namespace of the backend.
                              When unspecified, the local namespace is inferred. \n
                              Note that when a namespace is specified, a ReferencePolicy
                              object is required in the referent namespace to allow
                              that namespace's owner to accept the reference. See
                              the ReferencePolicy documentation for details. \n Support:
                              Core"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: Port specifies the destination port number
                              to use for this resource. Port is required when the
                              referent is a Kubernetes Service. For other resources,
                              destination port might be derived from the referent
                              resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: "Weight specifies the proportion of requests
                              forwarded to the referenced backend. This is computed
                              as weight/(sum of all weights in this BackendRefs list).
                              For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision
                              an implementation supports. Weight is not a percentage
                              and the sum of weights does not need to equal 100. \n
                              If only one backend is specified and it has a weight
                              greater than 0, 100% of the traffic is forwarded to
                              that backend. If weight is set to 0, no traffic should
                              be forwarded for this entry. If unspecified, weight
                              defaults to 1. \n Support for this field varies based
                              on the context where used."
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                      maxItems: 16
                      minItems: 1
                      type: array
                  type: object
                maxItems: 16
                minItems: 1
                type: array
            required:
            - rules
            type: object
          status:
            description: Status defines the current state of TLSRoute.
            properties:
              parents:
                description: "Parents is a list of parent resources (usually Gateways)
                  that are associated with the route, and the status of the route
                  with respect to each parent. When this route attaches to a parent,
                  the controller that manages the parent must add an entry to this
                  list when the controller first sees the route and should update
                  the entry as appropriate when the route or gateway is modified.
                  \n Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this
                  API can only populate Route status for the Gateways/parent resources
                  they are responsible for. \n A maximum of 32 Gateways will be represented
                  in this list. An empty list means the route has not been attached
                  to any Gateway."
                items:
                  description: RouteParentStatus describes the status of a route with
                    respect to an associated Parent.
                  properties:
                    conditions:
                      description: "Conditions describes the status of the route with
                        respect to the Gateway. Note that the route's availability
                        is also subject to the Gateway's own status conditions and
                        listener status. \n If the Route's ParentRef specifies an
                        existing Gateway that supports Routes of this kind AND that
                        Gateway's controller has sufficient access, then that Gateway's
                        controller MUST set the \"Accepted\" condition on the Route,
                        to indicate whether the route has been accepted or rejected
                        by the Gateway, and why. \n A Route MUST be considered \"Accepted\"
                        if at least one of the Route's rules is implemented by the
                        Gateway. \n There are a number of cases where the \"Accepted\"
                        condition may not be set due to lack of controller visibility,
                        that includes when: \n * The Route refers to a non-existent
                        parent. * The Route is of a type that the controller does
                        not support. * The Route is in a namespace the the controller
                        does not have access to."
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource. --- This struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example, type FooStatus struct{
                          \    // Represents the observations of a foo's current state.
                          \    // Known .status.conditions.type are: \"Available\",
                          \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                          \    // +patchStrategy=merge     // +listType=map     //
                          +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                          patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                          \n     // other fields }"
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime is the last time the condition
                              transitioned from one status to another. This should
                              be when the underlying condition changed.  If that is
                              not known, then using the time when the API field changed
                              is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: message is a human readable message indicating
                              details about the transition. This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation
                              that the condition was set based upon. For instance,
                              if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                              is 9, the condition is out of date with respect to the
                              current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. The value should
                              be a CamelCase string. This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              --- Many .condition.type values are consistent across
                              resources like Available, but because arbitrary conditions
                              can be useful (see .node.status.conditions), the ability
                              to deconflict is important. The regex it matches is
                              (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: "ControllerName is a domain/path string that indicates
                        the name of the controller that wrote this status. This corresponds
                        with the controllerName field on GatewayClass. \n Example:
                        \"example.net/gateway-controller\". \n The format of this
                        field is DOMAIN \"/\" PATH, where DOMAIN and PATH are valid
                        Kubernetes names (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names)."
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: ParentRef corresponds with a ParentRef in the spec
                        that this RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: "Group is the group of the referent. \n Support:
                            Core"
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: "Kind is kind of the referent. \n Support:
                            Core (Gateway) Support: Custom (Other Resources)"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: "Name is the name of the referent. \n Support:
                            Core"
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: "Namespace is the namespace of the referent.
                            When unspecified (or empty string), this refers to the
                            local namespace of the Route. \n Support: Core"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        sectionName:
                          description: "SectionName is the name of a section within
                            the target resource. In the following resources, SectionName
                            is interpreted as the following: \n * Gateway: Listener
                            Name \n Implementations MAY choose to support attaching
                            Routes to other resources. If that is the case, they MUST
                            clearly document how SectionName is interpreted. \n When
                            unspecified (empty string), this will reference the entire
                            resource. For the purpose of status, an attachment is
                            considered successful if at least one section in the parent
                            resource accepts it. For example, Gateway listeners can
                            restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept
                            attachment from the referencing Route, the Route MUST
                            be considered successfully attached. If no Gateway listeners
                            accept attachment from this Route, the Route MUST be considered
                            detached from the Gateway. \n Support: Core"
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/891
  creationTimestamp: null
  name: udproutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: UDPRoute
    listKind: UDPRouteList
    plural: udproutes
    singular: udproute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: UDPRoute provides a way to route UDP traffic. When combined with
          a Gateway listener, it can be used to forward traffic on the port specified
          by the listener to a set of backends specified by the UDPRoute.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of UDPRoute.
            properties:
              parentRefs:
                description: "ParentRefs references the resources (usually Gateways)
                  that a Route wants to be attached to. Note that the referenced parent
                  resource needs to allow this for the attachment to be complete.
                  For Gateways, that means the Gateway needs to allow attachment from
                  Routes of this kind and namespace. \n The only kind of parent resource
                  with \"Core\" support is Gateway. This API may be extended in the
                  future to support additional kinds of parent resources such as one
                  of the route kinds. \n It is invalid to reference an identical parent
                  more than once. It is valid to reference multiple distinct sections
                  within the same parent resource, such as 2 Listeners within a Gateway.
                  \n It is possible to separately reference multiple distinct objects
                  that may be collapsed by an implementation. For example, some implementations
                  may choose to merge compatible Gateway Listeners together. If that
                  is the case, the list of routes attached to those resources should
                  also be merged."
                items:
                  description: "ParentRef identifies an API object (usually a Gateway)
                    that can be considered a parent of this resource (usually a route).
                    The only kind of parent resource with \"Core\" support is Gateway.
                    This API may be extended in the future to support additional kinds
                    of parent resources, such as HTTPRoute. \n The API object must
                    be valid in the cluster; the Group and Kind must be registered
                    in the cluster for this reference to be valid. \n References to
                    objects with invalid Group and Kind are not valid, and must be
                    rejected by the implementation, with appropriate Conditions set
                    on the containing object."
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: "Group is the group of the referent. \n Support:
                        Core"
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: "Kind is kind of the referent. \n Support: Core
                        (Gateway) Support: Custom (Other Resources)"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: "Name is the name of the referent. \n Support:
                        Core"
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: "Namespace is the namespace of the referent. When
                        unspecified (or empty string), this refers to the local namespace
                        of the Route. \n Support: Core"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    sectionName:
                      description: "SectionName is the name of a section within the
                        target resource. In the following resources, SectionName is
                        interpreted as the following: \n * Gateway: Listener Name
                        \n Implementations MAY choose to support attaching Routes
                        to other resources. If that is the case, they MUST clearly
                        document how SectionName is interpreted. \n When unspecified
                        (empty string), this will reference the entire resource. For
                        the purpose of status, an attachment is considered successful
                        if at least one section in the parent resource accepts it.
                        For example, Gateway listeners can restrict which Routes can
                        attach to them by Route kind, namespace, or hostname. If 1
                        of 2 Gateway listeners accept attachment from the referencing
                        Route, the Route MUST be considered successfully attached.
                        If no Gateway listeners accept attachment from this Route,
                        the Route MUST be considered detached from the Gateway. \n
                        Support: Core"
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
              rules:
                description: Rules are a list of UDP matchers and actions.
                items:
                  description: UDPRouteRule is the configuration for a given rule.
                  properties:
                    backendRefs:
                      description: "BackendRefs defines the backend(s) where matching
                        requests should be sent. If unspecified or invalid (refers
                        to a non-existent resource or a Service with no endpoints),
                        the underlying implementation MUST actively reject connection
                        attempts to this backend. Packet drops must respect weight;
                        if an invalid backend is requested to have 80% of the packets,
                        then 80% of packets must be dropped instead. \n Support: Core
                        for Kubernetes Service Support: Custom for any other resource
                        \n Support for weight: Extended"
                      items:
                        description: "BackendRef defines how a Route should forward
                          a request to a Kubernetes resource. \n Note that when a
                          namespace is specified, a ReferencePolicy object is required
                          in the referent namespace to allow that namespace's owner
                          to accept the reference. See the ReferencePolicy documentation
                          for details."
                        properties:
                          group:
                            default: ""
                            description: Group is the group of the referent. For example,
                              "networking.k8s.io". When unspecified (empty string),
                              core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: Kind is kind of the referent. For example
                              "HTTPRoute" or "Service".
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: "Namespace is the namespace of the backend.
                              When unspecified, the local namespace is inferred. \n
                              Note that when a namespace is specified, a ReferencePolicy
                              object is required in the referent namespace to allow
                              that namespace's owner to accept the reference. See
                              the ReferencePolicy documentation for details. \n Support:
                              Core"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: Port specifies the destination port number
                              to use for this resource. Port is required when the
                              referent is a Kubernetes Service. For other resources,
                              destination port might be derived from the referent
                              resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: "Weight specifies the proportion of requests
                              forwarded to the referenced backend. This is computed
                              as weight/(sum of all weights in this BackendRefs list).
                              For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision
                              an implementation supports. Weight is not a percentage
                              and the sum of weights does not need to equal 100. \n
                              If only one backend is specified and it has a weight
                              greater than 0, 100% of the traffic is forwarded to
                              that backend. If weight is set to 0, no traffic should
                              be forwarded for this entry. If unspecified, weight
                              defaults to 1. \n Support for this field varies based
                              on the context where used."
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                      maxItems: 16
                      minItems: 1
                      type: array
                  type: object
                maxItems: 16
                minItems: 1
                type: array
            required:
            - rules
            type: object
          status:
            description: Status defines the current state of UDPRoute.
            properties:
              parents:
                description: "Parents is a list of parent resources (usually Gateways)
                  that are associated with the route, and the status of the route
                  with respect to each parent. When this route attaches to a parent,
                  the controller that manages the parent must add an entry to this
                  list when the controller first sees the route and should update
                  the entry as appropriate when the route or gateway is modified.
                  \n Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this
                  API can only populate Route status for the Gateways/parent resources
                  they are responsible for. \n A maximum of 32 Gateways will be represented
                  in this list. An empty list means the route has not been attached
                  to any Gateway."
                items:
                  description: RouteParentStatus describes the status of a route with
                    respect to an associated Parent.
                  properties:
                    conditions:
                      description: "Conditions describes the status of the route with
                        respect to the Gateway. Note that the route's availability
                        is also subject to the Gateway's own status conditions and
                        listener status. \n If the Route's ParentRef specifies an
                        existing Gateway that supports Routes of this kind AND that
                        Gateway's controller has sufficient access, then that Gateway's
                        controller MUST set the \"Accepted\" condition on the Route,
                        to indicate whether the route has been accepted or rejected
                        by the Gateway, and why. \n A Route MUST be considered \"Accepted\"
                        if at least one of the Route's rules is implemented by the
                        Gateway. \n There are a number of cases where the \"Accepted\"
                        condition may not be set due to lack of controller visibility,
                        that includes when: \n * The Route refers to a non-existent
                        parent. * The Route is of a type that the controller does
                        not support. * The Route is in a namespace the the controller
                        does not have access to."
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource. --- This struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example, type FooStatus struct{
                          \    // Represents the observations of a foo's current state.
                          \    // Known .status.conditions.type are: \"Available\",
                          \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                          \    // +patchStrategy=merge     // +listType=map     //
                          +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                          patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                          \n     // other fields }"
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime is the last time the condition
                              transitioned from one status to another. This should
                              be when the underlying condition changed.  If that is
                              not known, then using the time when the API field changed
                              is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: message is a human readable message indicating
                              details about the transition. This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation
                              that the condition was set based upon. For instance,
                              if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                              is 9, the condition is out of date with respect to the
                              current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. The value should
                              be a CamelCase string. This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              --- Many .condition.type values are consistent across
                              resources like Available, but because arbitrary conditions
                              can be useful (see .node.status.conditions), the ability
                              to deconflict is important. The regex it matches is
                              (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: "ControllerName is a domain/path string that indicates
                        the name of the controller that wrote this status. This corresponds
                        with the controllerName field on GatewayClass. \n Example:
                        \"example.net/gateway-controller\". \n The format of this
                        field is DOMAIN \"/\" PATH, where DOMAIN and PATH are valid
                        Kubernetes names (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names)."
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: ParentRef corresponds with a ParentRef in the spec
                        that this RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: "Group is the group of the referent. \n Support:
                            Core"
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: "Kind is kind of the referent. \n Support:
                            Core (Gateway) Support: Custom (Other Resources)"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: "Name is the name of the referent. \n Support:
                            Core"
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: "Namespace is the namespace of the referent.
                            When unspecified (or empty string), this refers to the
                            local namespace of the Route. \n Support: Core"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        sectionName:
                          description: "SectionName is the name of a section within
                            the target resource. In the following resources, SectionName
                            is interpreted as the following: \n * Gateway: Listener
                            Name \n Implementations MAY choose to support attaching
                            Routes to other resources. If that is the case, they MUST
                            clearly document how SectionName is interpreted. \n When
                            unspecified (empty string), this will reference the entire
                            resource. For the purpose of status, an attachment is
                            considered successful if at least one section in the parent
                            resource accepts it. For example, Gateway listeners can
                            restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept
                            attachment from the referencing Route, the Route MUST
                            be considered successfully attached. If no Gateway listeners
                            accept attachment from this Route, the Route MUST be considered
                            detached from the Gateway. \n Support: Core"
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
