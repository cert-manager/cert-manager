genrule(
    name = "fetch_helm",
    srcs = select({
        ":darwin": ["@helm_darwin//:file"],
        ":k8": ["@helm_linux//:file"],
    }),
    outs = ["helm"],
    cmd = "cp $(SRCS) $@",
    visibility = ["//visibility:public"],
)

genrule(
    name = "fetch_buildozer",
    srcs = select({
        ":darwin": ["@buildozer_darwin//file"],
        ":k8": ["@buildozer_linux//file"],
    }),
    outs = ["buildozer"],
    cmd = "cp $(SRCS) $@",
    visibility = ["//visibility:public"],
)

genrule(
    name = "fetch_kazel",
    srcs = ["@io_kubernetes_build//kazel"],
    outs = ["kazel"],
    cmd = "cp $(SRCS) $@",
    visibility = ["//visibility:public"],
)

genrule(
    name = "fetch_dep",
    srcs = select({
        ":darwin": ["@dep_darwin//file"],
        ":k8": ["@dep_linux//file"],
    }),
    outs = ["dep"],
    cmd = "cp $(SRCS) $@",
    visibility = ["//visibility:public"],
)

genrule(
    name = "fetch_gazelle",
    srcs = ["@bazel_gazelle//cmd/gazelle"],
    outs = ["gazelle"],
    cmd = "cp $(SRCS) $@",
    visibility = ["//visibility:public"],
)

genrule(
    name = "fetch_goimports",
    srcs = ["@org_golang_x_tools//cmd/goimports"],
    outs = ["goimports"],
    cmd = "cp $(SRCS) $@",
    visibility = ["//visibility:public"],
)

# We include these rules here to make PATH mapping easier, and to provide a
# stable arch-independent target for generating swagger.json & apidocs.
genrule(
    name = "fetch_swagger-gen",
    srcs = ["//docs/generated/reference/swagger-gen"],
    outs = ["swagger-gen"],
    cmd = "cp $(SRCS) $@",
    visibility = ["//visibility:public"],
)

genrule(
    name = "fetch_gen-apidocs",
    srcs = ["@io_kubernetes_incubator_reference_docs//gen-apidocs"],
    outs = ["gen-apidocs"],
    cmd = "cp $(SRCS) $@",
    visibility = ["//visibility:public"],
)

config_setting(
    name = "k8",
    values = {"host_cpu": "k8"},
    visibility = ["//visibility:private"],
)

config_setting(
    name = "darwin",
    values = {"host_cpu": "darwin"},
    visibility = ["//visibility:private"],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
