package(default_visibility = ["//visibility:public"])

exports_files(["00-crds.yaml"])

load("@io_k8s_repo_infra//defs:pkg.bzl", "pkg_tar")
load("//build:helm.bzl", "helm_tmpl")
load("//build:licensing.bzl", "licensed_file")
load("//build:files.bzl", "modify_file")

RELEASE_NAME = "cert-manager"

RELEASE_NAMESPACE = "cert-manager"

VARIANTS = {
    "cert-manager": {
        "crd_variant": "regular",
        "values": {
            "installCRDs": "false",
        },
    },
    "cert-manager-legacy": {
        "crd_variant": "legacy",
        "values": {
            "installCRDs": "false",
        },
    },
}

[helm_tmpl(
    name = "%s.manifests" % name,
    helm_pkg = "//deploy/charts/cert-manager",
    release_name = RELEASE_NAME,
    release_namespace = RELEASE_NAMESPACE,
    values = meta["values"],
) for (name, meta) in VARIANTS.items()]

[licensed_file(
    name = "%s.crds.yaml" % name,
    src = "//deploy/crds:crds.%s" % meta["crd_variant"],
) for (name, meta) in VARIANTS.items()]

[genrule(
    name = "%s.unlicensed" % name,
    srcs = [
        "//deploy/crds:crds.%s" % meta["crd_variant"],
        "01-namespace.yaml",
        "%s.manifests" % name,
    ],
    outs = ["%s.unlicensed.yaml" % name],
    cmd = " ".join([
        "cat",
        "$(location //deploy/crds:crds.%s)" % meta["crd_variant"],
        "$(location 01-namespace.yaml)",
        "$(location %s.manifests)" % name,
        "> $@",
    ]),
) for (name, meta) in VARIANTS.items()]

[licensed_file(
    name = "%s.yaml" % name,
    src = "%s.unlicensed" % name,
) for (name, meta) in VARIANTS.items()]

pkg_tar(
    name = "manifests",
    srcs = [":%s.yaml" % name for name in VARIANTS.keys()] +
           [":%s.crds.yaml" % name for name in VARIANTS.keys()],
    extension = "tar.gz",
    mode = "0644",
    package_dir = "manifests",
    strip_prefix = ".",
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)

modify_file(
    name = "kustomize-base-regular",
    src = "//deploy:kustomize-base",
    out = "kustomize.yaml",
    prefix = "",
    suffix = "\n  - cert-manager.yaml",
    visibility = ["//visibility:public"],
)
