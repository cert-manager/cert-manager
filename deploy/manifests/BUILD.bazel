package(default_visibility = ["//visibility:public"])

exports_files(["00-crds.yaml"])

load("@io_k8s_repo_infra//defs:pkg.bzl", "pkg_tar")
load("//build:helm.bzl", "helm_tmpl")

RELEASE_NAME = "cert-manager"

RELEASE_NAMESPACE = "cert-manager"

VARIANTS = {
    "cert-manager": {},
    "cert-manager-no-webhook": {
        "webhook.enabled": "false",
    },
    "cert-manager-openshift": {
        "global.isOpenshift": "true",
    },
}

[helm_tmpl(
    name = "%s.manifests" % name,
    helm_pkg = "//deploy/charts/cert-manager:package",
    release_name = RELEASE_NAME,
    release_namespace = RELEASE_NAMESPACE,
    values = values,
) for (name, values) in VARIANTS.items()]

[helm_tmpl(
    name = "%s.crds" % name,
    helm_pkg = "//deploy/charts/cert-manager-crds:package",
    release_name = RELEASE_NAME,
    release_namespace = RELEASE_NAMESPACE,
    values = values,
) for (name, values) in VARIANTS.items()]

[genrule(
    name = name,
    srcs = [
        "%s.crds" % name,
        "01-namespace.yaml",
        "%s.manifests" % name,
    ],
    outs = ["%s.yaml" % name],
    cmd = "cat $(location %s.crds) $(location 01-namespace.yaml) $(location %s.manifests) > $@" % (name, name),
) for (name, values) in VARIANTS.items()]

pkg_tar(
    name = "manifests",
    srcs = [":%s.yaml" % name for name in VARIANTS.keys()],
    extension = "tar.gz",
    mode = "0644",
    package_dir = "manifests",
    strip_prefix = ".",
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
