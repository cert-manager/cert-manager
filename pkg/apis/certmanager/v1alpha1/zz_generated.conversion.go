// +build !ignore_autogenerated

/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by conversion-gen. Do not edit it manually!

package v1alpha1

import (
	certmanager "github.com/munnerz/cert-manager/pkg/apis/certmanager"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	unsafe "unsafe"
)

func init() {
	SchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(scheme *runtime.Scheme) error {
	return scheme.AddGeneratedConversionFuncs(
		Convert_v1alpha1_ACMECertData_To_certmanager_ACMECertData,
		Convert_certmanager_ACMECertData_To_v1alpha1_ACMECertData,
		Convert_v1alpha1_ACMECertDetails_To_certmanager_ACMECertDetails,
		Convert_certmanager_ACMECertDetails_To_v1alpha1_ACMECertDetails,
		Convert_v1alpha1_ACMEUserData_To_certmanager_ACMEUserData,
		Convert_certmanager_ACMEUserData_To_v1alpha1_ACMEUserData,
		Convert_v1alpha1_Certificate_To_certmanager_Certificate,
		Convert_certmanager_Certificate_To_v1alpha1_Certificate,
		Convert_v1alpha1_CertificateList_To_certmanager_CertificateList,
		Convert_certmanager_CertificateList_To_v1alpha1_CertificateList,
		Convert_v1alpha1_CertificateSpec_To_certmanager_CertificateSpec,
		Convert_certmanager_CertificateSpec_To_v1alpha1_CertificateSpec,
	)
}

func autoConvert_v1alpha1_ACMECertData_To_certmanager_ACMECertData(in *ACMECertData, out *certmanager.ACMECertData, s conversion.Scope) error {
	out.DomainName = in.DomainName
	out.Cert = *(*[]byte)(unsafe.Pointer(&in.Cert))
	out.PrivateKey = *(*[]byte)(unsafe.Pointer(&in.PrivateKey))
	return nil
}

// Convert_v1alpha1_ACMECertData_To_certmanager_ACMECertData is an autogenerated conversion function.
func Convert_v1alpha1_ACMECertData_To_certmanager_ACMECertData(in *ACMECertData, out *certmanager.ACMECertData, s conversion.Scope) error {
	return autoConvert_v1alpha1_ACMECertData_To_certmanager_ACMECertData(in, out, s)
}

func autoConvert_certmanager_ACMECertData_To_v1alpha1_ACMECertData(in *certmanager.ACMECertData, out *ACMECertData, s conversion.Scope) error {
	out.DomainName = in.DomainName
	if in.Cert == nil {
		out.Cert = make([]byte, 0)
	} else {
		out.Cert = *(*[]byte)(unsafe.Pointer(&in.Cert))
	}
	if in.PrivateKey == nil {
		out.PrivateKey = make([]byte, 0)
	} else {
		out.PrivateKey = *(*[]byte)(unsafe.Pointer(&in.PrivateKey))
	}
	return nil
}

// Convert_certmanager_ACMECertData_To_v1alpha1_ACMECertData is an autogenerated conversion function.
func Convert_certmanager_ACMECertData_To_v1alpha1_ACMECertData(in *certmanager.ACMECertData, out *ACMECertData, s conversion.Scope) error {
	return autoConvert_certmanager_ACMECertData_To_v1alpha1_ACMECertData(in, out, s)
}

func autoConvert_v1alpha1_ACMECertDetails_To_certmanager_ACMECertDetails(in *ACMECertDetails, out *certmanager.ACMECertDetails, s conversion.Scope) error {
	out.Domain = in.Domain
	out.CertURL = in.CertURL
	out.CertStableURL = in.CertStableURL
	out.AccountRef = in.AccountRef
	return nil
}

// Convert_v1alpha1_ACMECertDetails_To_certmanager_ACMECertDetails is an autogenerated conversion function.
func Convert_v1alpha1_ACMECertDetails_To_certmanager_ACMECertDetails(in *ACMECertDetails, out *certmanager.ACMECertDetails, s conversion.Scope) error {
	return autoConvert_v1alpha1_ACMECertDetails_To_certmanager_ACMECertDetails(in, out, s)
}

func autoConvert_certmanager_ACMECertDetails_To_v1alpha1_ACMECertDetails(in *certmanager.ACMECertDetails, out *ACMECertDetails, s conversion.Scope) error {
	out.Domain = in.Domain
	out.CertURL = in.CertURL
	out.CertStableURL = in.CertStableURL
	out.AccountRef = in.AccountRef
	return nil
}

// Convert_certmanager_ACMECertDetails_To_v1alpha1_ACMECertDetails is an autogenerated conversion function.
func Convert_certmanager_ACMECertDetails_To_v1alpha1_ACMECertDetails(in *certmanager.ACMECertDetails, out *ACMECertDetails, s conversion.Scope) error {
	return autoConvert_certmanager_ACMECertDetails_To_v1alpha1_ACMECertDetails(in, out, s)
}

func autoConvert_v1alpha1_ACMEUserData_To_certmanager_ACMEUserData(in *ACMEUserData, out *certmanager.ACMEUserData, s conversion.Scope) error {
	out.Email = in.Email
	out.Key = *(*[]byte)(unsafe.Pointer(&in.Key))
	return nil
}

// Convert_v1alpha1_ACMEUserData_To_certmanager_ACMEUserData is an autogenerated conversion function.
func Convert_v1alpha1_ACMEUserData_To_certmanager_ACMEUserData(in *ACMEUserData, out *certmanager.ACMEUserData, s conversion.Scope) error {
	return autoConvert_v1alpha1_ACMEUserData_To_certmanager_ACMEUserData(in, out, s)
}

func autoConvert_certmanager_ACMEUserData_To_v1alpha1_ACMEUserData(in *certmanager.ACMEUserData, out *ACMEUserData, s conversion.Scope) error {
	out.Email = in.Email
	if in.Key == nil {
		out.Key = make([]byte, 0)
	} else {
		out.Key = *(*[]byte)(unsafe.Pointer(&in.Key))
	}
	return nil
}

// Convert_certmanager_ACMEUserData_To_v1alpha1_ACMEUserData is an autogenerated conversion function.
func Convert_certmanager_ACMEUserData_To_v1alpha1_ACMEUserData(in *certmanager.ACMEUserData, out *ACMEUserData, s conversion.Scope) error {
	return autoConvert_certmanager_ACMEUserData_To_v1alpha1_ACMEUserData(in, out, s)
}

func autoConvert_v1alpha1_Certificate_To_certmanager_Certificate(in *Certificate, out *certmanager.Certificate, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_CertificateSpec_To_certmanager_CertificateSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Certificate_To_certmanager_Certificate is an autogenerated conversion function.
func Convert_v1alpha1_Certificate_To_certmanager_Certificate(in *Certificate, out *certmanager.Certificate, s conversion.Scope) error {
	return autoConvert_v1alpha1_Certificate_To_certmanager_Certificate(in, out, s)
}

func autoConvert_certmanager_Certificate_To_v1alpha1_Certificate(in *certmanager.Certificate, out *Certificate, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_certmanager_CertificateSpec_To_v1alpha1_CertificateSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_certmanager_Certificate_To_v1alpha1_Certificate is an autogenerated conversion function.
func Convert_certmanager_Certificate_To_v1alpha1_Certificate(in *certmanager.Certificate, out *Certificate, s conversion.Scope) error {
	return autoConvert_certmanager_Certificate_To_v1alpha1_Certificate(in, out, s)
}

func autoConvert_v1alpha1_CertificateList_To_certmanager_CertificateList(in *CertificateList, out *certmanager.CertificateList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]certmanager.Certificate)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha1_CertificateList_To_certmanager_CertificateList is an autogenerated conversion function.
func Convert_v1alpha1_CertificateList_To_certmanager_CertificateList(in *CertificateList, out *certmanager.CertificateList, s conversion.Scope) error {
	return autoConvert_v1alpha1_CertificateList_To_certmanager_CertificateList(in, out, s)
}

func autoConvert_certmanager_CertificateList_To_v1alpha1_CertificateList(in *certmanager.CertificateList, out *CertificateList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items == nil {
		out.Items = make([]Certificate, 0)
	} else {
		out.Items = *(*[]Certificate)(unsafe.Pointer(&in.Items))
	}
	return nil
}

// Convert_certmanager_CertificateList_To_v1alpha1_CertificateList is an autogenerated conversion function.
func Convert_certmanager_CertificateList_To_v1alpha1_CertificateList(in *certmanager.CertificateList, out *CertificateList, s conversion.Scope) error {
	return autoConvert_certmanager_CertificateList_To_v1alpha1_CertificateList(in, out, s)
}

func autoConvert_v1alpha1_CertificateSpec_To_certmanager_CertificateSpec(in *CertificateSpec, out *certmanager.CertificateSpec, s conversion.Scope) error {
	out.Domain = in.Domain
	out.Provider = in.Provider
	out.Email = in.Email
	out.SecretName = in.SecretName
	out.AltNames = *(*[]string)(unsafe.Pointer(&in.AltNames))
	return nil
}

// Convert_v1alpha1_CertificateSpec_To_certmanager_CertificateSpec is an autogenerated conversion function.
func Convert_v1alpha1_CertificateSpec_To_certmanager_CertificateSpec(in *CertificateSpec, out *certmanager.CertificateSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_CertificateSpec_To_certmanager_CertificateSpec(in, out, s)
}

func autoConvert_certmanager_CertificateSpec_To_v1alpha1_CertificateSpec(in *certmanager.CertificateSpec, out *CertificateSpec, s conversion.Scope) error {
	out.Domain = in.Domain
	out.Provider = in.Provider
	out.Email = in.Email
	out.SecretName = in.SecretName
	if in.AltNames == nil {
		out.AltNames = make([]string, 0)
	} else {
		out.AltNames = *(*[]string)(unsafe.Pointer(&in.AltNames))
	}
	return nil
}

// Convert_certmanager_CertificateSpec_To_v1alpha1_CertificateSpec is an autogenerated conversion function.
func Convert_certmanager_CertificateSpec_To_v1alpha1_CertificateSpec(in *certmanager.CertificateSpec, out *CertificateSpec, s conversion.Scope) error {
	return autoConvert_certmanager_CertificateSpec_To_v1alpha1_CertificateSpec(in, out, s)
}
