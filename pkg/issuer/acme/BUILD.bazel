load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "acme.go",
        "setup.go",
    ],
    importpath = "github.com/cert-manager/cert-manager/pkg/issuer/acme",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/acme:go_default_library",
        "//pkg/acme/accounts:go_default_library",
        "//pkg/acme/client:go_default_library",
        "//pkg/api/util:go_default_library",
        "//pkg/apis/certmanager/v1:go_default_library",
        "//pkg/apis/meta/v1:go_default_library",
        "//pkg/controller:go_default_library",
        "//pkg/issuer:go_default_library",
        "//pkg/logs:go_default_library",
        "//pkg/metrics:go_default_library",
        "//pkg/util/errors:go_default_library",
        "//pkg/util/kube:go_default_library",
        "//pkg/util/pki:go_default_library",
        "@io_k8s_api//core/v1:go_default_library",
        "@io_k8s_apimachinery//pkg/api/errors:go_default_library",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:go_default_library",
        "@io_k8s_client_go//kubernetes/typed/core/v1:go_default_library",
        "@io_k8s_client_go//listers/core/v1:go_default_library",
        "@io_k8s_client_go//tools/record:go_default_library",
        "@org_golang_x_crypto//acme:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//pkg/issuer/acme/dns:all-srcs",
        "//pkg/issuer/acme/http:all-srcs",
    ],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
