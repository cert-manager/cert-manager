load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "builder.go",
        "context.go",
        "controller.go",
        "helper.go",
        "register.go",
        "util.go",
    ],
    importpath = "github.com/cert-manager/cert-manager/pkg/controller",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/acme/accounts:go_default_library",
        "//pkg/apis/certmanager/v1:go_default_library",
        "//pkg/client/clientset/versioned:go_default_library",
        "//pkg/client/informers/externalversions:go_default_library",
        "//pkg/logs:go_default_library",
        "//pkg/metrics:go_default_library",
        "@com_github_go_logr_logr//:go_default_library",
        "@io_k8s_apimachinery//pkg/api/resource:go_default_library",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:go_default_library",
        "@io_k8s_apimachinery//pkg/runtime/schema:go_default_library",
        "@io_k8s_apimachinery//pkg/util/runtime:go_default_library",
        "@io_k8s_apimachinery//pkg/util/wait:go_default_library",
        "@io_k8s_client_go//informers:go_default_library",
        "@io_k8s_client_go//kubernetes:go_default_library",
        "@io_k8s_client_go//rest:go_default_library",
        "@io_k8s_client_go//tools/cache:go_default_library",
        "@io_k8s_client_go//tools/record:go_default_library",
        "@io_k8s_client_go//util/workqueue:go_default_library",
        "@io_k8s_utils//clock:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//pkg/controller/acmechallenges:all-srcs",
        "//pkg/controller/acmeorders:all-srcs",
        "//pkg/controller/cainjector:all-srcs",
        "//pkg/controller/certificaterequests:all-srcs",
        "//pkg/controller/certificates:all-srcs",
        "//pkg/controller/clusterissuers:all-srcs",
        "//pkg/controller/ingress-shim:all-srcs",
        "//pkg/controller/issuers:all-srcs",
        "//pkg/controller/test:all-srcs",
    ],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
