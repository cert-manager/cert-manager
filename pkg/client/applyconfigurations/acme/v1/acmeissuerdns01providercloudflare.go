/*
Copyright The cert-manager Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/cert-manager/cert-manager/pkg/apis/meta/v1"
)

// ACMEIssuerDNS01ProviderCloudflareApplyConfiguration represents an declarative configuration of the ACMEIssuerDNS01ProviderCloudflare type for use
// with apply.
type ACMEIssuerDNS01ProviderCloudflareApplyConfiguration struct {
	Email    *string               `json:"email,omitempty"`
	APIKey   *v1.SecretKeySelector `json:"apiKeySecretRef,omitempty"`
	APIToken *v1.SecretKeySelector `json:"apiTokenSecretRef,omitempty"`
}

// ACMEIssuerDNS01ProviderCloudflareApplyConfiguration constructs an declarative configuration of the ACMEIssuerDNS01ProviderCloudflare type for use with
// apply.
func ACMEIssuerDNS01ProviderCloudflare() *ACMEIssuerDNS01ProviderCloudflareApplyConfiguration {
	return &ACMEIssuerDNS01ProviderCloudflareApplyConfiguration{}
}

// WithEmail sets the Email field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Email field is set to the value of the last call.
func (b *ACMEIssuerDNS01ProviderCloudflareApplyConfiguration) WithEmail(value string) *ACMEIssuerDNS01ProviderCloudflareApplyConfiguration {
	b.Email = &value
	return b
}

// WithAPIKey sets the APIKey field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the APIKey field is set to the value of the last call.
func (b *ACMEIssuerDNS01ProviderCloudflareApplyConfiguration) WithAPIKey(value v1.SecretKeySelector) *ACMEIssuerDNS01ProviderCloudflareApplyConfiguration {
	b.APIKey = &value
	return b
}

// WithAPIToken sets the APIToken field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the APIToken field is set to the value of the last call.
func (b *ACMEIssuerDNS01ProviderCloudflareApplyConfiguration) WithAPIToken(value v1.SecretKeySelector) *ACMEIssuerDNS01ProviderCloudflareApplyConfiguration {
	b.APIToken = &value
	return b
}
