load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "doc.go",
        "fake_certificate.go",
        "fake_certificaterequest.go",
        "fake_certmanager_client.go",
        "fake_clusterissuer.go",
        "fake_issuer.go",
    ],
    importpath = "github.com/cert-manager/cert-manager/pkg/client/clientset/versioned/typed/certmanager/v1/fake",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/apis/certmanager/v1:go_default_library",
        "//pkg/client/clientset/versioned/typed/certmanager/v1:go_default_library",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:go_default_library",
        "@io_k8s_apimachinery//pkg/labels:go_default_library",
        "@io_k8s_apimachinery//pkg/runtime/schema:go_default_library",
        "@io_k8s_apimachinery//pkg/types:go_default_library",
        "@io_k8s_apimachinery//pkg/watch:go_default_library",
        "@io_k8s_client_go//rest:go_default_library",
        "@io_k8s_client_go//testing:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
