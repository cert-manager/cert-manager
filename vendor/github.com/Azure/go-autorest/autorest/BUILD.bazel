load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "authorization.go",
        "autorest.go",
        "client.go",
        "error.go",
        "preparer.go",
        "responder.go",
        "retriablerequest.go",
        "retriablerequest_1.7.go",
        "retriablerequest_1.8.go",
        "sender.go",
        "utility.go",
        "version.go",
    ],
    importmap = "github.com/jetstack/cert-manager/vendor/github.com/Azure/go-autorest/autorest",
    importpath = "github.com/Azure/go-autorest/autorest",
    tags = ["manual"],
    visibility = ["//visibility:public"],
    deps = ["//vendor/github.com/Azure/go-autorest/autorest/adal:go_default_library"],
)

go_test(
    name = "go_default_test",
    srcs = [
        "authorization_test.go",
        "autorest_test.go",
        "client_test.go",
        "error_test.go",
        "preparer_test.go",
        "responder_test.go",
        "sender_test.go",
        "utility_test.go",
    ],
    embed = [":go_default_library"],
    tags = ["manual"],
    deps = [
        "//vendor/github.com/Azure/go-autorest/autorest/adal:go_default_library",
        "//vendor/github.com/Azure/go-autorest/autorest/mocks:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//vendor/github.com/Azure/go-autorest/autorest/adal:all-srcs",
        "//vendor/github.com/Azure/go-autorest/autorest/azure:all-srcs",
        "//vendor/github.com/Azure/go-autorest/autorest/date:all-srcs",
        "//vendor/github.com/Azure/go-autorest/autorest/to:all-srcs",
    ],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
