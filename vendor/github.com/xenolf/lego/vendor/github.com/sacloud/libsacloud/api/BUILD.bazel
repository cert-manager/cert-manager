load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "archive.go",
        "archive_gen.go",
        "auth_status.go",
        "auto_backup.go",
        "auto_backup_gen.go",
        "base_api.go",
        "bill.go",
        "bridge.go",
        "bridge_gen.go",
        "cdrom.go",
        "cdrom_gen.go",
        "client.go",
        "database.go",
        "database_gen.go",
        "disk.go",
        "disk_gen.go",
        "dns.go",
        "dns_gen.go",
        "doc.go",
        "error.go",
        "gslb.go",
        "gslb_gen.go",
        "icon.go",
        "icon_gen.go",
        "interface.go",
        "interface_gen.go",
        "internet.go",
        "internet_gen.go",
        "ipaddress.go",
        "ipaddress_gen.go",
        "ipv6addr.go",
        "ipv6addr_gen.go",
        "ipv6net.go",
        "ipv6net_gen.go",
        "license.go",
        "license_gen.go",
        "load_balancer.go",
        "load_balancer_gen.go",
        "mobile_gateway.go",
        "mobile_gateway_gen.go",
        "newsfeed.go",
        "nfs.go",
        "nfs_gen.go",
        "note.go",
        "note_gen.go",
        "packet_filter.go",
        "packet_filter_gen.go",
        "polling.go",
        "private_host.go",
        "private_host_gen.go",
        "product_disk.go",
        "product_disk_gen.go",
        "product_internet.go",
        "product_internet_gen.go",
        "product_license.go",
        "product_license_gen.go",
        "product_private_host.go",
        "product_private_host_gen.go",
        "product_server.go",
        "product_server_gen.go",
        "public_price.go",
        "public_price_gen.go",
        "region.go",
        "region_gen.go",
        "server.go",
        "server_gen.go",
        "sim.go",
        "sim_gen.go",
        "simple_monitor.go",
        "simple_monitor_gen.go",
        "ssh_key.go",
        "ssh_key_gen.go",
        "subnet.go",
        "subnet_gen.go",
        "switch.go",
        "switch_gen.go",
        "vpc_router.go",
        "vpc_router_gen.go",
        "webaccel.go",
        "webaccel_search.go",
        "zone.go",
        "zone_gen.go",
    ],
    importmap = "github.com/xenolf/lego/vendor/github.com/sacloud/libsacloud/api",
    importpath = "github.com/sacloud/libsacloud/api",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/xenolf/lego/vendor/github.com/sacloud/libsacloud:go_default_library",
        "//vendor/github.com/xenolf/lego/vendor/github.com/sacloud/libsacloud/sacloud:go_default_library",
        "//vendor/github.com/xenolf/lego/vendor/github.com/sacloud/libsacloud/sacloud/ostype:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
