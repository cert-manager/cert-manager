load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "challenges.go",
        "client.go",
        "crypto.go",
        "dns_challenge.go",
        "dns_challenge_manual.go",
        "error.go",
        "http.go",
        "http_challenge.go",
        "http_challenge_server.go",
        "jws.go",
        "messages.go",
        "provider.go",
        "tls_alpn_challenge.go",
        "tls_alpn_challenge_server.go",
        "utils.go",
    ],
    importmap = "github.com/jetstack/cert-manager/vendor/github.com/xenolf/lego/acme",
    importpath = "github.com/xenolf/lego/acme",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/xenolf/lego/log:go_default_library",
        "//vendor/github.com/xenolf/lego/vendor/github.com/miekg/dns:go_default_library",
        "//vendor/github.com/xenolf/lego/vendor/golang.org/x/crypto/ocsp:go_default_library",
        "//vendor/github.com/xenolf/lego/vendor/gopkg.in/square/go-jose.v2:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "client_test.go",
        "crypto_test.go",
        "dns_challenge_test.go",
        "http_challenge_test.go",
        "http_test.go",
        "tls_alpn_challenge_test.go",
        "utils_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":go_default_library"],
    deps = [
        "//vendor/github.com/xenolf/lego/vendor/github.com/stretchr/testify/assert:go_default_library",
        "//vendor/github.com/xenolf/lego/vendor/github.com/stretchr/testify/require:go_default_library",
        "//vendor/github.com/xenolf/lego/vendor/gopkg.in/square/go-jose.v2:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
