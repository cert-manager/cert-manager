// Code generated by protoc-gen-go. DO NOT EDIT.
// source: acme-dns01.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PresentRequest struct {
	Fqdn                 string   `protobuf:"bytes,1,opt,name=fqdn" json:"fqdn,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Ttl                  uint32   `protobuf:"varint,3,opt,name=ttl" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PresentRequest) Reset()         { *m = PresentRequest{} }
func (m *PresentRequest) String() string { return proto.CompactTextString(m) }
func (*PresentRequest) ProtoMessage()    {}
func (*PresentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_acme_dns01_5c50d1c8c6782849, []int{0}
}
func (m *PresentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PresentRequest.Unmarshal(m, b)
}
func (m *PresentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PresentRequest.Marshal(b, m, deterministic)
}
func (dst *PresentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PresentRequest.Merge(dst, src)
}
func (m *PresentRequest) XXX_Size() int {
	return xxx_messageInfo_PresentRequest.Size(m)
}
func (m *PresentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PresentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PresentRequest proto.InternalMessageInfo

func (m *PresentRequest) GetFqdn() string {
	if m != nil {
		return m.Fqdn
	}
	return ""
}

func (m *PresentRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *PresentRequest) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

type CleanUpRequest struct {
	Fqdn                 string   `protobuf:"bytes,1,opt,name=fqdn" json:"fqdn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CleanUpRequest) Reset()         { *m = CleanUpRequest{} }
func (m *CleanUpRequest) String() string { return proto.CompactTextString(m) }
func (*CleanUpRequest) ProtoMessage()    {}
func (*CleanUpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_acme_dns01_5c50d1c8c6782849, []int{1}
}
func (m *CleanUpRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanUpRequest.Unmarshal(m, b)
}
func (m *CleanUpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanUpRequest.Marshal(b, m, deterministic)
}
func (dst *CleanUpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanUpRequest.Merge(dst, src)
}
func (m *CleanUpRequest) XXX_Size() int {
	return xxx_messageInfo_CleanUpRequest.Size(m)
}
func (m *CleanUpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanUpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CleanUpRequest proto.InternalMessageInfo

func (m *CleanUpRequest) GetFqdn() string {
	if m != nil {
		return m.Fqdn
	}
	return ""
}

type PresentResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PresentResponse) Reset()         { *m = PresentResponse{} }
func (m *PresentResponse) String() string { return proto.CompactTextString(m) }
func (*PresentResponse) ProtoMessage()    {}
func (*PresentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_acme_dns01_5c50d1c8c6782849, []int{2}
}
func (m *PresentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PresentResponse.Unmarshal(m, b)
}
func (m *PresentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PresentResponse.Marshal(b, m, deterministic)
}
func (dst *PresentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PresentResponse.Merge(dst, src)
}
func (m *PresentResponse) XXX_Size() int {
	return xxx_messageInfo_PresentResponse.Size(m)
}
func (m *PresentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PresentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PresentResponse proto.InternalMessageInfo

type CleanUpResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CleanUpResponse) Reset()         { *m = CleanUpResponse{} }
func (m *CleanUpResponse) String() string { return proto.CompactTextString(m) }
func (*CleanUpResponse) ProtoMessage()    {}
func (*CleanUpResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_acme_dns01_5c50d1c8c6782849, []int{3}
}
func (m *CleanUpResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanUpResponse.Unmarshal(m, b)
}
func (m *CleanUpResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanUpResponse.Marshal(b, m, deterministic)
}
func (dst *CleanUpResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanUpResponse.Merge(dst, src)
}
func (m *CleanUpResponse) XXX_Size() int {
	return xxx_messageInfo_CleanUpResponse.Size(m)
}
func (m *CleanUpResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanUpResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CleanUpResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*PresentRequest)(nil), "proto.PresentRequest")
	proto.RegisterType((*CleanUpRequest)(nil), "proto.CleanUpRequest")
	proto.RegisterType((*PresentResponse)(nil), "proto.PresentResponse")
	proto.RegisterType((*CleanUpResponse)(nil), "proto.CleanUpResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AcmeDnsSolverService service

type AcmeDnsSolverServiceClient interface {
	Present(ctx context.Context, in *PresentRequest, opts ...grpc.CallOption) (*PresentResponse, error)
	CleanUp(ctx context.Context, in *CleanUpRequest, opts ...grpc.CallOption) (*CleanUpResponse, error)
}

type acmeDnsSolverServiceClient struct {
	cc *grpc.ClientConn
}

func NewAcmeDnsSolverServiceClient(cc *grpc.ClientConn) AcmeDnsSolverServiceClient {
	return &acmeDnsSolverServiceClient{cc}
}

func (c *acmeDnsSolverServiceClient) Present(ctx context.Context, in *PresentRequest, opts ...grpc.CallOption) (*PresentResponse, error) {
	out := new(PresentResponse)
	err := grpc.Invoke(ctx, "/proto.AcmeDnsSolverService/Present", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *acmeDnsSolverServiceClient) CleanUp(ctx context.Context, in *CleanUpRequest, opts ...grpc.CallOption) (*CleanUpResponse, error) {
	out := new(CleanUpResponse)
	err := grpc.Invoke(ctx, "/proto.AcmeDnsSolverService/CleanUp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AcmeDnsSolverService service

type AcmeDnsSolverServiceServer interface {
	Present(context.Context, *PresentRequest) (*PresentResponse, error)
	CleanUp(context.Context, *CleanUpRequest) (*CleanUpResponse, error)
}

func RegisterAcmeDnsSolverServiceServer(s *grpc.Server, srv AcmeDnsSolverServiceServer) {
	s.RegisterService(&_AcmeDnsSolverService_serviceDesc, srv)
}

func _AcmeDnsSolverService_Present_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PresentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AcmeDnsSolverServiceServer).Present(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AcmeDnsSolverService/Present",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AcmeDnsSolverServiceServer).Present(ctx, req.(*PresentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AcmeDnsSolverService_CleanUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CleanUpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AcmeDnsSolverServiceServer).CleanUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AcmeDnsSolverService/CleanUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AcmeDnsSolverServiceServer).CleanUp(ctx, req.(*CleanUpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AcmeDnsSolverService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.AcmeDnsSolverService",
	HandlerType: (*AcmeDnsSolverServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Present",
			Handler:    _AcmeDnsSolverService_Present_Handler,
		},
		{
			MethodName: "CleanUp",
			Handler:    _AcmeDnsSolverService_CleanUp_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "acme-dns01.proto",
}

func init() { proto.RegisterFile("acme-dns01.proto", fileDescriptor_acme_dns01_5c50d1c8c6782849) }

var fileDescriptor_acme_dns01_5c50d1c8c6782849 = []byte{
	// 208 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x48, 0x4c, 0xce, 0x4d,
	0xd5, 0x4d, 0xc9, 0x2b, 0x36, 0x30, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53,
	0x4a, 0x3e, 0x5c, 0x7c, 0x01, 0x45, 0xa9, 0xc5, 0xa9, 0x79, 0x25, 0x41, 0xa9, 0x85, 0xa5, 0xa9,
	0xc5, 0x25, 0x42, 0x42, 0x5c, 0x2c, 0x69, 0x85, 0x29, 0x79, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c,
	0x41, 0x60, 0xb6, 0x90, 0x08, 0x17, 0x6b, 0x59, 0x62, 0x4e, 0x69, 0xaa, 0x04, 0x13, 0x58, 0x10,
	0xc2, 0x11, 0x12, 0xe0, 0x62, 0x2e, 0x29, 0xc9, 0x91, 0x60, 0x56, 0x60, 0xd4, 0xe0, 0x0d, 0x02,
	0x31, 0x95, 0x54, 0xb8, 0xf8, 0x9c, 0x73, 0x52, 0x13, 0xf3, 0x42, 0x0b, 0xf0, 0x98, 0xa6, 0x24,
	0xc8, 0xc5, 0x0f, 0xb7, 0xb3, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x15, 0x24, 0x04, 0xd7, 0x08, 0x11,
	0x32, 0xea, 0x63, 0xe4, 0x12, 0x71, 0x4c, 0xce, 0x4d, 0x75, 0xc9, 0x2b, 0x0e, 0xce, 0xcf, 0x29,
	0x4b, 0x2d, 0x0a, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x15, 0xb2, 0xe2, 0x62, 0x87, 0x6a, 0x17,
	0x12, 0x85, 0x78, 0x46, 0x0f, 0xd5, 0x0b, 0x52, 0x62, 0xe8, 0xc2, 0x50, 0x5b, 0x18, 0x40, 0x7a,
	0xa1, 0xf6, 0xc0, 0xf5, 0xa2, 0x3a, 0x18, 0xae, 0x17, 0xcd, 0x39, 0x4a, 0x0c, 0x49, 0x6c, 0x60,
	0x09, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd6, 0xb7, 0xc7, 0x1d, 0x4c, 0x01, 0x00, 0x00,
}
