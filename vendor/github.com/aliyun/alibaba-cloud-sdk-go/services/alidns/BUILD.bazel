load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "add_batch_domain_records.go",
        "add_domain.go",
        "add_domain_group.go",
        "add_domain_record.go",
        "apply_for_retrieval_domain_name.go",
        "change_domain_group.go",
        "change_domain_of_dns_product.go",
        "check_domain_record.go",
        "client.go",
        "delete_batch_domain_records.go",
        "delete_batch_domains.go",
        "delete_domain.go",
        "delete_domain_group.go",
        "delete_domain_record.go",
        "delete_sub_domain_records.go",
        "describe_batch_result.go",
        "describe_dns_product_instance.go",
        "describe_dns_product_instances.go",
        "describe_dnsslb_sub_domains.go",
        "describe_domain_groups.go",
        "describe_domain_info.go",
        "describe_domain_logs.go",
        "describe_domain_ns.go",
        "describe_domain_record_info.go",
        "describe_domain_records.go",
        "describe_domain_whois_info.go",
        "describe_domains.go",
        "describe_record_logs.go",
        "describe_sub_domain_records.go",
        "describe_support_lines.go",
        "get_main_domain_name.go",
        "modify_hichina_domain_dns.go",
        "retrieval_domain_name.go",
        "set_dnsslb_status.go",
        "set_domain_record_status.go",
        "struct_available_ttls.go",
        "struct_dns_product.go",
        "struct_dns_products.go",
        "struct_dns_servers_in_add_domain.go",
        "struct_dns_servers_in_describe_dns_product_instance.go",
        "struct_dns_servers_in_describe_domain_info.go",
        "struct_dns_servers_in_describe_domain_ns.go",
        "struct_dns_servers_in_describe_domain_whois_info.go",
        "struct_dns_servers_in_describe_domains.go",
        "struct_domain.go",
        "struct_domain_group.go",
        "struct_domain_groups.go",
        "struct_domain_log.go",
        "struct_domain_logs.go",
        "struct_domain_records_in_describe_domain_records.go",
        "struct_domain_records_in_describe_sub_domain_records.go",
        "struct_domains.go",
        "struct_expect_dns_servers.go",
        "struct_fail_result.go",
        "struct_fail_results.go",
        "struct_new_dns_servers.go",
        "struct_original_dns_servers.go",
        "struct_record.go",
        "struct_record_line.go",
        "struct_record_lines_in_describe_domain_info.go",
        "struct_record_lines_in_describe_support_lines.go",
        "struct_record_log.go",
        "struct_record_logs.go",
        "struct_slb_sub_domain.go",
        "struct_slb_sub_domains.go",
        "struct_status_list.go",
        "update_batch_domain_records.go",
        "update_dnsslb_weight.go",
        "update_domain_group.go",
        "update_domain_record.go",
    ],
    importmap = "github.com/jetstack/cert-manager/vendor/github.com/aliyun/alibaba-cloud-sdk-go/services/alidns",
    importpath = "github.com/aliyun/alibaba-cloud-sdk-go/services/alidns",
    tags = ["manual"],
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/aliyun/alibaba-cloud-sdk-go/sdk:go_default_library",
        "//vendor/github.com/aliyun/alibaba-cloud-sdk-go/sdk/auth:go_default_library",
        "//vendor/github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests:go_default_library",
        "//vendor/github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
