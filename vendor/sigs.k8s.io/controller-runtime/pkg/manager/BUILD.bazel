load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "doc.go",
        "internal.go",
        "manager.go",
        "testutil.go",
    ],
    importmap = "github.com/jetstack/cert-manager/vendor/sigs.k8s.io/controller-runtime/pkg/manager",
    importpath = "sigs.k8s.io/controller-runtime/pkg/manager",
    tags = ["manual"],
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/go-logr/logr:go_default_library",
        "//vendor/github.com/prometheus/client_golang/prometheus/promhttp:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/api/meta:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/runtime:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/scheme:go_default_library",
        "//vendor/k8s.io/client-go/rest:go_default_library",
        "//vendor/k8s.io/client-go/tools/leaderelection:go_default_library",
        "//vendor/k8s.io/client-go/tools/leaderelection/resourcelock:go_default_library",
        "//vendor/k8s.io/client-go/tools/record:go_default_library",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/cache:go_default_library",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/client:go_default_library",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/client/apiutil:go_default_library",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/internal/log:go_default_library",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/internal/recorder:go_default_library",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/leaderelection:go_default_library",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/metrics:go_default_library",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/recorder:go_default_library",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/runtime/inject:go_default_library",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/webhook:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/manager/signals:all-srcs",
    ],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
