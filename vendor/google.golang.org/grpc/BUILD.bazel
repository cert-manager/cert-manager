load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "backoff.go",
        "balancer.go",
        "balancer_conn_wrappers.go",
        "balancer_v1_wrapper.go",
        "call.go",
        "clientconn.go",
        "codec.go",
        "doc.go",
        "grpclb.go",
        "interceptor.go",
        "picker_wrapper.go",
        "pickfirst.go",
        "proxy.go",
        "resolver_conn_wrapper.go",
        "rpc_util.go",
        "server.go",
        "stream.go",
        "trace.go",
    ],
    importmap = "github.com/jetstack/cert-manager/vendor/google.golang.org/grpc",
    importpath = "google.golang.org/grpc",
    tags = ["manual"],
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/golang/protobuf/proto:go_default_library",
        "//vendor/golang.org/x/net/context:go_default_library",
        "//vendor/golang.org/x/net/http2:go_default_library",
        "//vendor/golang.org/x/net/trace:go_default_library",
        "//vendor/google.golang.org/grpc/balancer:go_default_library",
        "//vendor/google.golang.org/grpc/codes:go_default_library",
        "//vendor/google.golang.org/grpc/connectivity:go_default_library",
        "//vendor/google.golang.org/grpc/credentials:go_default_library",
        "//vendor/google.golang.org/grpc/grpclb/grpc_lb_v1/messages:go_default_library",
        "//vendor/google.golang.org/grpc/grpclog:go_default_library",
        "//vendor/google.golang.org/grpc/internal:go_default_library",
        "//vendor/google.golang.org/grpc/keepalive:go_default_library",
        "//vendor/google.golang.org/grpc/metadata:go_default_library",
        "//vendor/google.golang.org/grpc/naming:go_default_library",
        "//vendor/google.golang.org/grpc/peer:go_default_library",
        "//vendor/google.golang.org/grpc/resolver:go_default_library",
        "//vendor/google.golang.org/grpc/stats:go_default_library",
        "//vendor/google.golang.org/grpc/status:go_default_library",
        "//vendor/google.golang.org/grpc/tap:go_default_library",
        "//vendor/google.golang.org/grpc/transport:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "backoff_test.go",
        "balancer_test.go",
        "call_test.go",
        "clientconn_test.go",
        "codec_benchmark_test.go",
        "codec_test.go",
        "picker_wrapper_test.go",
        "pickfirst_test.go",
        "proxy_test.go",
        "resolver_conn_wrapper_test.go",
        "rpc_util_test.go",
        "server_test.go",
    ],
    embed = [":go_default_library"],
    tags = ["manual"],
    deps = [
        "//vendor/github.com/golang/protobuf/proto:go_default_library",
        "//vendor/golang.org/x/net/context:go_default_library",
        "//vendor/google.golang.org/grpc/balancer:go_default_library",
        "//vendor/google.golang.org/grpc/codes:go_default_library",
        "//vendor/google.golang.org/grpc/connectivity:go_default_library",
        "//vendor/google.golang.org/grpc/credentials:go_default_library",
        "//vendor/google.golang.org/grpc/grpclog/glogger:go_default_library",
        "//vendor/google.golang.org/grpc/keepalive:go_default_library",
        "//vendor/google.golang.org/grpc/naming:go_default_library",
        "//vendor/google.golang.org/grpc/resolver:go_default_library",
        "//vendor/google.golang.org/grpc/resolver/manual:go_default_library",
        "//vendor/google.golang.org/grpc/status:go_default_library",
        "//vendor/google.golang.org/grpc/test/codec_perf:go_default_library",
        "//vendor/google.golang.org/grpc/test/leakcheck:go_default_library",
        "//vendor/google.golang.org/grpc/testdata:go_default_library",
        "//vendor/google.golang.org/grpc/transport:go_default_library",
    ],
)
