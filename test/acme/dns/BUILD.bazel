load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "fixture.go",
        "options.go",
        "suite.go",
        "util.go",
    ],
    data = [
        "//hack/bin:etcd",
        "//hack/bin:kube-apiserver",
        "//hack/bin:kubectl",
    ],
    importpath = "github.com/cert-manager/cert-manager/test/acme/dns",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/acme/webhook:go_default_library",
        "//pkg/acme/webhook/apis/acme/v1alpha1:go_default_library",
        "//pkg/issuer/acme/dns/util:go_default_library",
        "@com_github_miekg_dns//:go_default_library",
        "@io_k8s_api//core/v1:go_default_library",
        "@io_k8s_apiextensions_apiserver//pkg/apis/apiextensions/v1beta1:go_default_library",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:go_default_library",
        "@io_k8s_apimachinery//pkg/util/wait:go_default_library",
        "@io_k8s_client_go//kubernetes:go_default_library",
        "@io_k8s_client_go//rest:go_default_library",
        "@io_k8s_sigs_testing_frameworks//integration:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//test/acme/dns/server:all-srcs",
    ],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
